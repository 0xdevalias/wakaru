{
  "version": 3,
  "sources": ["../node_modules/@jspm/core/nodelibs/browser/process.js", "../node_modules/@jspm/core/nodelibs/browser/buffer.js", "../src/emulation/index.ts", "../src/ApiError.ts", "../node_modules/@jspm/core/nodelibs/browser/chunk-2eac56ff.js", "../node_modules/@jspm/core/nodelibs/browser/chunk-23dbec7b.js", "../node_modules/@jspm/core/nodelibs/browser/path.js", "../src/file.ts", "../src/filesystem.ts", "../src/cred.ts", "../src/emulation/constants.ts", "../src/stats.ts", "../src/inode.ts", "../src/generic/preload_file.ts", "../src/generic/key_value_filesystem.ts", "../src/utils.ts", "../src/backends/backend.ts", "../src/backends/InMemory.ts", "../src/emulation/shared.ts", "../src/emulation/promises.ts", "../src/emulation/callbacks.ts", "../src/emulation/sync.ts", "../src/emulation/fs.ts", "../src/backends/FileSystemAccess.ts", "../src/backends/FolderAdapter.ts", "../src/backends/IndexedDB.ts", "../src/backends/index.ts", "../src/index.ts"],
  "sourcesContent": ["function unimplemented(name) {\r\n  throw new Error('Node.js process ' + name + ' is not supported by JSPM core outside of Node.js');\r\n}\r\n\r\nvar queue = [];\r\nvar draining = false;\r\nvar currentQueue;\r\nvar queueIndex = -1;\r\n\r\nfunction cleanUpNextTick() {\r\n  if (!draining || !currentQueue)\r\n    return;\r\n  draining = false;\r\n  if (currentQueue.length) {\r\n    queue = currentQueue.concat(queue);\r\n  }\r\n  else {\r\n    queueIndex = -1;\r\n  }\r\n  if (queue.length)\r\n    drainQueue();\r\n}\r\n\r\nfunction drainQueue() {\r\n  if (draining)\r\n    return;\r\n  var timeout = setTimeout(cleanUpNextTick, 0);\r\n  draining = true;\r\n\r\n  var len = queue.length;\r\n  while(len) {\r\n    currentQueue = queue;\r\n    queue = [];\r\n    while (++queueIndex < len) {\r\n      if (currentQueue)\r\n        currentQueue[queueIndex].run();\r\n    }\r\n    queueIndex = -1;\r\n    len = queue.length;\r\n  }\r\n  currentQueue = null;\r\n  draining = false;\r\n  clearTimeout(timeout);\r\n}\r\n\r\nfunction nextTick (fun) {\r\n  var args = new Array(arguments.length - 1);\r\n  if (arguments.length > 1) {\r\n    for (var i = 1; i < arguments.length; i++)\r\n      args[i - 1] = arguments[i];\r\n  }\r\n  queue.push(new Item(fun, args));\r\n  if (queue.length === 1 && !draining)\r\n    setTimeout(drainQueue, 0);\r\n}\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n  this.fun = fun;\r\n  this.array = array;\r\n}\r\nItem.prototype.run = function () {\r\n  this.fun.apply(null, this.array);\r\n};\r\n\r\nvar title = 'browser';\r\nvar arch = 'x64';\r\nvar platform = 'browser';\r\nvar env = {\r\n  PATH: '/usr/bin',\r\n  LANG: navigator.language + '.UTF-8',\r\n  PWD: '/',\r\n  HOME: '/home',\r\n  TMP: '/tmp',\r\n};\r\nvar argv = ['/usr/bin/node'];\r\nvar execArgv = [];\r\nvar version = 'v16.8.0';\r\nvar versions = {};\r\n\r\nvar emitWarning = function(message, type) {\r\n  console.warn((type ? (type + ': ') : '') + message);\r\n};\r\n\r\nvar binding = function(name) { unimplemented('binding'); };\r\n\r\nvar umask = function(mask) { return 0; };\r\n\r\nvar cwd = function() { return '/'; };\r\nvar chdir = function(dir) {};\r\n\r\nvar release = {\r\n  name: 'node',\r\n  sourceUrl: '',\r\n  headersUrl: '',\r\n  libUrl: '',\r\n};\r\n\r\nfunction noop() {}\r\n\r\nvar _rawDebug = noop;\r\nvar moduleLoadList = [];\r\nfunction _linkedBinding(name) { unimplemented('_linkedBinding'); }\r\nvar domain = {};\r\nvar _exiting = false;\r\nvar config = {};\r\nfunction dlopen(name) { unimplemented('dlopen'); }\r\nfunction _getActiveRequests() { return []; }\r\nfunction _getActiveHandles() { return []; }\r\nvar reallyExit = noop;\r\nvar _kill = noop;\r\nvar cpuUsage = function() { return {}; };\r\nvar resourceUsage = cpuUsage;\r\nvar memoryUsage = cpuUsage;\r\nvar kill = noop;\r\nvar exit = noop;\r\nvar openStdin = noop;\r\nvar allowedNodeEnvironmentFlags = {};\r\nfunction assert(condition, message) {\r\n  if (!condition) throw new Error(message || 'assertion error');\r\n}\r\nvar features = {\r\n  inspector: false,\r\n  debug: false,\r\n  uv: false,\r\n  ipv6: false,\r\n  tls_alpn: false,\r\n  tls_sni: false,\r\n  tls_ocsp: false,\r\n  tls: false,\r\n  cached_builtins: true,\r\n};\r\nvar _fatalExceptions = noop;\r\nvar setUncaughtExceptionCaptureCallback = noop;\r\nfunction hasUncaughtExceptionCaptureCallback() { return false; }var _tickCallback = noop;\r\nvar _debugProcess = noop;\r\nvar _debugEnd = noop;\r\nvar _startProfilerIdleNotifier = noop;\r\nvar _stopProfilerIdleNotifier = noop;\r\nvar stdout = undefined;\r\nvar stderr = undefined;\r\nvar stdin = undefined;\r\nvar abort = noop;\r\nvar pid = 2;\r\nvar ppid = 1;\r\nvar execPath = '/bin/usr/node';\r\nvar debugPort = 9229;\r\nvar argv0 = 'node';\r\nvar _preload_modules = [];\r\nvar setSourceMapsEnabled = noop;\r\n\r\nvar _performance = {\r\n  now: typeof performance !== 'undefined' ? performance.now.bind(performance) : undefined,\r\n  timing: typeof performance !== 'undefined' ? performance.timing : undefined,\r\n};\r\nif (_performance.now === undefined) {\r\n  var nowOffset = Date.now();\r\n\r\n  if (_performance.timing && _performance.timing.navigationStart) {\r\n    nowOffset = _performance.timing.navigationStart;\r\n  }\r\n  _performance.now = () => Date.now() - nowOffset;\r\n}\r\n\r\nfunction uptime() {\r\n  return _performance.now() / 1000;\r\n}\r\n\r\nvar nanoPerSec = 1000000000;\r\nfunction hrtime(previousTimestamp) {\r\n  var baseNow = Math.floor((Date.now() - _performance.now()) * 1e-3);\r\n  var clocktime = _performance.now() * 1e-3;\r\n  var seconds = Math.floor(clocktime) + baseNow;\r\n  var nanoseconds = Math.floor((clocktime % 1) * 1e9);\r\n  if (previousTimestamp) {\r\n    seconds = seconds - previousTimestamp[0];\r\n    nanoseconds = nanoseconds - previousTimestamp[1];\r\n    if (nanoseconds < 0) {\r\n      seconds--;\r\n      nanoseconds += nanoPerSec;\r\n    }\r\n  }\r\n  return [seconds, nanoseconds];\r\n}hrtime.bigint = function(time) {\r\n  var diff = hrtime(time);\r\n  if (typeof BigInt === 'undefined') {\r\n    return diff[0] * nanoPerSec + diff[1];\r\n  }\r\n  return BigInt(diff[0] * nanoPerSec) + BigInt(diff[1]);\r\n};\r\n\r\nvar _maxListeners = 10;\r\nvar _events = {};\r\nvar _eventsCount = 0;\r\nfunction on () { return process }var addListener = on;\r\nvar once = on;\r\nvar off = on;\r\nvar removeListener = on;\r\nvar removeAllListeners = on;\r\nvar emit = noop;\r\nvar prependListener = on;\r\nvar prependOnceListener = on;\r\nfunction listeners (name) { return []; }\r\nvar process = {\r\n  version,\r\n  versions,\r\n  arch,\r\n  platform,\r\n  release,\r\n  _rawDebug,\r\n  moduleLoadList,\r\n  binding,\r\n  _linkedBinding,\r\n  _events,\r\n  _eventsCount,\r\n  _maxListeners,\r\n  on,\r\n  addListener,\r\n  once,\r\n  off,\r\n  removeListener,\r\n  removeAllListeners,\r\n  emit,\r\n  prependListener,\r\n  prependOnceListener,\r\n  listeners,\r\n  domain,\r\n  _exiting,\r\n  config,\r\n  dlopen,\r\n  uptime,\r\n  _getActiveRequests,\r\n  _getActiveHandles,\r\n  reallyExit,\r\n  _kill,\r\n  cpuUsage,\r\n  resourceUsage,\r\n  memoryUsage,\r\n  kill,\r\n  exit,\r\n  openStdin,\r\n  allowedNodeEnvironmentFlags,\r\n  assert,\r\n  features,\r\n  _fatalExceptions,\r\n  setUncaughtExceptionCaptureCallback,\r\n  hasUncaughtExceptionCaptureCallback,\r\n  emitWarning,\r\n  nextTick,\r\n  _tickCallback,\r\n  _debugProcess,\r\n  _debugEnd,\r\n  _startProfilerIdleNotifier,\r\n  _stopProfilerIdleNotifier,\r\n  stdout,\r\n  stdin,\r\n  stderr,\r\n  abort,\r\n  umask,\r\n  chdir,\r\n  cwd,\r\n  env,\r\n  title,\r\n  argv,\r\n  execArgv,\r\n  pid,\r\n  ppid,\r\n  execPath,\r\n  debugPort,\r\n  hrtime,\r\n  argv0,\r\n  _preload_modules,\r\n  setSourceMapsEnabled,\r\n};\n\nexport { _debugEnd, _debugProcess, _events, _eventsCount, _exiting, _fatalExceptions, _getActiveHandles, _getActiveRequests, _kill, _linkedBinding, _maxListeners, _preload_modules, _rawDebug, _startProfilerIdleNotifier, _stopProfilerIdleNotifier, _tickCallback, abort, addListener, allowedNodeEnvironmentFlags, arch, argv, argv0, assert, binding, chdir, config, cpuUsage, cwd, debugPort, process as default, dlopen, domain, emit, emitWarning, env, execArgv, execPath, exit, features, hasUncaughtExceptionCaptureCallback, hrtime, kill, listeners, memoryUsage, moduleLoadList, nextTick, off, on, once, openStdin, pid, platform, ppid, prependListener, prependOnceListener, reallyExit, release, removeAllListeners, removeListener, resourceUsage, setSourceMapsEnabled, setUncaughtExceptionCaptureCallback, stderr, stdin, stdout, title, umask, uptime, version, versions };\n", "var exports$3 = {},\n    _dewExec$2 = false;\nfunction dew$2() {\n  if (_dewExec$2) return exports$3;\n  _dewExec$2 = true;\n  exports$3.byteLength = byteLength;\n  exports$3.toByteArray = toByteArray;\n  exports$3.fromByteArray = fromByteArray;\n  var lookup = [];\n  var revLookup = [];\n  var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n  var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  } // Support decoding URL-safe base64 strings, as Node.js does.\n  // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\n  revLookup[\"-\".charCodeAt(0)] = 62;\n  revLookup[\"_\".charCodeAt(0)] = 63;\n\n  function getLens(b64) {\n    var len = b64.length;\n\n    if (len % 4 > 0) {\n      throw new Error(\"Invalid string. Length must be a multiple of 4\");\n    } // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n    var validLen = b64.indexOf(\"=\");\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [validLen, placeHoldersLen];\n  } // base64 is 4/3 + up to two characters of the original data\n\n\n  function byteLength(b64) {\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n  }\n\n  function _byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n  }\n\n  function toByteArray(b64) {\n    var tmp;\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n\n    for (i = 0; i < len; i += 4) {\n      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n      arr[curByte++] = tmp >> 16 & 255;\n      arr[curByte++] = tmp >> 8 & 255;\n      arr[curByte++] = tmp & 255;\n    }\n\n    if (placeHoldersLen === 2) {\n      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n      arr[curByte++] = tmp & 255;\n    }\n\n    if (placeHoldersLen === 1) {\n      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n      arr[curByte++] = tmp >> 8 & 255;\n      arr[curByte++] = tmp & 255;\n    }\n\n    return arr;\n  }\n\n  function tripletToBase64(num) {\n    return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n  }\n\n  function encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n\n    for (var i = start; i < end; i += 3) {\n      tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);\n      output.push(tripletToBase64(tmp));\n    }\n\n    return output.join(\"\");\n  }\n\n  function fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n    var parts = [];\n    var maxChunkLength = 16383; // must be multiple of 3\n    // go through the array every three bytes, we'll deal with trailing stuff later\n\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n    if (extraBytes === 1) {\n      tmp = uint8[len - 1];\n      parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n    } else if (extraBytes === 2) {\n      tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n      parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\");\n    }\n\n    return parts.join(\"\");\n  }\n\n  return exports$3;\n}\n\nvar exports$2 = {},\n    _dewExec$1 = false;\nfunction dew$1() {\n  if (_dewExec$1) return exports$2;\n  _dewExec$1 = true;\n\n  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n  exports$2.read = function (buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    if (e === 0) {\n      e = 1 - eBias;\n    } else if (e === eMax) {\n      return m ? NaN : (s ? -1 : 1) * Infinity;\n    } else {\n      m = m + Math.pow(2, mLen);\n      e = e - eBias;\n    }\n\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n  };\n\n  exports$2.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n\n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0;\n      e = eMax;\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2);\n\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--;\n        c *= 2;\n      }\n\n      if (e + eBias >= 1) {\n        value += rt / c;\n      } else {\n        value += rt * Math.pow(2, 1 - eBias);\n      }\n\n      if (value * c >= 2) {\n        e++;\n        c /= 2;\n      }\n\n      if (e + eBias >= eMax) {\n        m = 0;\n        e = eMax;\n      } else if (e + eBias >= 1) {\n        m = (value * c - 1) * Math.pow(2, mLen);\n        e = e + eBias;\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n        e = 0;\n      }\n    }\n\n    for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {}\n\n    e = e << mLen | m;\n    eLen += mLen;\n\n    for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {}\n\n    buffer[offset + i - d] |= s * 128;\n  };\n\n  return exports$2;\n}\n\nvar exports$1 = {},\n    _dewExec = false;\nfunction dew() {\n  if (_dewExec) return exports$1;\n  _dewExec = true;\n\n  const base64 = dew$2();\n\n  const ieee754 = dew$1();\n\n  const customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") // eslint-disable-line dot-notation\n  : null;\n  exports$1.Buffer = Buffer;\n  exports$1.SlowBuffer = SlowBuffer;\n  exports$1.INSPECT_MAX_BYTES = 50;\n  const K_MAX_LENGTH = 2147483647;\n  exports$1.kMaxLength = K_MAX_LENGTH;\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n    console.error(\"This browser lacks typed array (Uint8Array) support which is required by \" + \"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\n  }\n\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      const arr = new Uint8Array(1);\n      const proto = {\n        foo: function () {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  Object.defineProperty(Buffer.prototype, \"parent\", {\n    enumerable: true,\n    get: function () {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, \"offset\", {\n    enumerable: true,\n    get: function () {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError(\"The value \\\"\" + length + \"\\\" is invalid for option \\\"size\\\"\");\n    } // Return an augmented `Uint8Array` instance\n\n\n    const buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === \"number\") {\n      if (typeof encodingOrOffset === \"string\") {\n        throw new TypeError(\"The \\\"string\\\" argument must be of type string. Received type number\");\n      }\n\n      return allocUnsafe(arg);\n    }\n\n    return from(arg, encodingOrOffset, length);\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === \"string\") {\n      return fromString(value, encodingOrOffset);\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayView(value);\n    }\n\n    if (value == null) {\n      throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof value);\n    }\n\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof value === \"number\") {\n      throw new TypeError(\"The \\\"value\\\" argument must not be of type number. Received type number\");\n    }\n\n    const valueOf = value.valueOf && value.valueOf();\n\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n\n    const b = fromObject(value);\n    if (b) return b;\n\n    if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") {\n      return Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n    }\n\n    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof value);\n  }\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n\n\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n\n\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n\n  function assertSize(size) {\n    if (typeof size !== \"number\") {\n      throw new TypeError(\"\\\"size\\\" argument must be of type number\");\n    } else if (size < 0) {\n      throw new RangeError(\"The value \\\"\" + size + \"\\\" is invalid for option \\\"size\\\"\");\n    }\n  }\n\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpreted as a start offset.\n      return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n\n    return createBuffer(size);\n  }\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n\n\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n\n\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n\n\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n\n  function fromString(string, encoding) {\n    if (typeof encoding !== \"string\" || encoding === \"\") {\n      encoding = \"utf8\";\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError(\"Unknown encoding: \" + encoding);\n    }\n\n    const length = byteLength(string, encoding) | 0;\n    let buf = createBuffer(length);\n    const actual = buf.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n\n    return buf;\n  }\n\n  function fromArrayLike(array) {\n    const length = array.length < 0 ? 0 : checked(array.length) | 0;\n    const buf = createBuffer(length);\n\n    for (let i = 0; i < length; i += 1) {\n      buf[i] = array[i] & 255;\n    }\n\n    return buf;\n  }\n\n  function fromArrayView(arrayView) {\n    if (isInstance(arrayView, Uint8Array)) {\n      const copy = new Uint8Array(arrayView);\n      return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n\n    return fromArrayLike(arrayView);\n  }\n\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError(\"\\\"offset\\\" is outside of buffer bounds\");\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError(\"\\\"length\\\" is outside of buffer bounds\");\n    }\n\n    let buf;\n\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    } // Return an augmented `Uint8Array` instance\n\n\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      const len = checked(obj.length) | 0;\n      const buf = createBuffer(len);\n\n      if (buf.length === 0) {\n        return buf;\n      }\n\n      obj.copy(buf, 0, 0, len);\n      return buf;\n    }\n\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== \"number\" || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === \"Buffer\" && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + K_MAX_LENGTH.toString(16) + \" bytes\");\n    }\n\n    return length | 0;\n  }\n\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n\n    return Buffer.alloc(+length);\n  }\n\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError(\"The \\\"buf1\\\", \\\"buf2\\\" arguments must be one of type Buffer or Uint8Array\");\n    }\n\n    if (a === b) return 0;\n    let x = a.length;\n    let y = b.length;\n\n    for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case \"hex\":\n      case \"utf8\":\n      case \"utf-8\":\n      case \"ascii\":\n      case \"latin1\":\n      case \"binary\":\n      case \"base64\":\n      case \"ucs2\":\n      case \"ucs-2\":\n      case \"utf16le\":\n      case \"utf-16le\":\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError(\"\\\"list\\\" argument must be an Array of Buffers\");\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n\n    let i;\n\n    if (length === undefined) {\n      length = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    const buffer = Buffer.allocUnsafe(length);\n    let pos = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      let buf = list[i];\n\n      if (isInstance(buf, Uint8Array)) {\n        if (pos + buf.length > buffer.length) {\n          if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n          buf.copy(buffer, pos);\n        } else {\n          Uint8Array.prototype.set.call(buffer, buf, pos);\n        }\n      } else if (!Buffer.isBuffer(buf)) {\n        throw new TypeError(\"\\\"list\\\" argument must be an Array of Buffers\");\n      } else {\n        buf.copy(buffer, pos);\n      }\n\n      pos += buf.length;\n    }\n\n    return buffer;\n  };\n\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n\n    if (typeof string !== \"string\") {\n      throw new TypeError(\"The \\\"string\\\" argument must be one of type string, Buffer, or ArrayBuffer. \" + \"Received type \" + typeof string);\n    }\n\n    const len = string.length;\n    const mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n    let loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n          return len;\n\n        case \"utf8\":\n        case \"utf-8\":\n          return utf8ToBytes(string).length;\n\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return len * 2;\n\n        case \"hex\":\n          return len >>> 1;\n\n        case \"base64\":\n          return base64ToBytes(string).length;\n\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n\n          encoding = (\"\" + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  Buffer.byteLength = byteLength;\n\n  function slowToString(encoding, start, end) {\n    let loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n    if (start === undefined || start < 0) {\n      start = 0;\n    } // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n\n\n    if (start > this.length) {\n      return \"\";\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return \"\";\n    } // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return \"\";\n    }\n\n    if (!encoding) encoding = \"utf8\";\n\n    while (true) {\n      switch (encoding) {\n        case \"hex\":\n          return hexSlice(this, start, end);\n\n        case \"utf8\":\n        case \"utf-8\":\n          return utf8Slice(this, start, end);\n\n        case \"ascii\":\n          return asciiSlice(this, start, end);\n\n        case \"latin1\":\n        case \"binary\":\n          return latin1Slice(this, start, end);\n\n        case \"base64\":\n          return base64Slice(this, start, end);\n\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return utf16leSlice(this, start, end);\n\n        default:\n          if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n          encoding = (encoding + \"\").toLowerCase();\n          loweredCase = true;\n      }\n    }\n  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n\n\n  Buffer.prototype._isBuffer = true;\n\n  function swap(b, n, m) {\n    const i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16() {\n    const len = this.length;\n\n    if (len % 2 !== 0) {\n      throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n    }\n\n    for (let i = 0; i < len; i += 2) {\n      swap(this, i, i + 1);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap32 = function swap32() {\n    const len = this.length;\n\n    if (len % 4 !== 0) {\n      throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n    }\n\n    for (let i = 0; i < len; i += 4) {\n      swap(this, i, i + 3);\n      swap(this, i + 1, i + 2);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap64 = function swap64() {\n    const len = this.length;\n\n    if (len % 8 !== 0) {\n      throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n    }\n\n    for (let i = 0; i < len; i += 8) {\n      swap(this, i, i + 7);\n      swap(this, i + 1, i + 6);\n      swap(this, i + 2, i + 5);\n      swap(this, i + 3, i + 4);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.toString = function toString() {\n    const length = this.length;\n    if (length === 0) return \"\";\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n\n  Buffer.prototype.inspect = function inspect() {\n    let str = \"\";\n    const max = exports$1.INSPECT_MAX_BYTES;\n    str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n    if (this.length > max) str += \" ... \";\n    return \"<Buffer \" + str + \">\";\n  };\n\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError(\"The \\\"target\\\" argument must be one of type Buffer or Uint8Array. \" + \"Received type \" + typeof target);\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError(\"out of range index\");\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n\n    if (start >= end) {\n      return 1;\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    let x = thisEnd - thisStart;\n    let y = end - start;\n    const len = Math.min(x, y);\n    const thisCopy = this.slice(thisStart, thisEnd);\n    const targetCopy = target.slice(start, end);\n\n    for (let i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n\n\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n    if (typeof byteOffset === \"string\") {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 2147483647) {\n      byteOffset = 2147483647;\n    } else if (byteOffset < -2147483648) {\n      byteOffset = -2147483648;\n    }\n\n    byteOffset = +byteOffset; // Coerce to Number.\n\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    } // Normalize val\n\n\n    if (typeof val === \"string\") {\n      val = Buffer.from(val, encoding);\n    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === \"number\") {\n      val = val & 255; // Search for a byte value [0-255]\n\n      if (typeof Uint8Array.prototype.indexOf === \"function\") {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n\n    throw new TypeError(\"val must be string, number or Buffer\");\n  }\n\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    let indexSize = 1;\n    let arrLength = arr.length;\n    let valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n\n      if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n\n    let i;\n\n    if (dir) {\n      let foundIndex = -1;\n\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n      for (i = byteOffset; i >= 0; i--) {\n        let found = true;\n\n        for (let j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n\n        if (found) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    const remaining = buf.length - offset;\n\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    const strLen = string.length;\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n\n    let i;\n\n    for (i = 0; i < length; ++i) {\n      const parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n\n    return i;\n  }\n\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = \"utf8\";\n      length = this.length;\n      offset = 0; // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === \"string\") {\n      encoding = offset;\n      length = this.length;\n      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = \"utf8\";\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n    }\n\n    const remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError(\"Attempt to write outside buffer bounds\");\n    }\n\n    if (!encoding) encoding = \"utf8\";\n    let loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case \"hex\":\n          return hexWrite(this, string, offset, length);\n\n        case \"utf8\":\n        case \"utf-8\":\n          return utf8Write(this, string, offset, length);\n\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n          return asciiWrite(this, string, offset, length);\n\n        case \"base64\":\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return ucs2Write(this, string, offset, length);\n\n        default:\n          if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n          encoding = (\"\" + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: \"Buffer\",\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64.fromByteArray(buf);\n    } else {\n      return base64.fromByteArray(buf.slice(start, end));\n    }\n  }\n\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    const res = [];\n    let i = start;\n\n    while (i < end) {\n      const firstByte = buf[i];\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n\n      if (i + bytesPerSequence <= end) {\n        let secondByte, thirdByte, fourthByte, tempCodePoint;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 128) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = buf[i + 1];\n\n            if ((secondByte & 192) === 128) {\n              tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n\n              if (tempCodePoint > 127) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n\n            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n              tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n\n              if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n\n            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n              tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n\n              if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 65536;\n        res.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res);\n  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n\n\n  const MAX_ARGUMENTS_LENGTH = 4096;\n\n  function decodeCodePointsArray(codePoints) {\n    const len = codePoints.length;\n\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n    let res = \"\";\n    let i = 0;\n\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n\n    return res;\n  }\n\n  function asciiSlice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n\n    for (let i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 127);\n    }\n\n    return ret;\n  }\n\n  function latin1Slice(buf, start, end) {\n    let ret = \"\";\n    end = Math.min(buf.length, end);\n\n    for (let i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i]);\n    }\n\n    return ret;\n  }\n\n  function hexSlice(buf, start, end) {\n    const len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    let out = \"\";\n\n    for (let i = start; i < end; ++i) {\n      out += hexSliceLookupTable[buf[i]];\n    }\n\n    return out;\n  }\n\n  function utf16leSlice(buf, start, end) {\n    const bytes = buf.slice(start, end);\n    let res = \"\"; // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n\n    for (let i = 0; i < bytes.length - 1; i += 2) {\n      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    }\n\n    return res;\n  }\n\n  Buffer.prototype.slice = function slice(start, end) {\n    const len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n    const newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n\n\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n    if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n  }\n\n  Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n\n    while (++i < byteLength && (mul *= 256)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    let val = this[offset + --byteLength];\n    let mul = 1;\n\n    while (byteLength > 0 && (mul *= 256)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n\n  Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n\n  Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n\n  Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n  };\n\n  Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n\n  Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n    const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n  });\n  Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  });\n\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let val = this[offset];\n    let mul = 1;\n    let i = 0;\n\n    while (++i < byteLength && (mul *= 256)) {\n      val += this[offset + i] * mul;\n    }\n\n    mul *= 128;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    let i = byteLength;\n    let mul = 1;\n    let val = this[offset + --i];\n\n    while (i > 0 && (mul *= 256)) {\n      val += this[offset + --i] * mul;\n    }\n\n    mul *= 128;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 128)) return this[offset];\n    return (255 - this[offset] + 1) * -1;\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    const val = this[offset] | this[offset + 1] << 8;\n    return val & 32768 ? val | 4294901760 : val;\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    const val = this[offset + 1] | this[offset] << 8;\n    return val & 32768 ? val | 4294901760 : val;\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n\n  Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24); // Overflow\n\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n  });\n  Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, \"offset\");\n    const first = this[offset];\n    const last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n  });\n\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, true, 23, 4);\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, false, 23, 4);\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, true, 52, 8);\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, false, 52, 8);\n  };\n\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError(\"\\\"buffer\\\" argument must be a Buffer instance\");\n    if (value > max || value < min) throw new RangeError(\"\\\"value\\\" argument is out of bounds\");\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n  }\n\n  Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    let mul = 1;\n    let i = 0;\n    this[offset] = value & 255;\n\n    while (++i < byteLength && (mul *= 256)) {\n      this[offset + i] = value / mul & 255;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    let i = byteLength - 1;\n    let mul = 1;\n    this[offset + i] = value & 255;\n\n    while (--i >= 0 && (mul *= 256)) {\n      this[offset + i] = value / mul & 255;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 255, 0);\n    this[offset] = value & 255;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n    this[offset] = value & 255;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 255;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 255;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 255;\n    return offset + 4;\n  };\n\n  function wrtBigUInt64LE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(4294967295));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n  }\n\n  function wrtBigUInt64BE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    let lo = Number(value & BigInt(4294967295));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n  });\n  Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n  });\n\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      const limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    let i = 0;\n    let mul = 1;\n    let sub = 0;\n    this[offset] = value & 255;\n\n    while (++i < byteLength && (mul *= 256)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 255;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      const limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    let i = byteLength - 1;\n    let mul = 1;\n    let sub = 0;\n    this[offset + i] = value & 255;\n\n    while (--i >= 0 && (mul *= 256)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 255;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 127, -128);\n    if (value < 0) value = 255 + value + 1;\n    this[offset] = value & 255;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n    this[offset] = value & 255;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 255;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n    this[offset] = value & 255;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n    if (value < 0) value = 4294967295 + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 255;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n    return wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n  });\n  Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n    return wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n  });\n\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    if (offset < 0) throw new RangeError(\"Index out of range\");\n  }\n\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n    if (targetStart < 0) {\n      throw new RangeError(\"targetStart out of bounds\");\n    }\n\n    if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n    if (end < 0) throw new RangeError(\"sourceEnd out of bounds\"); // Are we oob?\n\n    if (end > this.length) end = this.length;\n\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    const len = end - start;\n\n    if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n\n    return len;\n  }; // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === \"string\") {\n      if (typeof start === \"string\") {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === \"string\") {\n        encoding = end;\n        end = this.length;\n      }\n\n      if (encoding !== undefined && typeof encoding !== \"string\") {\n        throw new TypeError(\"encoding must be a string\");\n      }\n\n      if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) {\n        throw new TypeError(\"Unknown encoding: \" + encoding);\n      }\n\n      if (val.length === 1) {\n        const code = val.charCodeAt(0);\n\n        if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = code;\n        }\n      }\n    } else if (typeof val === \"number\") {\n      val = val & 255;\n    } else if (typeof val === \"boolean\") {\n      val = Number(val);\n    } // Invalid ranges are not set to a default, so can range check early.\n\n\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError(\"Out of range index\");\n    }\n\n    if (end <= start) {\n      return this;\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    let i;\n\n    if (typeof val === \"number\") {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      const len = bytes.length;\n\n      if (len === 0) {\n        throw new TypeError(\"The value \\\"\" + val + \"\\\" is invalid for argument \\\"value\\\"\");\n      }\n\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len];\n      }\n    }\n\n    return this;\n  }; // CUSTOM ERRORS\n  // =============\n  // Simplified versions from Node, changed for Buffer-only usage\n\n\n  const errors = {};\n\n  function E(sym, getMessage, Base) {\n    errors[sym] = class NodeError extends Base {\n      constructor() {\n        super();\n        Object.defineProperty(this, \"message\", {\n          value: getMessage.apply(this, arguments),\n          writable: true,\n          configurable: true\n        }); // Add the error code to the name to include it in the stack trace.\n\n        this.name = `${this.name} [${sym}]`; // Access the stack to generate the error message including the error code\n        // from the name.\n\n        this.stack; // eslint-disable-line no-unused-expressions\n        // Reset the name to the actual name.\n\n        delete this.name;\n      }\n\n      get code() {\n        return sym;\n      }\n\n      set code(value) {\n        Object.defineProperty(this, \"code\", {\n          configurable: true,\n          enumerable: true,\n          value,\n          writable: true\n        });\n      }\n\n      toString() {\n        return `${this.name} [${sym}]: ${this.message}`;\n      }\n\n    };\n  }\n\n  E(\"ERR_BUFFER_OUT_OF_BOUNDS\", function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`;\n    }\n\n    return \"Attempt to access memory outside buffer bounds\";\n  }, RangeError);\n  E(\"ERR_INVALID_ARG_TYPE\", function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n  }, TypeError);\n  E(\"ERR_OUT_OF_RANGE\", function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === \"bigint\") {\n      received = String(input);\n\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received);\n      }\n\n      received += \"n\";\n    }\n\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }, RangeError);\n\n  function addNumericalSeparator(val) {\n    let res = \"\";\n    let i = val.length;\n    const start = val[0] === \"-\" ? 1 : 0;\n\n    for (; i >= start + 4; i -= 3) {\n      res = `_${val.slice(i - 3, i)}${res}`;\n    }\n\n    return `${val.slice(0, i)}${res}`;\n  } // CHECK FUNCTIONS\n  // ===============\n\n\n  function checkBounds(buf, offset, byteLength) {\n    validateNumber(offset, \"offset\");\n\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n      boundsError(offset, buf.length - (byteLength + 1));\n    }\n  }\n\n  function checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n      const n = typeof min === \"bigint\" ? \"n\" : \"\";\n      let range;\n\n      if (byteLength > 3) {\n        if (min === 0 || min === BigInt(0)) {\n          range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n        } else {\n          range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` + `${(byteLength + 1) * 8 - 1}${n}`;\n        }\n      } else {\n        range = `>= ${min}${n} and <= ${max}${n}`;\n      }\n\n      throw new errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n    }\n\n    checkBounds(buf, offset, byteLength);\n  }\n\n  function validateNumber(value, name) {\n    if (typeof value !== \"number\") {\n      throw new errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n    }\n  }\n\n  function boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n      validateNumber(value, type);\n      throw new errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n    }\n\n    if (length < 0) {\n      throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n\n    throw new errors.ERR_OUT_OF_RANGE(type || \"offset\", `>= ${type ? 1 : 0} and <= ${length}`, value);\n  } // HELPER FUNCTIONS\n  // ================\n\n\n  const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split(\"=\")[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n    str = str.trim().replace(INVALID_BASE64_RE, \"\"); // Node converts strings with length < 2 to ''\n\n    if (str.length < 2) return \"\"; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n    while (str.length % 4 !== 0) {\n      str = str + \"=\";\n    }\n\n    return str;\n  }\n\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    let codePoint;\n    const length = string.length;\n    let leadSurrogate = null;\n    const bytes = [];\n\n    for (let i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i); // is surrogate component\n\n      if (codePoint > 55295 && codePoint < 57344) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 56319) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n            continue;\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n            continue;\n          } // valid lead\n\n\n          leadSurrogate = codePoint;\n          continue;\n        } // 2 leads in a row\n\n\n        if (codePoint < 56320) {\n          if ((units -= 3) > -1) bytes.push(239, 191, 189);\n          leadSurrogate = codePoint;\n          continue;\n        } // valid surrogate pair\n\n\n        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(239, 191, 189);\n      }\n\n      leadSurrogate = null; // encode utf8\n\n      if (codePoint < 128) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 2048) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n      } else if (codePoint < 65536) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n      } else if (codePoint < 1114112) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n      } else {\n        throw new Error(\"Invalid code point\");\n      }\n    }\n\n    return bytes;\n  }\n\n  function asciiToBytes(str) {\n    const byteArray = [];\n\n    for (let i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 255);\n    }\n\n    return byteArray;\n  }\n\n  function utf16leToBytes(str, units) {\n    let c, hi, lo;\n    const byteArray = [];\n\n    for (let i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(i);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray;\n  }\n\n  function base64ToBytes(str) {\n    return base64.toByteArray(base64clean(str));\n  }\n\n  function blitBuffer(src, dst, offset, length) {\n    let i;\n\n    for (i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n\n    return i;\n  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n\n\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  } // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n\n\n  const hexSliceLookupTable = function () {\n    const alphabet = \"0123456789abcdef\";\n    const table = new Array(256);\n\n    for (let i = 0; i < 16; ++i) {\n      const i16 = i * 16;\n\n      for (let j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[i] + alphabet[j];\n      }\n    }\n\n    return table;\n  }(); // Return not function with Error if BigInt not supported\n\n\n  function defineBigIntMethod(fn) {\n    return typeof BigInt === \"undefined\" ? BufferBigIntNotDefined : fn;\n  }\n\n  function BufferBigIntNotDefined() {\n    throw new Error(\"BigInt not supported\");\n  }\n\n  return exports$1;\n}\n\nconst exports = dew();\nexports['Buffer']; exports['SlowBuffer']; exports['INSPECT_MAX_BYTES']; exports['kMaxLength'];\n\nvar Buffer = exports.Buffer;\r\nvar INSPECT_MAX_BYTES = exports.INSPECT_MAX_BYTES;\r\nvar kMaxLength = exports.kMaxLength;\n\nexport { Buffer, INSPECT_MAX_BYTES, exports as default, kMaxLength };\n", "export * from './callbacks';\nexport * from './sync';\nexport * as promises from './promises';\nexport * as constants from './constants';\nexport { initialize, getMount, getMounts, mount, umount, _toUnixTimestamp } from './shared';\n", "import { Buffer } from 'buffer';\n/**\n * Standard libc error codes. Add more to this enum and ErrorStrings as they are\n * needed.\n * @url http://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n */\nexport enum ErrorCode {\n\tEPERM = 1,\n\tENOENT = 2,\n\tEIO = 5,\n\tEBADF = 9,\n\tEACCES = 13,\n\tEBUSY = 16,\n\tEEXIST = 17,\n\tENOTDIR = 20,\n\tEISDIR = 21,\n\tEINVAL = 22,\n\tEFBIG = 27,\n\tENOSPC = 28,\n\tEROFS = 30,\n\tENOTEMPTY = 39,\n\tENOTSUP = 95,\n}\n\n/**\n * Strings associated with each error code.\n * @hidden\n */\nexport const ErrorStrings: { [code: string | number]: string } = {};\nErrorStrings[ErrorCode.EPERM] = 'Operation not permitted.';\nErrorStrings[ErrorCode.ENOENT] = 'No such file or directory.';\nErrorStrings[ErrorCode.EIO] = 'Input/output error.';\nErrorStrings[ErrorCode.EBADF] = 'Bad file descriptor.';\nErrorStrings[ErrorCode.EACCES] = 'Permission denied.';\nErrorStrings[ErrorCode.EBUSY] = 'Resource busy or locked.';\nErrorStrings[ErrorCode.EEXIST] = 'File exists.';\nErrorStrings[ErrorCode.ENOTDIR] = 'File is not a directory.';\nErrorStrings[ErrorCode.EISDIR] = 'File is a directory.';\nErrorStrings[ErrorCode.EINVAL] = 'Invalid argument.';\nErrorStrings[ErrorCode.EFBIG] = 'File is too big.';\nErrorStrings[ErrorCode.ENOSPC] = 'No space left on disk.';\nErrorStrings[ErrorCode.EROFS] = 'Cannot modify a read-only file system.';\nErrorStrings[ErrorCode.ENOTEMPTY] = 'Directory is not empty.';\nErrorStrings[ErrorCode.ENOTSUP] = 'Operation is not supported.';\n\ninterface ApiErrorJSON {\n\terrno: ErrorCode;\n\tmessage: string;\n\tpath: string;\n\tcode: string;\n\tstack: string;\n}\n\n/**\n * Represents a BrowserFS error. Passed back to applications after a failed\n * call to the BrowserFS API.\n */\nexport class ApiError extends Error implements NodeJS.ErrnoException {\n\tpublic static fromJSON(json: ApiErrorJSON): ApiError {\n\t\tconst err = new ApiError(json.errno, json.message, json.path);\n\t\terr.code = json.code;\n\t\terr.stack = json.stack;\n\t\treturn err;\n\t}\n\n\t/**\n\t * Creates an ApiError object from a buffer.\n\t */\n\tpublic static fromBuffer(buffer: Buffer, i: number = 0): ApiError {\n\t\treturn ApiError.fromJSON(JSON.parse(buffer.toString('utf8', i + 4, i + 4 + buffer.readUInt32LE(i))));\n\t}\n\n\tpublic static FileError(code: ErrorCode, p: string): ApiError {\n\t\treturn new ApiError(code, ErrorStrings[code], p);\n\t}\n\n\tpublic static EACCES(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.EACCES, path);\n\t}\n\n\tpublic static ENOENT(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.ENOENT, path);\n\t}\n\n\tpublic static EEXIST(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.EEXIST, path);\n\t}\n\n\tpublic static EISDIR(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.EISDIR, path);\n\t}\n\n\tpublic static ENOTDIR(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.ENOTDIR, path);\n\t}\n\n\tpublic static EPERM(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.EPERM, path);\n\t}\n\n\tpublic static ENOTEMPTY(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.ENOTEMPTY, path);\n\t}\n\n\tpublic errno: ErrorCode;\n\tpublic code: string;\n\tpublic path?: string;\n\t// Unsupported.\n\tpublic syscall: string = '';\n\tpublic stack?: string;\n\n\t/**\n\t * Represents a BrowserFS error. Passed back to applications after a failed\n\t * call to the BrowserFS API.\n\t *\n\t * Error codes mirror those returned by regular Unix file operations, which is\n\t * what Node returns.\n\t * @constructor ApiError\n\t * @param type The type of the error.\n\t * @param [message] A descriptive error message.\n\t */\n\tconstructor(type: ErrorCode, message: string = ErrorStrings[type], path?: string) {\n\t\tsuper(message);\n\t\tthis.errno = type;\n\t\tthis.code = ErrorCode[type];\n\t\tthis.path = path;\n\t\tthis.message = `Error: ${this.code}: ${message}${this.path ? `, '${this.path}'` : ''}`;\n\t}\n\n\t/**\n\t * @return A friendly error message.\n\t */\n\tpublic toString(): string {\n\t\treturn this.message;\n\t}\n\n\tpublic toJSON(): any {\n\t\treturn {\n\t\t\terrno: this.errno,\n\t\t\tcode: this.code,\n\t\t\tpath: this.path,\n\t\t\tstack: this.stack,\n\t\t\tmessage: this.message,\n\t\t};\n\t}\n\n\t/**\n\t * Writes the API error into a buffer.\n\t */\n\tpublic writeToBuffer(buffer: Buffer = Buffer.alloc(this.bufferSize()), i: number = 0): Buffer {\n\t\tconst bytesWritten = buffer.write(JSON.stringify(this.toJSON()), i + 4);\n\t\tbuffer.writeUInt32LE(bytesWritten, i);\n\t\treturn buffer;\n\t}\n\n\t/**\n\t * The size of the API error in buffer-form in bytes.\n\t */\n\tpublic bufferSize(): number {\n\t\t// 4 bytes for string length.\n\t\treturn 4 + Buffer.byteLength(JSON.stringify(this.toJSON()));\n\t}\n}\n", "var exports = {},\n    _dewExec = false;\n\nvar _global = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : global;\n\nfunction dew() {\n  if (_dewExec) return exports;\n  _dewExec = true;\n  // shim for using process in browser\n  var process = exports = {}; // cached from whatever global is present so that test runners that stub it\n  // don't break things.  But we need to wrap it in a try catch in case it is\n  // wrapped in strict mode code which doesn't define any globals.  It's inside a\n  // function because try/catches deoptimize in certain engines.\n\n  var cachedSetTimeout;\n  var cachedClearTimeout;\n\n  function defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n  }\n\n  function defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n  }\n\n  (function () {\n    try {\n      if (typeof setTimeout === \"function\") {\n        cachedSetTimeout = setTimeout;\n      } else {\n        cachedSetTimeout = defaultSetTimout;\n      }\n    } catch (e) {\n      cachedSetTimeout = defaultSetTimout;\n    }\n\n    try {\n      if (typeof clearTimeout === \"function\") {\n        cachedClearTimeout = clearTimeout;\n      } else {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    } catch (e) {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  })();\n\n  function runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n      //normal enviroments in sane situations\n      return setTimeout(fun, 0);\n    } // if setTimeout wasn't available but was latter defined\n\n\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n      cachedSetTimeout = setTimeout;\n      return setTimeout(fun, 0);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedSetTimeout(fun, 0);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n        return cachedSetTimeout.call(null, fun, 0);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n        return cachedSetTimeout.call(this || _global, fun, 0);\n      }\n    }\n  }\n\n  function runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n      //normal enviroments in sane situations\n      return clearTimeout(marker);\n    } // if clearTimeout wasn't available but was latter defined\n\n\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n      cachedClearTimeout = clearTimeout;\n      return clearTimeout(marker);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedClearTimeout(marker);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n        return cachedClearTimeout.call(null, marker);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n        // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n        return cachedClearTimeout.call(this || _global, marker);\n      }\n    }\n  }\n\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n\n    draining = false;\n\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n\n    if (queue.length) {\n      drainQueue();\n    }\n  }\n\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex].run();\n        }\n      }\n\n      queueIndex = -1;\n      len = queue.length;\n    }\n\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n  }\n\n  process.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n      }\n    }\n\n    queue.push(new Item(fun, args));\n\n    if (queue.length === 1 && !draining) {\n      runTimeout(drainQueue);\n    }\n  }; // v8 likes predictible objects\n\n\n  function Item(fun, array) {\n    (this || _global).fun = fun;\n    (this || _global).array = array;\n  }\n\n  Item.prototype.run = function () {\n    (this || _global).fun.apply(null, (this || _global).array);\n  };\n\n  process.title = \"browser\";\n  process.browser = true;\n  process.env = {};\n  process.argv = [];\n  process.version = \"\"; // empty string to avoid regexp issues\n\n  process.versions = {};\n\n  function noop() {}\n\n  process.on = noop;\n  process.addListener = noop;\n  process.once = noop;\n  process.off = noop;\n  process.removeListener = noop;\n  process.removeAllListeners = noop;\n  process.emit = noop;\n  process.prependListener = noop;\n  process.prependOnceListener = noop;\n\n  process.listeners = function (name) {\n    return [];\n  };\n\n  process.binding = function (name) {\n    throw new Error(\"process.binding is not supported\");\n  };\n\n  process.cwd = function () {\n    return \"/\";\n  };\n\n  process.chdir = function (dir) {\n    throw new Error(\"process.chdir is not supported\");\n  };\n\n  process.umask = function () {\n    return 0;\n  };\n\n  return exports;\n}\n\nvar process = dew();\n\nprocess.platform = 'browser';\nprocess.addListener;\nprocess.argv;\nprocess.binding;\nprocess.browser;\nprocess.chdir;\nprocess.cwd;\nprocess.emit;\nprocess.env;\nprocess.listeners;\nprocess.nextTick;\nprocess.off;\nprocess.on;\nprocess.once;\nprocess.prependListener;\nprocess.prependOnceListener;\nprocess.removeAllListeners;\nprocess.removeListener;\nprocess.title;\nprocess.umask;\nprocess.version;\nprocess.versions;\n\nexport { process as p };\n", "import { p as process } from './chunk-2eac56ff.js';\n\nvar exports$1 = {},\n    _dewExec = false;\nfunction dew() {\n  if (_dewExec) return exports$1;\n  _dewExec = true;\n  var process$1 = process;\n\n  function assertPath(path) {\n    if (typeof path !== \"string\") {\n      throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(path));\n    }\n  } // Resolves . and .. elements in a path with directory names\n\n\n  function normalizeStringPosix(path, allowAboveRoot) {\n    var res = \"\";\n    var lastSegmentLength = 0;\n    var lastSlash = -1;\n    var dots = 0;\n    var code;\n\n    for (var i = 0; i <= path.length; ++i) {\n      if (i < path.length) code = path.charCodeAt(i);else if (code === 47\n      /*/*/\n      ) break;else code = 47\n      /*/*/\n      ;\n\n      if (code === 47\n      /*/*/\n      ) {\n        if (lastSlash === i - 1 || dots === 1) ; else if (lastSlash !== i - 1 && dots === 2) {\n          if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46\n          /*.*/\n          || res.charCodeAt(res.length - 2) !== 46\n          /*.*/\n          ) {\n            if (res.length > 2) {\n              var lastSlashIndex = res.lastIndexOf(\"/\");\n\n              if (lastSlashIndex !== res.length - 1) {\n                if (lastSlashIndex === -1) {\n                  res = \"\";\n                  lastSegmentLength = 0;\n                } else {\n                  res = res.slice(0, lastSlashIndex);\n                  lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n                }\n\n                lastSlash = i;\n                dots = 0;\n                continue;\n              }\n            } else if (res.length === 2 || res.length === 1) {\n              res = \"\";\n              lastSegmentLength = 0;\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          }\n\n          if (allowAboveRoot) {\n            if (res.length > 0) res += \"/..\";else res = \"..\";\n            lastSegmentLength = 2;\n          }\n        } else {\n          if (res.length > 0) res += \"/\" + path.slice(lastSlash + 1, i);else res = path.slice(lastSlash + 1, i);\n          lastSegmentLength = i - lastSlash - 1;\n        }\n\n        lastSlash = i;\n        dots = 0;\n      } else if (code === 46\n      /*.*/\n      && dots !== -1) {\n        ++dots;\n      } else {\n        dots = -1;\n      }\n    }\n\n    return res;\n  }\n\n  function _format(sep, pathObject) {\n    var dir = pathObject.dir || pathObject.root;\n    var base = pathObject.base || (pathObject.name || \"\") + (pathObject.ext || \"\");\n\n    if (!dir) {\n      return base;\n    }\n\n    if (dir === pathObject.root) {\n      return dir + base;\n    }\n\n    return dir + sep + base;\n  }\n\n  var posix = {\n    // path.resolve([from ...], to)\n    resolve: function resolve() {\n      var resolvedPath = \"\";\n      var resolvedAbsolute = false;\n      var cwd;\n\n      for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        var path;\n        if (i >= 0) path = arguments[i];else {\n          if (cwd === undefined) cwd = process$1.cwd();\n          path = cwd;\n        }\n        assertPath(path); // Skip empty entries\n\n        if (path.length === 0) {\n          continue;\n        }\n\n        resolvedPath = path + \"/\" + resolvedPath;\n        resolvedAbsolute = path.charCodeAt(0) === 47\n        /*/*/\n        ;\n      } // At this point the path should be resolved to a full absolute path, but\n      // handle relative paths to be safe (might happen when process.cwd() fails)\n      // Normalize the path\n\n\n      resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n      if (resolvedAbsolute) {\n        if (resolvedPath.length > 0) return \"/\" + resolvedPath;else return \"/\";\n      } else if (resolvedPath.length > 0) {\n        return resolvedPath;\n      } else {\n        return \".\";\n      }\n    },\n    normalize: function normalize(path) {\n      assertPath(path);\n      if (path.length === 0) return \".\";\n      var isAbsolute = path.charCodeAt(0) === 47\n      /*/*/\n      ;\n      var trailingSeparator = path.charCodeAt(path.length - 1) === 47\n      /*/*/\n      ; // Normalize the path\n\n      path = normalizeStringPosix(path, !isAbsolute);\n      if (path.length === 0 && !isAbsolute) path = \".\";\n      if (path.length > 0 && trailingSeparator) path += \"/\";\n      if (isAbsolute) return \"/\" + path;\n      return path;\n    },\n    isAbsolute: function isAbsolute(path) {\n      assertPath(path);\n      return path.length > 0 && path.charCodeAt(0) === 47\n      /*/*/\n      ;\n    },\n    join: function join() {\n      if (arguments.length === 0) return \".\";\n      var joined;\n\n      for (var i = 0; i < arguments.length; ++i) {\n        var arg = arguments[i];\n        assertPath(arg);\n\n        if (arg.length > 0) {\n          if (joined === undefined) joined = arg;else joined += \"/\" + arg;\n        }\n      }\n\n      if (joined === undefined) return \".\";\n      return posix.normalize(joined);\n    },\n    relative: function relative(from, to) {\n      assertPath(from);\n      assertPath(to);\n      if (from === to) return \"\";\n      from = posix.resolve(from);\n      to = posix.resolve(to);\n      if (from === to) return \"\"; // Trim any leading backslashes\n\n      var fromStart = 1;\n\n      for (; fromStart < from.length; ++fromStart) {\n        if (from.charCodeAt(fromStart) !== 47\n        /*/*/\n        ) break;\n      }\n\n      var fromEnd = from.length;\n      var fromLen = fromEnd - fromStart; // Trim any leading backslashes\n\n      var toStart = 1;\n\n      for (; toStart < to.length; ++toStart) {\n        if (to.charCodeAt(toStart) !== 47\n        /*/*/\n        ) break;\n      }\n\n      var toEnd = to.length;\n      var toLen = toEnd - toStart; // Compare paths to find the longest common path from root\n\n      var length = fromLen < toLen ? fromLen : toLen;\n      var lastCommonSep = -1;\n      var i = 0;\n\n      for (; i <= length; ++i) {\n        if (i === length) {\n          if (toLen > length) {\n            if (to.charCodeAt(toStart + i) === 47\n            /*/*/\n            ) {\n              // We get here if `from` is the exact base path for `to`.\n              // For example: from='/foo/bar'; to='/foo/bar/baz'\n              return to.slice(toStart + i + 1);\n            } else if (i === 0) {\n              // We get here if `from` is the root\n              // For example: from='/'; to='/foo'\n              return to.slice(toStart + i);\n            }\n          } else if (fromLen > length) {\n            if (from.charCodeAt(fromStart + i) === 47\n            /*/*/\n            ) {\n              // We get here if `to` is the exact base path for `from`.\n              // For example: from='/foo/bar/baz'; to='/foo/bar'\n              lastCommonSep = i;\n            } else if (i === 0) {\n              // We get here if `to` is the root.\n              // For example: from='/foo'; to='/'\n              lastCommonSep = 0;\n            }\n          }\n\n          break;\n        }\n\n        var fromCode = from.charCodeAt(fromStart + i);\n        var toCode = to.charCodeAt(toStart + i);\n        if (fromCode !== toCode) break;else if (fromCode === 47\n        /*/*/\n        ) lastCommonSep = i;\n      }\n\n      var out = \"\"; // Generate the relative path based on the path difference between `to`\n      // and `from`\n\n      for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n        if (i === fromEnd || from.charCodeAt(i) === 47\n        /*/*/\n        ) {\n          if (out.length === 0) out += \"..\";else out += \"/..\";\n        }\n      } // Lastly, append the rest of the destination (`to`) path that comes after\n      // the common path parts\n\n\n      if (out.length > 0) return out + to.slice(toStart + lastCommonSep);else {\n        toStart += lastCommonSep;\n        if (to.charCodeAt(toStart) === 47\n        /*/*/\n        ) ++toStart;\n        return to.slice(toStart);\n      }\n    },\n    _makeLong: function _makeLong(path) {\n      return path;\n    },\n    dirname: function dirname(path) {\n      assertPath(path);\n      if (path.length === 0) return \".\";\n      var code = path.charCodeAt(0);\n      var hasRoot = code === 47\n      /*/*/\n      ;\n      var end = -1;\n      var matchedSlash = true;\n\n      for (var i = path.length - 1; i >= 1; --i) {\n        code = path.charCodeAt(i);\n\n        if (code === 47\n        /*/*/\n        ) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n          // We saw the first non-path separator\n          matchedSlash = false;\n        }\n      }\n\n      if (end === -1) return hasRoot ? \"/\" : \".\";\n      if (hasRoot && end === 1) return \"//\";\n      return path.slice(0, end);\n    },\n    basename: function basename(path, ext) {\n      if (ext !== undefined && typeof ext !== \"string\") throw new TypeError(\"\\\"ext\\\" argument must be a string\");\n      assertPath(path);\n      var start = 0;\n      var end = -1;\n      var matchedSlash = true;\n      var i;\n\n      if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n        if (ext.length === path.length && ext === path) return \"\";\n        var extIdx = ext.length - 1;\n        var firstNonSlashEnd = -1;\n\n        for (i = path.length - 1; i >= 0; --i) {\n          var code = path.charCodeAt(i);\n\n          if (code === 47\n          /*/*/\n          ) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n            if (firstNonSlashEnd === -1) {\n              // We saw the first non-path separator, remember this index in case\n              // we need it if the extension ends up not matching\n              matchedSlash = false;\n              firstNonSlashEnd = i + 1;\n            }\n\n            if (extIdx >= 0) {\n              // Try to match the explicit extension\n              if (code === ext.charCodeAt(extIdx)) {\n                if (--extIdx === -1) {\n                  // We matched the extension, so mark this as the end of our path\n                  // component\n                  end = i;\n                }\n              } else {\n                // Extension does not match, so our result is the entire path\n                // component\n                extIdx = -1;\n                end = firstNonSlashEnd;\n              }\n            }\n          }\n        }\n\n        if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n        return path.slice(start, end);\n      } else {\n        for (i = path.length - 1; i >= 0; --i) {\n          if (path.charCodeAt(i) === 47\n          /*/*/\n          ) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n            // We saw the first non-path separator, mark this as the end of our\n            // path component\n            matchedSlash = false;\n            end = i + 1;\n          }\n        }\n\n        if (end === -1) return \"\";\n        return path.slice(start, end);\n      }\n    },\n    extname: function extname(path) {\n      assertPath(path);\n      var startDot = -1;\n      var startPart = 0;\n      var end = -1;\n      var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n      // after any path separator we find\n\n      var preDotState = 0;\n\n      for (var i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n\n        if (code === 47\n        /*/*/\n        ) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n\n          continue;\n        }\n\n        if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // extension\n          matchedSlash = false;\n          end = i + 1;\n        }\n\n        if (code === 46\n        /*.*/\n        ) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n          // We saw a non-dot and non-path separator before our dot, so we should\n          // have a good chance at having a non-empty extension\n          preDotState = -1;\n        }\n      }\n\n      if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n      preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n        return \"\";\n      }\n\n      return path.slice(startDot, end);\n    },\n    format: function format(pathObject) {\n      if (pathObject === null || typeof pathObject !== \"object\") {\n        throw new TypeError(\"The \\\"pathObject\\\" argument must be of type Object. Received type \" + typeof pathObject);\n      }\n\n      return _format(\"/\", pathObject);\n    },\n    parse: function parse(path) {\n      assertPath(path);\n      var ret = {\n        root: \"\",\n        dir: \"\",\n        base: \"\",\n        ext: \"\",\n        name: \"\"\n      };\n      if (path.length === 0) return ret;\n      var code = path.charCodeAt(0);\n      var isAbsolute = code === 47\n      /*/*/\n      ;\n      var start;\n\n      if (isAbsolute) {\n        ret.root = \"/\";\n        start = 1;\n      } else {\n        start = 0;\n      }\n\n      var startDot = -1;\n      var startPart = 0;\n      var end = -1;\n      var matchedSlash = true;\n      var i = path.length - 1; // Track the state of characters (if any) we see before our first dot and\n      // after any path separator we find\n\n      var preDotState = 0; // Get non-dir info\n\n      for (; i >= start; --i) {\n        code = path.charCodeAt(i);\n\n        if (code === 47\n        /*/*/\n        ) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n\n          continue;\n        }\n\n        if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // extension\n          matchedSlash = false;\n          end = i + 1;\n        }\n\n        if (code === 46\n        /*.*/\n        ) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n          // We saw a non-dot and non-path separator before our dot, so we should\n          // have a good chance at having a non-empty extension\n          preDotState = -1;\n        }\n      }\n\n      if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n      preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n        if (end !== -1) {\n          if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n        }\n      } else {\n        if (startPart === 0 && isAbsolute) {\n          ret.name = path.slice(1, startDot);\n          ret.base = path.slice(1, end);\n        } else {\n          ret.name = path.slice(startPart, startDot);\n          ret.base = path.slice(startPart, end);\n        }\n\n        ret.ext = path.slice(startDot, end);\n      }\n\n      if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = \"/\";\n      return ret;\n    },\n    sep: \"/\",\n    delimiter: \":\",\n    win32: null,\n    posix: null\n  };\n  posix.posix = posix;\n  exports$1 = posix;\n  return exports$1;\n}\n\nconst exports = dew();\n\nexport { exports as e };\n", "import { e as exports } from './chunk-23dbec7b.js';\nexport { e as default } from './chunk-23dbec7b.js';\nimport './chunk-2eac56ff.js';\n\nvar _makeLong = exports._makeLong;\r\nvar basename = exports.basename;\r\nvar delimiter = exports.delimiter;\r\nvar dirname = exports.dirname;\r\nvar extname = exports.extname;\r\nvar format = exports.format;\r\nvar isAbsolute = exports.isAbsolute;\r\nvar join = exports.join;\r\nvar normalize = exports.normalize;\r\nvar parse = exports.parse;\r\nvar posix = exports.posix;\r\nvar relative = exports.relative;\r\nvar resolve = exports.resolve;\r\nvar sep = exports.sep;\r\nvar win32 = exports.win32;\n\nexport { _makeLong, basename, delimiter, dirname, extname, format, isAbsolute, join, normalize, parse, posix, relative, resolve, sep, win32 };\n", "import { ApiError, ErrorCode } from './ApiError';\nimport { Stats } from './stats';\n\nexport enum ActionType {\n\t// Indicates that the code should not do anything.\n\tNOP = 0,\n\t// Indicates that the code should throw an exception.\n\tTHROW_EXCEPTION = 1,\n\t// Indicates that the code should truncate the file, but only if it is a file.\n\tTRUNCATE_FILE = 2,\n\t// Indicates that the code should create the file.\n\tCREATE_FILE = 3,\n}\n\n/**\n * Represents one of the following file flags. A convenience object.\n *\n * * `'r'` - Open file for reading. An exception occurs if the file does not exist.\n * * `'r+'` - Open file for reading and writing. An exception occurs if the file does not exist.\n * * `'rs'` - Open file for reading in synchronous mode. Instructs the filesystem to not cache writes.\n * * `'rs+'` - Open file for reading and writing, and opens the file in synchronous mode.\n * * `'w'` - Open file for writing. The file is created (if it does not exist) or truncated (if it exists).\n * * `'wx'` - Like 'w' but opens the file in exclusive mode.\n * * `'w+'` - Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).\n * * `'wx+'` - Like 'w+' but opens the file in exclusive mode.\n * * `'a'` - Open file for appending. The file is created if it does not exist.\n * * `'ax'` - Like 'a' but opens the file in exclusive mode.\n * * `'a+'` - Open file for reading and appending. The file is created if it does not exist.\n * * `'ax+'` - Like 'a+' but opens the file in exclusive mode.\n *\n * Exclusive mode ensures that the file path is newly created.\n */\nexport class FileFlag {\n\t// Contains cached FileMode instances.\n\tprivate static flagCache: Map<string, FileFlag> = new Map();\n\t// Array of valid mode strings.\n\tprivate static validFlagStrs = ['r', 'r+', 'rs', 'rs+', 'w', 'wx', 'w+', 'wx+', 'a', 'ax', 'a+', 'ax+'];\n\n\t/**\n\t * Get an object representing the given file flag.\n\t * @param modeStr The string representing the flag\n\t * @return The FileFlag object representing the flag\n\t * @throw when the flag string is invalid\n\t */\n\tpublic static getFileFlag(flagStr: string): FileFlag {\n\t\t// Check cache first.\n\t\tif (!FileFlag.flagCache.has(flagStr)) {\n\t\t\tFileFlag.flagCache.set(flagStr, new FileFlag(flagStr));\n\t\t}\n\t\treturn FileFlag.flagCache.get(flagStr);\n\t}\n\n\tprivate flagStr: string;\n\t/**\n\t * This should never be called directly.\n\t * @param modeStr The string representing the mode\n\t * @throw when the mode string is invalid\n\t */\n\tconstructor(flagStr: string) {\n\t\tthis.flagStr = flagStr;\n\t\tif (FileFlag.validFlagStrs.indexOf(flagStr) < 0) {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid flag: ' + flagStr);\n\t\t}\n\t}\n\n\t/**\n\t * Get the underlying flag string for this flag.\n\t */\n\tpublic getFlagString(): string {\n\t\treturn this.flagStr;\n\t}\n\n\t/**\n\t * Get the equivalent mode (0b0xxx: read, write, execute)\n\t * Note: Execute will always be 0\n\t */\n\tpublic getMode(): number {\n\t\tlet mode = 0;\n\t\tmode <<= 1;\n\t\tmode += +this.isReadable();\n\t\tmode <<= 1;\n\t\tmode += +this.isWriteable();\n\t\tmode <<= 1;\n\t\treturn mode;\n\t}\n\n\t/**\n\t * Returns true if the file is readable.\n\t */\n\tpublic isReadable(): boolean {\n\t\treturn this.flagStr.indexOf('r') !== -1 || this.flagStr.indexOf('+') !== -1;\n\t}\n\t/**\n\t * Returns true if the file is writeable.\n\t */\n\tpublic isWriteable(): boolean {\n\t\treturn this.flagStr.indexOf('w') !== -1 || this.flagStr.indexOf('a') !== -1 || this.flagStr.indexOf('+') !== -1;\n\t}\n\t/**\n\t * Returns true if the file mode should truncate.\n\t */\n\tpublic isTruncating(): boolean {\n\t\treturn this.flagStr.indexOf('w') !== -1;\n\t}\n\t/**\n\t * Returns true if the file is appendable.\n\t */\n\tpublic isAppendable(): boolean {\n\t\treturn this.flagStr.indexOf('a') !== -1;\n\t}\n\t/**\n\t * Returns true if the file is open in synchronous mode.\n\t */\n\tpublic isSynchronous(): boolean {\n\t\treturn this.flagStr.indexOf('s') !== -1;\n\t}\n\t/**\n\t * Returns true if the file is open in exclusive mode.\n\t */\n\tpublic isExclusive(): boolean {\n\t\treturn this.flagStr.indexOf('x') !== -1;\n\t}\n\t/**\n\t * Returns one of the static fields on this object that indicates the\n\t * appropriate response to the path existing.\n\t */\n\tpublic pathExistsAction(): ActionType {\n\t\tif (this.isExclusive()) {\n\t\t\treturn ActionType.THROW_EXCEPTION;\n\t\t} else if (this.isTruncating()) {\n\t\t\treturn ActionType.TRUNCATE_FILE;\n\t\t} else {\n\t\t\treturn ActionType.NOP;\n\t\t}\n\t}\n\t/**\n\t * Returns one of the static fields on this object that indicates the\n\t * appropriate response to the path not existing.\n\t */\n\tpublic pathNotExistsAction(): ActionType {\n\t\tif ((this.isWriteable() || this.isAppendable()) && this.flagStr !== 'r+') {\n\t\t\treturn ActionType.CREATE_FILE;\n\t\t} else {\n\t\t\treturn ActionType.THROW_EXCEPTION;\n\t\t}\n\t}\n}\n\nexport interface File {\n\t/**\n\t * **Core**: Get the current file position.\n\t */\n\tgetPos(): number | undefined;\n\t/**\n\t * **Core**: Asynchronous `stat`.\n\t */\n\tstat(): Promise<Stats>;\n\t/**\n\t * **Core**: Synchronous `stat`.\n\t */\n\tstatSync(): Stats;\n\t/**\n\t * **Core**: Asynchronous close.\n\t */\n\tclose(): Promise<void>;\n\t/**\n\t * **Core**: Synchronous close.\n\t */\n\tcloseSync(): void;\n\t/**\n\t * **Core**: Asynchronous truncate.\n\t */\n\ttruncate(len: number): Promise<void>;\n\t/**\n\t * **Core**: Synchronous truncate.\n\t */\n\ttruncateSync(len: number): void;\n\t/**\n\t * **Core**: Asynchronous sync.\n\t */\n\tsync(): Promise<void>;\n\t/**\n\t * **Core**: Synchronous sync.\n\t */\n\tsyncSync(): void;\n\t/**\n\t * **Core**: Write buffer to the file.\n\t * Note that it is unsafe to use fs.write multiple times on the same file\n\t * without waiting for the callback.\n\t * @param buffer Buffer containing the data to write to\n\t *  the file.\n\t * @param offset Offset in the buffer to start reading data from.\n\t * @param length The amount of bytes to write to the file.\n\t * @param position Offset from the beginning of the file where this\n\t *   data should be written. If position is null, the data will be written at\n\t *   the current position.\n\t * @returns Promise resolving to the new length of the buffer\n\t */\n\twrite(buffer: Buffer, offset: number, length: number, position: number | null): Promise<number>;\n\t/**\n\t * **Core**: Write buffer to the file.\n\t * Note that it is unsafe to use fs.writeSync multiple times on the same file\n\t * without waiting for it to return.\n\t * @param buffer Buffer containing the data to write to\n\t *  the file.\n\t * @param offset Offset in the buffer to start reading data from.\n\t * @param length The amount of bytes to write to the file.\n\t * @param position Offset from the beginning of the file where this\n\t *   data should be written. If position is null, the data will be written at\n\t *   the current position.\n\t */\n\twriteSync(buffer: Buffer, offset: number, length: number, position: number | null): number;\n\t/**\n\t * **Core**: Read data from the file.\n\t * @param buffer The buffer that the data will be\n\t *   written to.\n\t * @param offset The offset within the buffer where writing will\n\t *   start.\n\t * @param length An integer specifying the number of bytes to read.\n\t * @param position An integer specifying where to begin reading from\n\t *   in the file. If position is null, data will be read from the current file\n\t *   position.\n\t * @returns Promise resolving to the new length of the buffer\n\t */\n\tread(buffer: Buffer, offset: number, length: number, position: number | null): Promise<{ bytesRead: number; buffer: Buffer }>;\n\t/**\n\t * **Core**: Read data from the file.\n\t * @param buffer The buffer that the data will be written to.\n\t * @param offset The offset within the buffer where writing will start.\n\t * @param length An integer specifying the number of bytes to read.\n\t * @param position An integer specifying where to begin reading from\n\t *   in the file. If position is null, data will be read from the current file\n\t *   position.\n\t */\n\treadSync(buffer: Buffer, offset: number, length: number, position: number): number;\n\t/**\n\t * **Supplementary**: Asynchronous `datasync`.\n\t *\n\t * Default implementation maps to `sync`.\n\t */\n\tdatasync(): Promise<void>;\n\t/**\n\t * **Supplementary**: Synchronous `datasync`.\n\t *\n\t * Default implementation maps to `syncSync`.\n\t */\n\tdatasyncSync(): void;\n\t/**\n\t * **Optional**: Asynchronous `chown`.\n\t */\n\tchown(uid: number, gid: number): Promise<void>;\n\t/**\n\t * **Optional**: Synchronous `chown`.\n\t */\n\tchownSync(uid: number, gid: number): void;\n\t/**\n\t * **Optional**: Asynchronous `fchmod`.\n\t */\n\tchmod(mode: number): Promise<void>;\n\t/**\n\t * **Optional**: Synchronous `fchmod`.\n\t */\n\tchmodSync(mode: number): void;\n\t/**\n\t * **Optional**: Change the file timestamps of the file.\n\t */\n\tutimes(atime: Date, mtime: Date): Promise<void>;\n\t/**\n\t * **Optional**: Change the file timestamps of the file.\n\t */\n\tutimesSync(atime: Date, mtime: Date): void;\n}\n\n/**\n * Base class that contains shared implementations of functions for the file\n * object.\n */\nexport class BaseFile {\n\tpublic async sync(): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic syncSync(): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async datasync(): Promise<void> {\n\t\treturn this.sync();\n\t}\n\tpublic datasyncSync(): void {\n\t\treturn this.syncSync();\n\t}\n\tpublic async chown(uid: number, gid: number): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic chownSync(uid: number, gid: number): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async chmod(mode: number): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic chmodSync(mode: number): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async utimes(atime: Date, mtime: Date): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic utimesSync(atime: Date, mtime: Date): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\n// disable no-unused-vars since BaseFileSystem uses them a lot\n\nimport { ApiError, ErrorCode } from './ApiError';\nimport { Stats } from './stats';\nimport { File, FileFlag, ActionType } from './file';\nimport * as path from 'path';\nimport { Cred } from './cred';\nimport { Buffer } from 'buffer';\n\nexport type BFSOneArgCallback = (e?: ApiError) => unknown;\nexport type BFSCallback<T> = (e?: ApiError, rv?: T) => unknown;\nexport type BFSThreeArgCallback<T, U> = (e?: ApiError, arg1?: T, arg2?: U) => unknown;\n\nexport type FileContents = Buffer | string;\n\n/**\n * Metadata about a FileSystem\n */\nexport interface FileSystemMetadata {\n\t/**\n\t * The name of the FS\n\t */\n\tname: string;\n\n\t/**\n\t * Wheter the FS is readonly or not\n\t */\n\treadonly: boolean;\n\n\t/**\n\t * Does the FS support synchronous operations\n\t */\n\tsynchronous: boolean;\n\n\t/**\n\t * Does the FS support properties\n\t */\n\tsupportsProperties: boolean;\n\n\t/**\n\t * Does the FS support links\n\t */\n\tsupportsLinks: boolean;\n\n\t/**\n\t * The total space\n\t */\n\ttotalSpace: number;\n\n\t/**\n\t * The available space\n\t */\n\tfreeSpace: number;\n}\n\n/**\n * Structure for a filesystem. **All** BrowserFS FileSystems must implement\n * this.\n *\n * ### Argument Assumptions\n *\n * You can assume the following about arguments passed to each API method:\n *\n * - Every path is an absolute path. `.`, `..`, and other items\n *   are resolved into an absolute form.\n * - All arguments are present. Any optional arguments at the Node API level\n *   have been passed in with their default values.\n */\nexport abstract class FileSystem {\n\tstatic readonly Name: string;\n\n\tabstract readonly metadata: FileSystemMetadata;\n\n\tconstructor(options?: object) {\n\t\t// unused\n\t}\n\n\tabstract whenReady(): Promise<this>;\n\n\t// File or directory operations\n\t/**\n\t * Asynchronous access.\n\t */\n\tabstract access(p: string, mode: number, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous access.\n\t */\n\tabstract accessSync(p: string, mode: number, cred: Cred): void;\n\t/**\n\t * Asynchronous rename. No arguments other than a possible exception\n\t * are given to the completion callback.\n\t */\n\tabstract rename(oldPath: string, newPath: string, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous rename.\n\t */\n\tabstract renameSync(oldPath: string, newPath: string, cred: Cred): void;\n\t/**\n\t * Asynchronous `stat`.\n\t */\n\tabstract stat(p: string, cred: Cred): Promise<Stats>;\n\t/**\n\t * Synchronous `stat`.\n\t */\n\tabstract statSync(p: string, cred: Cred): Stats;\n\t// File operations\n\t/**\n\t * Asynchronous file open.\n\t * @see http://www.manpagez.com/man/2/open/\n\t * @param flags Handles the complexity of the various file\n\t *   modes. See its API for more details.\n\t * @param mode Mode to use to open the file. Can be ignored if the\n\t *   filesystem doesn't support permissions.\n\t */\n\tabstract open(p: string, flag: FileFlag, mode: number, cred: Cred): Promise<File>;\n\t/**\n\t * Synchronous file open.\n\t * @see http://www.manpagez.com/man/2/open/\n\t * @param flags Handles the complexity of the various file\n\t *   modes. See its API for more details.\n\t * @param mode Mode to use to open the file. Can be ignored if the\n\t *   filesystem doesn't support permissions.\n\t */\n\tabstract openSync(p: string, flag: FileFlag, mode: number, cred: Cred): File;\n\t/**\n\t * Asynchronous `unlink`.\n\t */\n\tabstract unlink(p: string, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous `unlink`.\n\t */\n\tabstract unlinkSync(p: string, cred: Cred): void;\n\t// Directory operations\n\t/**\n\t * Asynchronous `rmdir`.\n\t */\n\tabstract rmdir(p: string, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous `rmdir`.\n\t */\n\tabstract rmdirSync(p: string, cred: Cred): void;\n\t/**\n\t * Asynchronous `mkdir`.\n\t * @param mode Mode to make the directory using. Can be ignored if\n\t *   the filesystem doesn't support permissions.\n\t */\n\tabstract mkdir(p: string, mode: number, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous `mkdir`.\n\t * @param mode Mode to make the directory using. Can be ignored if\n\t *   the filesystem doesn't support permissions.\n\t */\n\tabstract mkdirSync(p: string, mode: number, cred: Cred): void;\n\t/**\n\t * Asynchronous `readdir`. Reads the contents of a directory.\n\t *\n\t * The callback gets two arguments `(err, files)` where `files` is an array of\n\t * the names of the files in the directory excluding `'.'` and `'..'`.\n\t */\n\tabstract readdir(p: string, cred: Cred): Promise<string[]>;\n\t/**\n\t * Synchronous `readdir`. Reads the contents of a directory.\n\t */\n\tabstract readdirSync(p: string, cred: Cred): string[];\n\t// **SUPPLEMENTAL INTERFACE METHODS**\n\t// File or directory operations\n\t/**\n\t * Test whether or not the given path exists by checking with\n\t * the file system. Then call the callback argument with either true or false.\n\t */\n\tabstract exists(p: string, cred: Cred): Promise<boolean>;\n\t/**\n\t * Test whether or not the given path exists by checking with\n\t * the file system.\n\t */\n\tabstract existsSync(p: string, cred: Cred): boolean;\n\t/**\n\t * Asynchronous `realpath`. The callback gets two arguments\n\t * `(err, resolvedPath)`.\n\t *\n\t * Note that the Node API will resolve `path` to an absolute path.\n\t * @param cache An object literal of mapped paths that can be used to\n\t *   force a specific path resolution or avoid additional `fs.stat` calls for\n\t *   known real paths. If not supplied by the user, it'll be an empty object.\n\t */\n\tabstract realpath(p: string, cred: Cred): Promise<string>;\n\t/**\n\t * Synchronous `realpath`.\n\t *\n\t * Note that the Node API will resolve `path` to an absolute path.\n\t * @param cache An object literal of mapped paths that can be used to\n\t *   force a specific path resolution or avoid additional `fs.stat` calls for\n\t *   known real paths. If not supplied by the user, it'll be an empty object.\n\t */\n\tabstract realpathSync(p: string, cred: Cred): string;\n\t// File operations\n\t/**\n\t * Asynchronous `truncate`.\n\t */\n\tabstract truncate(p: string, len: number, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous `truncate`.\n\t */\n\tabstract truncateSync(p: string, len: number, cred: Cred): void;\n\t/**\n\t * Asynchronously reads the entire contents of a file.\n\t * @param encoding If non-null, the file's contents should be decoded\n\t *   into a string using that encoding. Otherwise, if encoding is null, fetch\n\t *   the file's contents as a Buffer.\n\t * If no encoding is specified, then the raw buffer is returned.\n\t */\n\tabstract readFile(fname: string, encoding: BufferEncoding | null, flag: FileFlag, cred: Cred): Promise<FileContents>;\n\t/**\n\t * Synchronously reads the entire contents of a file.\n\t * @param encoding If non-null, the file's contents should be decoded\n\t *   into a string using that encoding. Otherwise, if encoding is null, fetch\n\t *   the file's contents as a Buffer.\n\t */\n\tabstract readFileSync(fname: string, encoding: BufferEncoding | null, flag: FileFlag, cred: Cred): FileContents;\n\t/**\n\t * Asynchronously writes data to a file, replacing the file\n\t * if it already exists.\n\t *\n\t * The encoding option is ignored if data is a buffer.\n\t */\n\tabstract writeFile(fname: string, data: FileContents, encoding: BufferEncoding | null, flag: FileFlag, mode: number, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronously writes data to a file, replacing the file\n\t * if it already exists.\n\t *\n\t * The encoding option is ignored if data is a buffer.\n\t */\n\tabstract writeFileSync(fname: string, data: FileContents, encoding: BufferEncoding | null, flag: FileFlag, mode: number, cred: Cred): void;\n\t/**\n\t * Asynchronously append data to a file, creating the file if\n\t * it not yet exists.\n\t */\n\tabstract appendFile(fname: string, data: FileContents, encoding: BufferEncoding | null, flag: FileFlag, mode: number, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronously append data to a file, creating the file if\n\t * it not yet exists.\n\t */\n\tabstract appendFileSync(fname: string, data: FileContents, encoding: BufferEncoding | null, flag: FileFlag, mode: number, cred: Cred): void;\n\t// **OPTIONAL INTERFACE METHODS**\n\t// Property operations\n\t// This isn't always possible on some filesystem types (e.g. Dropbox).\n\t/**\n\t * Asynchronous `chmod`.\n\t */\n\tabstract chmod(p: string, mode: number, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous `chmod`.\n\t */\n\tabstract chmodSync(p: string, mode: number, cred: Cred): void;\n\t/**\n\t * Asynchronous `chown`.\n\t */\n\tabstract chown(p: string, new_uid: number, new_gid: number, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous `chown`.\n\t */\n\tabstract chownSync(p: string, new_uid: number, new_gid: number, cred: Cred): void;\n\t/**\n\t * Change file timestamps of the file referenced by the supplied\n\t * path.\n\t */\n\tabstract utimes(p: string, atime: Date, mtime: Date, cred: Cred): Promise<void>;\n\t/**\n\t * Change file timestamps of the file referenced by the supplied\n\t * path.\n\t */\n\tabstract utimesSync(p: string, atime: Date, mtime: Date, cred: Cred): void;\n\t// Symlink operations\n\t// Symlinks aren't always supported.\n\t/**\n\t * Asynchronous `link`.\n\t */\n\tabstract link(srcpath: string, dstpath: string, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous `link`.\n\t */\n\tabstract linkSync(srcpath: string, dstpath: string, cred: Cred): void;\n\t/**\n\t * Asynchronous `symlink`.\n\t * @param type can be either `'dir'` or `'file'`\n\t */\n\tabstract symlink(srcpath: string, dstpath: string, type: string, cred: Cred): Promise<void>;\n\t/**\n\t * Synchronous `symlink`.\n\t * @param type can be either `'dir'` or `'file'`\n\t */\n\tabstract symlinkSync(srcpath: string, dstpath: string, type: string, cred: Cred): void;\n\t/**\n\t * Asynchronous readlink.\n\t */\n\tabstract readlink(p: string, cred: Cred): Promise<string>;\n\t/**\n\t * Synchronous readlink.\n\t */\n\tabstract readlinkSync(p: string, cred: Cred): string;\n}\n\n/**\n * Basic filesystem class. Most filesystems should extend this class, as it\n * provides default implementations for a handful of methods.\n */\nexport class BaseFileSystem extends FileSystem {\n\tstatic readonly Name: string = this.name;\n\n\tprotected _ready: Promise<this> = Promise.resolve(this);\n\n\tpublic constructor(options?: { [key: string]: unknown }) {\n\t\tsuper();\n\t}\n\n\tpublic get metadata(): FileSystemMetadata {\n\t\treturn {\n\t\t\tname: this.constructor.name,\n\t\t\treadonly: false,\n\t\t\tsynchronous: false,\n\t\t\tsupportsProperties: false,\n\t\t\tsupportsLinks: false,\n\t\t\ttotalSpace: 0,\n\t\t\tfreeSpace: 0,\n\t\t};\n\t}\n\n\tpublic whenReady(): Promise<this> {\n\t\treturn this._ready;\n\t}\n\n\t/**\n\t * Opens the file at path p with the given flag. The file must exist.\n\t * @param p The path to open.\n\t * @param flag The flag to use when opening the file.\n\t */\n\tpublic async openFile(p: string, flag: FileFlag, cred: Cred): Promise<File> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\t/**\n\t * Create the file at path p with the given mode. Then, open it with the given\n\t * flag.\n\t */\n\tpublic async createFile(p: string, flag: FileFlag, mode: number, cred: Cred): Promise<File> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async open(p: string, flag: FileFlag, mode: number, cred: Cred): Promise<File> {\n\t\ttry {\n\t\t\tconst stats = await this.stat(p, cred);\n\t\t\tswitch (flag.pathExistsAction()) {\n\t\t\t\tcase ActionType.THROW_EXCEPTION:\n\t\t\t\t\tthrow ApiError.EEXIST(p);\n\t\t\t\tcase ActionType.TRUNCATE_FILE:\n\t\t\t\t\t// NOTE: In a previous implementation, we deleted the file and\n\t\t\t\t\t// re-created it. However, this created a race condition if another\n\t\t\t\t\t// asynchronous request was trying to read the file, as the file\n\t\t\t\t\t// would not exist for a small period of time.\n\t\t\t\t\tconst fd = await this.openFile(p, flag, cred);\n\t\t\t\t\tif (!fd) throw new Error('BFS has reached an impossible code path; please file a bug.');\n\n\t\t\t\t\tawait fd.truncate(0);\n\t\t\t\t\tawait fd.sync();\n\t\t\t\t\treturn fd;\n\t\t\t\tcase ActionType.NOP:\n\t\t\t\t\treturn this.openFile(p, flag, cred);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid FileFlag object.');\n\t\t\t}\n\t\t\t// File exists.\n\t\t} catch (e) {\n\t\t\t// File does not exist.\n\t\t\tswitch (flag.pathNotExistsAction()) {\n\t\t\t\tcase ActionType.CREATE_FILE:\n\t\t\t\t\t// Ensure parent exists.\n\t\t\t\t\tconst parentStats = await this.stat(path.dirname(p), cred);\n\t\t\t\t\tif (parentStats && !parentStats.isDirectory()) {\n\t\t\t\t\t\tthrow ApiError.ENOTDIR(path.dirname(p));\n\t\t\t\t\t}\n\t\t\t\t\treturn this.createFile(p, flag, mode, cred);\n\t\t\t\tcase ActionType.THROW_EXCEPTION:\n\t\t\t\t\tthrow ApiError.ENOENT(p);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid FileFlag object.');\n\t\t\t}\n\t\t}\n\t}\n\tpublic async access(p: string, mode: number, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic accessSync(p: string, mode: number, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async rename(oldPath: string, newPath: string, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic renameSync(oldPath: string, newPath: string, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async stat(p: string, cred: Cred): Promise<Stats> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic statSync(p: string, cred: Cred): Stats {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\t/**\n\t * Opens the file at path p with the given flag. The file must exist.\n\t * @param p The path to open.\n\t * @param flag The flag to use when opening the file.\n\t * @return A File object corresponding to the opened file.\n\t */\n\tpublic openFileSync(p: string, flag: FileFlag, cred: Cred): File {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\t/**\n\t * Create the file at path p with the given mode. Then, open it with the given\n\t * flag.\n\t */\n\tpublic createFileSync(p: string, flag: FileFlag, mode: number, cred: Cred): File {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic openSync(p: string, flag: FileFlag, mode: number, cred: Cred): File {\n\t\t// Check if the path exists, and is a file.\n\t\tlet stats: Stats;\n\t\ttry {\n\t\t\tstats = this.statSync(p, cred);\n\t\t} catch (e) {\n\t\t\t// File does not exist.\n\t\t\tswitch (flag.pathNotExistsAction()) {\n\t\t\t\tcase ActionType.CREATE_FILE:\n\t\t\t\t\t// Ensure parent exists.\n\t\t\t\t\tconst parentStats = this.statSync(path.dirname(p), cred);\n\t\t\t\t\tif (!parentStats.isDirectory()) {\n\t\t\t\t\t\tthrow ApiError.ENOTDIR(path.dirname(p));\n\t\t\t\t\t}\n\t\t\t\t\treturn this.createFileSync(p, flag, mode, cred);\n\t\t\t\tcase ActionType.THROW_EXCEPTION:\n\t\t\t\t\tthrow ApiError.ENOENT(p);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid FileFlag object.');\n\t\t\t}\n\t\t}\n\t\tif (!stats.hasAccess(mode, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\n\t\t// File exists.\n\t\tswitch (flag.pathExistsAction()) {\n\t\t\tcase ActionType.THROW_EXCEPTION:\n\t\t\t\tthrow ApiError.EEXIST(p);\n\t\t\tcase ActionType.TRUNCATE_FILE:\n\t\t\t\t// Delete file.\n\t\t\t\tthis.unlinkSync(p, cred);\n\t\t\t\t// Create file. Use the same mode as the old file.\n\t\t\t\t// Node itself modifies the ctime when this occurs, so this action\n\t\t\t\t// will preserve that behavior if the underlying file system\n\t\t\t\t// supports those properties.\n\t\t\t\treturn this.createFileSync(p, flag, stats.mode, cred);\n\t\t\tcase ActionType.NOP:\n\t\t\t\treturn this.openFileSync(p, flag, cred);\n\t\t\tdefault:\n\t\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid FileFlag object.');\n\t\t}\n\t}\n\tpublic async unlink(p: string, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic unlinkSync(p: string, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async rmdir(p: string, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic rmdirSync(p: string, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async mkdir(p: string, mode: number, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic mkdirSync(p: string, mode: number, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async readdir(p: string, cred: Cred): Promise<string[]> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic readdirSync(p: string, cred: Cred): string[] {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async exists(p: string, cred: Cred): Promise<boolean> {\n\t\ttry {\n\t\t\tawait this.stat(p, cred);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tpublic existsSync(p: string, cred: Cred): boolean {\n\t\ttry {\n\t\t\tthis.statSync(p, cred);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tpublic async realpath(p: string, cred: Cred): Promise<string> {\n\t\tif (this.metadata.supportsLinks) {\n\t\t\t// The path could contain symlinks. Split up the path,\n\t\t\t// resolve any symlinks, return the resolved string.\n\t\t\tconst splitPath = p.split(path.sep);\n\t\t\t// TODO: Simpler to just pass through file, find sep and such.\n\t\t\tfor (let i = 0; i < splitPath.length; i++) {\n\t\t\t\tconst addPaths = splitPath.slice(0, i + 1);\n\t\t\t\tsplitPath[i] = path.join(...addPaths);\n\t\t\t}\n\t\t\treturn splitPath.join(path.sep);\n\t\t} else {\n\t\t\t// No symlinks. We just need to verify that it exists.\n\t\t\tif (!(await this.exists(p, cred))) {\n\t\t\t\tthrow ApiError.ENOENT(p);\n\t\t\t}\n\t\t\treturn p;\n\t\t}\n\t}\n\tpublic realpathSync(p: string, cred: Cred): string {\n\t\tif (this.metadata.supportsLinks) {\n\t\t\t// The path could contain symlinks. Split up the path,\n\t\t\t// resolve any symlinks, return the resolved string.\n\t\t\tconst splitPath = p.split(path.sep);\n\t\t\t// TODO: Simpler to just pass through file, find sep and such.\n\t\t\tfor (let i = 0; i < splitPath.length; i++) {\n\t\t\t\tconst addPaths = splitPath.slice(0, i + 1);\n\t\t\t\tsplitPath[i] = path.join(...addPaths);\n\t\t\t}\n\t\t\treturn splitPath.join(path.sep);\n\t\t} else {\n\t\t\t// No symlinks. We just need to verify that it exists.\n\t\t\tif (this.existsSync(p, cred)) {\n\t\t\t\treturn p;\n\t\t\t} else {\n\t\t\t\tthrow ApiError.ENOENT(p);\n\t\t\t}\n\t\t}\n\t}\n\tpublic async truncate(p: string, len: number, cred: Cred): Promise<void> {\n\t\tconst fd = await this.open(p, FileFlag.getFileFlag('r+'), 0o644, cred);\n\t\ttry {\n\t\t\tawait fd.truncate(len);\n\t\t} finally {\n\t\t\tawait fd.close();\n\t\t}\n\t}\n\tpublic truncateSync(p: string, len: number, cred: Cred): void {\n\t\tconst fd = this.openSync(p, FileFlag.getFileFlag('r+'), 0o644, cred);\n\t\t// Need to safely close FD, regardless of whether or not truncate succeeds.\n\t\ttry {\n\t\t\tfd.truncateSync(len);\n\t\t} finally {\n\t\t\tfd.closeSync();\n\t\t}\n\t}\n\tpublic async readFile(fname: string, encoding: BufferEncoding | null, flag: FileFlag, cred: Cred): Promise<FileContents> {\n\t\t// Get file.\n\t\tconst fd = await this.open(fname, flag, 0o644, cred);\n\t\ttry {\n\t\t\tconst stat = await fd.stat();\n\t\t\t// Allocate buffer.\n\t\t\tconst buf = Buffer.alloc(stat.size);\n\t\t\tawait fd.read(buf, 0, stat.size, 0);\n\t\t\tawait fd.close();\n\t\t\tif (encoding === null) {\n\t\t\t\treturn buf;\n\t\t\t}\n\t\t\treturn buf.toString(encoding);\n\t\t} finally {\n\t\t\tawait fd.close();\n\t\t}\n\t}\n\tpublic readFileSync(fname: string, encoding: BufferEncoding | null, flag: FileFlag, cred: Cred): FileContents {\n\t\t// Get file.\n\t\tconst fd = this.openSync(fname, flag, 0o644, cred);\n\t\ttry {\n\t\t\tconst stat = fd.statSync();\n\t\t\t// Allocate buffer.\n\t\t\tconst buf = Buffer.alloc(stat.size);\n\t\t\tfd.readSync(buf, 0, stat.size, 0);\n\t\t\tfd.closeSync();\n\t\t\tif (encoding === null) {\n\t\t\t\treturn buf;\n\t\t\t}\n\t\t\treturn buf.toString(encoding);\n\t\t} finally {\n\t\t\tfd.closeSync();\n\t\t}\n\t}\n\tpublic async writeFile(fname: string, data: FileContents, encoding: BufferEncoding | null, flag: FileFlag, mode: number, cred: Cred): Promise<void> {\n\t\t// Get file.\n\t\tconst fd = await this.open(fname, flag, mode, cred);\n\t\ttry {\n\t\t\tif (typeof data === 'string') {\n\t\t\t\tdata = Buffer.from(data, encoding!);\n\t\t\t}\n\t\t\t// Write into file.\n\t\t\tawait fd.write(data, 0, data.length, 0);\n\t\t} finally {\n\t\t\tawait fd.close();\n\t\t}\n\t}\n\tpublic writeFileSync(fname: string, data: FileContents, encoding: BufferEncoding | null, flag: FileFlag, mode: number, cred: Cred): void {\n\t\t// Get file.\n\t\tconst fd = this.openSync(fname, flag, mode, cred);\n\t\ttry {\n\t\t\tif (typeof data === 'string') {\n\t\t\t\tdata = Buffer.from(data, encoding!);\n\t\t\t}\n\t\t\t// Write into file.\n\t\t\tfd.writeSync(data, 0, data.length, 0);\n\t\t} finally {\n\t\t\tfd.closeSync();\n\t\t}\n\t}\n\tpublic async appendFile(fname: string, data: FileContents, encoding: BufferEncoding | null, flag: FileFlag, mode: number, cred: Cred): Promise<void> {\n\t\tconst fd = await this.open(fname, flag, mode, cred);\n\t\ttry {\n\t\t\tif (typeof data === 'string') {\n\t\t\t\tdata = Buffer.from(data, encoding!);\n\t\t\t}\n\t\t\tawait fd.write(data, 0, data.length, null);\n\t\t} finally {\n\t\t\tawait fd.close();\n\t\t}\n\t}\n\tpublic appendFileSync(fname: string, data: FileContents, encoding: BufferEncoding | null, flag: FileFlag, mode: number, cred: Cred): void {\n\t\tconst fd = this.openSync(fname, flag, mode, cred);\n\t\ttry {\n\t\t\tif (typeof data === 'string') {\n\t\t\t\tdata = Buffer.from(data, encoding!);\n\t\t\t}\n\t\t\tfd.writeSync(data, 0, data.length, null);\n\t\t} finally {\n\t\t\tfd.closeSync();\n\t\t}\n\t}\n\tpublic async chmod(p: string, mode: number, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic chmodSync(p: string, mode: number, cred: Cred) {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async chown(p: string, new_uid: number, new_gid: number, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic chownSync(p: string, new_uid: number, new_gid: number, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async utimes(p: string, atime: Date, mtime: Date, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic utimesSync(p: string, atime: Date, mtime: Date, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async link(srcpath: string, dstpath: string, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic linkSync(srcpath: string, dstpath: string, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async symlink(srcpath: string, dstpath: string, type: string, cred: Cred): Promise<void> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic symlinkSync(srcpath: string, dstpath: string, type: string, cred: Cred): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic async readlink(p: string, cred: Cred): Promise<string> {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\tpublic readlinkSync(p: string, cred: Cred): string {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n}\n\n/**\n * Implements the asynchronous API in terms of the synchronous API.\n */\nexport class SynchronousFileSystem extends BaseFileSystem {\n\tpublic get metadata(): FileSystemMetadata {\n\t\treturn { ...super.metadata, synchronous: true };\n\t}\n\n\tpublic async access(p: string, mode: number, cred: Cred): Promise<void> {\n\t\treturn this.accessSync(p, mode, cred);\n\t}\n\n\tpublic async rename(oldPath: string, newPath: string, cred: Cred): Promise<void> {\n\t\treturn this.renameSync(oldPath, newPath, cred);\n\t}\n\n\tpublic async stat(p: string | null, cred: Cred): Promise<Stats> {\n\t\treturn this.statSync(p, cred);\n\t}\n\n\tpublic async open(p: string, flags: FileFlag, mode: number, cred: Cred): Promise<File> {\n\t\treturn this.openSync(p, flags, mode, cred);\n\t}\n\n\tpublic async unlink(p: string, cred: Cred): Promise<void> {\n\t\treturn this.unlinkSync(p, cred);\n\t}\n\n\tpublic async rmdir(p: string, cred: Cred): Promise<void> {\n\t\treturn this.rmdirSync(p, cred);\n\t}\n\n\tpublic async mkdir(p: string, mode: number, cred: Cred): Promise<void> {\n\t\treturn this.mkdirSync(p, mode, cred);\n\t}\n\n\tpublic async readdir(p: string, cred: Cred): Promise<string[]> {\n\t\treturn this.readdirSync(p, cred);\n\t}\n\n\tpublic async chmod(p: string, mode: number, cred: Cred): Promise<void> {\n\t\treturn this.chmodSync(p, mode, cred);\n\t}\n\n\tpublic async chown(p: string, new_uid: number, new_gid: number, cred: Cred): Promise<void> {\n\t\treturn this.chownSync(p, new_uid, new_gid, cred);\n\t}\n\n\tpublic async utimes(p: string, atime: Date, mtime: Date, cred: Cred): Promise<void> {\n\t\treturn this.utimesSync(p, atime, mtime, cred);\n\t}\n\n\tpublic async link(srcpath: string, dstpath: string, cred: Cred): Promise<void> {\n\t\treturn this.linkSync(srcpath, dstpath, cred);\n\t}\n\n\tpublic async symlink(srcpath: string, dstpath: string, type: string, cred: Cred): Promise<void> {\n\t\treturn this.symlinkSync(srcpath, dstpath, type, cred);\n\t}\n\n\tpublic async readlink(p: string, cred: Cred): Promise<string> {\n\t\treturn this.readlinkSync(p, cred);\n\t}\n}\n", "/**\n * Credentials used for FS ops.\n * Similar to Linux's cred struct. See https://github.com/torvalds/linux/blob/master/include/linux/cred.h\n */\nexport class Cred {\n\tconstructor(public uid: number, public gid: number, public suid: number, public sgid: number, public euid: number, public egid: number) {}\n\n\tpublic static Root = new Cred(0, 0, 0, 0, 0, 0);\n}\n", "/*\nFS Constants\nSee https://nodejs.org/api/fs.html#file-access-constants\n*/\n\n// File Access Constants\n\n/** Constant for fs.access(). File is visible to the calling process. */\nexport const F_OK = 0;\n\n/** Constant for fs.access(). File can be read by the calling process. */\nexport const R_OK = 4;\n\n/** Constant for fs.access(). File can be written by the calling process. */\nexport const W_OK = 2;\n\n/** Constant for fs.access(). File can be executed by the calling process. */\nexport const X_OK = 1;\n\n// File Copy Constants\n\n/** Constant for fs.copyFile. Flag indicating the destination file should not be overwritten if it already exists. */\nexport const COPYFILE_EXCL = 1;\n\n/**\n * Constant for fs.copyFile. Copy operation will attempt to create a copy-on-write reflink.\n * If the underlying platform does not support copy-on-write, then a fallback copy mechanism is used.\n */\nexport const COPYFILE_FICLONE = 2;\n\n/**\n * Constant for fs.copyFile. Copy operation will attempt to create a copy-on-write reflink.\n * If the underlying platform does not support copy-on-write, then the operation will fail with an error.\n */\nexport const COPYFILE_FICLONE_FORCE = 4;\n\n// File Open Constants\n\n/** Constant for fs.open(). Flag indicating to open a file for read-only access. */\nexport const O_RDONLY = 0;\n\n/** Constant for fs.open(). Flag indicating to open a file for write-only access. */\nexport const O_WRONLY = 1;\n\n/** Constant for fs.open(). Flag indicating to open a file for read-write access. */\nexport const O_RDWR = 2;\n\n/** Constant for fs.open(). Flag indicating to create the file if it does not already exist. */\nexport const O_CREAT = 0o100; // Node internal is\n\n/** Constant for fs.open(). Flag indicating that opening a file should fail if the O_CREAT flag is set and the file already exists. */\nexport const O_EXCL = 0o200;\n\n/**\n * Constant for fs.open(). Flag indicating that if path identifies a terminal device,\n * opening the path shall not cause that terminal to become the controlling terminal for the process\n * (if the process does not already have one).\n */\nexport const O_NOCTTY = 0o400;\n\n/** Constant for fs.open(). Flag indicating that if the file exists and is a regular file, and the file is opened successfully for write access, its length shall be truncated to zero. */\nexport const O_TRUNC = 0o1000;\n\n/** Constant for fs.open(). Flag indicating that data will be appended to the end of the file. */\nexport const O_APPEND = 0o2000;\n\n/** Constant for fs.open(). Flag indicating that the open should fail if the path is not a directory. */\nexport const O_DIRECTORY = 0o200000;\n\n/**\n * constant for fs.open().\n * Flag indicating reading accesses to the file system will no longer result in\n * an update to the atime information associated with the file.\n * This flag is available on Linux operating systems only.\n */\nexport const O_NOATIME = 0o1000000;\n\n/** Constant for fs.open(). Flag indicating that the open should fail if the path is a symbolic link. */\nexport const O_NOFOLLOW = 0o400000;\n\n/** Constant for fs.open(). Flag indicating that the file is opened for synchronous I/O. */\nexport const O_SYNC = 0o4010000;\n\n/** Constant for fs.open(). Flag indicating that the file is opened for synchronous I/O with write operations waiting for data integrity. */\nexport const O_DSYNC = 0o10000;\n\n/** Constant for fs.open(). Flag indicating to open the symbolic link itself rather than the resource it is pointing to. */\nexport const O_SYMLINK = 0o100000;\n\n/** Constant for fs.open(). When set, an attempt will be made to minimize caching effects of file I/O. */\nexport const O_DIRECT = 0o40000;\n\n/** Constant for fs.open(). Flag indicating to open the file in nonblocking mode when possible. */\nexport const O_NONBLOCK = 0o4000;\n\n// File Type Constants\n\n/** Constant for fs.Stats mode property for determining a file's type. Bit mask used to extract the file type code. */\nexport const S_IFMT = 0o170000;\n\n/** Constant for fs.Stats mode property for determining a file's type. File type constant for a regular file. */\nexport const S_IFREG = 0o100000;\n\n/** Constant for fs.Stats mode property for determining a file's type. File type constant for a directory. */\nexport const S_IFDIR = 0o40000;\n\n/** Constant for fs.Stats mode property for determining a file's type. File type constant for a character-oriented device file. */\nexport const S_IFCHR = 0o20000;\n\n/** Constant for fs.Stats mode property for determining a file's type. File type constant for a block-oriented device file. */\nexport const S_IFBLK = 0o60000;\n\n/** Constant for fs.Stats mode property for determining a file's type. File type constant for a FIFO/pipe. */\nexport const S_IFIFO = 0o10000;\n\n/** Constant for fs.Stats mode property for determining a file's type. File type constant for a symbolic link. */\nexport const S_IFLNK = 0o120000;\n\n/** Constant for fs.Stats mode property for determining a file's type. File type constant for a socket. */\nexport const S_IFSOCK = 0o140000;\n\n// File Mode Constants\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by owner. */\nexport const S_IRWXU = 0o700;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by owner. */\nexport const S_IRUSR = 0o400;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by owner. */\nexport const S_IWUSR = 0o200;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by owner. */\nexport const S_IXUSR = 0o100;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by group. */\nexport const S_IRWXG = 0o70;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by group. */\nexport const S_IRGRP = 0o40;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by group. */\nexport const S_IWGRP = 0o20;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by group. */\nexport const S_IXGRP = 0o10;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by others. */\nexport const S_IRWXO = 7;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by others. */\nexport const S_IROTH = 4;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by others. */\nexport const S_IWOTH = 2;\n\n/** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by others. */\nexport const S_IXOTH = 1;\n", "import type { StatsBase } from 'fs';\nimport { Cred } from './cred';\nimport { Buffer } from 'buffer';\nimport { S_IFDIR, S_IFLNK, S_IFMT, S_IFREG } from './emulation/constants';\n\n/**\n * Indicates the type of the given file. Applied to 'mode'.\n */\nexport enum FileType {\n\tFILE = S_IFREG,\n\tDIRECTORY = S_IFDIR,\n\tSYMLINK = S_IFLNK,\n}\n\n/**\n * Implementation of Node's `Stats`.\n *\n * Attribute descriptions are from `man 2 stat'\n * @see http://nodejs.org/api/fs.html#fs_class_fs_stats\n * @see http://man7.org/linux/man-pages/man2/stat.2.html\n */\nexport class Stats implements StatsBase<number> {\n\tpublic static fromBuffer(buffer: Buffer): Stats {\n\t\tconst size = buffer.readUInt32LE(0),\n\t\t\tmode = buffer.readUInt32LE(4),\n\t\t\tatime = buffer.readDoubleLE(8),\n\t\t\tmtime = buffer.readDoubleLE(16),\n\t\t\tctime = buffer.readDoubleLE(24),\n\t\t\tuid = buffer.readUInt32LE(32),\n\t\t\tgid = buffer.readUInt32LE(36);\n\n\t\treturn new Stats(mode & S_IFMT, size, mode & ~S_IFMT, atime, mtime, ctime, uid, gid);\n\t}\n\n\t/**\n\t * Clones the stats object.\n\t */\n\tpublic static clone(s: Stats): Stats {\n\t\treturn new Stats(s.mode & S_IFMT, s.size, s.mode & ~S_IFMT, s.atimeMs, s.mtimeMs, s.ctimeMs, s.uid, s.gid, s.birthtimeMs);\n\t}\n\n\tpublic blocks: number;\n\tpublic mode: number;\n\t// ID of device containing file\n\tpublic dev: number = 0;\n\t// inode number\n\tpublic ino: number = 0;\n\t// device ID (if special file)\n\tpublic rdev: number = 0;\n\t// number of hard links\n\tpublic nlink: number = 1;\n\t// blocksize for file system I/O\n\tpublic blksize: number = 4096;\n\t// user ID of owner\n\tpublic uid: number = 0;\n\t// group ID of owner\n\tpublic gid: number = 0;\n\t// Some file systems stash data on stats objects.\n\tpublic fileData: Buffer | null = null;\n\tpublic atimeMs: number;\n\tpublic mtimeMs: number;\n\tpublic ctimeMs: number;\n\tpublic birthtimeMs: number;\n\tpublic size: number;\n\n\tpublic get atime(): Date {\n\t\treturn new Date(this.atimeMs);\n\t}\n\n\tpublic get mtime(): Date {\n\t\treturn new Date(this.mtimeMs);\n\t}\n\n\tpublic get ctime(): Date {\n\t\treturn new Date(this.ctimeMs);\n\t}\n\n\tpublic get birthtime(): Date {\n\t\treturn new Date(this.birthtimeMs);\n\t}\n\n\t/**\n\t * Provides information about a particular entry in the file system.\n\t * @param itemType Type of the item (FILE, DIRECTORY, SYMLINK, or SOCKET)\n\t * @param size Size of the item in bytes. For directories/symlinks,\n\t *   this is normally the size of the struct that represents the item.\n\t * @param mode Unix-style file mode (e.g. 0o644)\n\t * @param atimeMs time of last access, in milliseconds since epoch\n\t * @param mtimeMs time of last modification, in milliseconds since epoch\n\t * @param ctimeMs time of last time file status was changed, in milliseconds since epoch\n\t * @param uid the id of the user that owns the file\n\t * @param gid the id of the group that owns the file\n\t * @param birthtimeMs time of file creation, in milliseconds since epoch\n\t */\n\tconstructor(itemType: FileType, size: number, mode?: number, atimeMs?: number, mtimeMs?: number, ctimeMs?: number, uid?: number, gid?: number, birthtimeMs?: number) {\n\t\tthis.size = size;\n\t\tlet currentTime = 0;\n\t\tif (typeof atimeMs !== 'number') {\n\t\t\tcurrentTime = Date.now();\n\t\t\tatimeMs = currentTime;\n\t\t}\n\t\tif (typeof mtimeMs !== 'number') {\n\t\t\tif (!currentTime) {\n\t\t\t\tcurrentTime = Date.now();\n\t\t\t}\n\t\t\tmtimeMs = currentTime;\n\t\t}\n\t\tif (typeof ctimeMs !== 'number') {\n\t\t\tif (!currentTime) {\n\t\t\t\tcurrentTime = Date.now();\n\t\t\t}\n\t\t\tctimeMs = currentTime;\n\t\t}\n\t\tif (typeof birthtimeMs !== 'number') {\n\t\t\tif (!currentTime) {\n\t\t\t\tcurrentTime = Date.now();\n\t\t\t}\n\t\t\tbirthtimeMs = currentTime;\n\t\t}\n\t\tif (typeof uid !== 'number') {\n\t\t\tuid = 0;\n\t\t}\n\t\tif (typeof gid !== 'number') {\n\t\t\tgid = 0;\n\t\t}\n\t\tthis.atimeMs = atimeMs;\n\t\tthis.ctimeMs = ctimeMs;\n\t\tthis.mtimeMs = mtimeMs;\n\t\tthis.birthtimeMs = birthtimeMs;\n\n\t\tif (!mode) {\n\t\t\tswitch (itemType) {\n\t\t\t\tcase FileType.FILE:\n\t\t\t\t\tthis.mode = 0o644;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileType.DIRECTORY:\n\t\t\t\tdefault:\n\t\t\t\t\tthis.mode = 0o777;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.mode = mode;\n\t\t}\n\t\t// number of 512B blocks allocated\n\t\tthis.blocks = Math.ceil(size / 512);\n\t\t// Check if mode also includes top-most bits, which indicate the file's\n\t\t// type.\n\t\tif ((this.mode & S_IFMT) == 0) {\n\t\t\tthis.mode |= itemType;\n\t\t}\n\t}\n\n\tpublic toBuffer(): Buffer {\n\t\tconst buffer = Buffer.alloc(32);\n\t\tbuffer.writeUInt32LE(this.size, 0);\n\t\tbuffer.writeUInt32LE(this.mode, 4);\n\t\tbuffer.writeDoubleLE(this.atime.getTime(), 8);\n\t\tbuffer.writeDoubleLE(this.mtime.getTime(), 16);\n\t\tbuffer.writeDoubleLE(this.ctime.getTime(), 24);\n\t\tbuffer.writeUInt32LE(this.uid, 32);\n\t\tbuffer.writeUInt32LE(this.gid, 36);\n\t\treturn buffer;\n\t}\n\n\t/**\n\t * @return [Boolean] True if this item is a file.\n\t */\n\tpublic isFile(): boolean {\n\t\treturn (this.mode & S_IFMT) === S_IFREG;\n\t}\n\n\t/**\n\t * @return [Boolean] True if this item is a directory.\n\t */\n\tpublic isDirectory(): boolean {\n\t\treturn (this.mode & S_IFMT) === S_IFDIR;\n\t}\n\n\t/**\n\t * @return [Boolean] True if this item is a symbolic link (only valid through lstat)\n\t */\n\tpublic isSymbolicLink(): boolean {\n\t\treturn (this.mode & S_IFMT) === S_IFLNK;\n\t}\n\n\t/**\n\t * Checks if a given user/group has access to this item\n\t * @param mode The request access as 4 bits (unused, read, write, execute)\n\t * @param uid The requesting UID\n\t * @param gid The requesting GID\n\t * @returns [Boolean] True if the request has access, false if the request does not\n\t */\n\tpublic hasAccess(mode: number, cred: Cred): boolean {\n\t\tif (cred.euid === 0 || cred.egid === 0) {\n\t\t\t//Running as root\n\t\t\treturn true;\n\t\t}\n\t\tconst perms = this.mode & ~S_IFMT;\n\t\tlet uMode = 0xf,\n\t\t\tgMode = 0xf,\n\t\t\twMode = 0xf;\n\n\t\tif (cred.euid == this.uid) {\n\t\t\tconst uPerms = (0xf00 & perms) >> 8;\n\t\t\tuMode = (mode ^ uPerms) & mode;\n\t\t}\n\t\tif (cred.egid == this.gid) {\n\t\t\tconst gPerms = (0xf0 & perms) >> 4;\n\t\t\tgMode = (mode ^ gPerms) & mode;\n\t\t}\n\t\tconst wPerms = 0xf & perms;\n\t\twMode = (mode ^ wPerms) & mode;\n\t\t/*\n        Result = 0b0xxx (read, write, execute)\n        If any bits are set that means the request does not have that permission.\n    */\n\t\tconst result = uMode & gMode & wMode;\n\t\treturn !result;\n\t}\n\n\t/**\n\t * Convert the current stats object into a cred object\n\t */\n\tpublic getCred(uid: number = this.uid, gid: number = this.gid): Cred {\n\t\treturn new Cred(uid, gid, this.uid, this.gid, uid, gid);\n\t}\n\n\t/**\n\t * Change the mode of the file. We use this helper function to prevent messing\n\t * up the type of the file, which is encoded in mode.\n\t */\n\tpublic chmod(mode: number): void {\n\t\tthis.mode = (this.mode & S_IFMT) | mode;\n\t}\n\n\t/**\n\t * Change the owner user/group of the file.\n\t * This function makes sure it is a valid UID/GID (that is, a 32 unsigned int)\n\t */\n\tpublic chown(uid: number, gid: number): void {\n\t\tif (!isNaN(+uid) && 0 <= +uid && +uid < 2 ** 32) {\n\t\t\tthis.uid = uid;\n\t\t}\n\t\tif (!isNaN(+gid) && 0 <= +gid && +gid < 2 ** 32) {\n\t\t\tthis.gid = gid;\n\t\t}\n\t}\n\n\t// We don't support the following types of files.\n\n\tpublic isSocket(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic isBlockDevice(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic isCharacterDevice(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic isFIFO(): boolean {\n\t\treturn false;\n\t}\n}\n", "import { Stats, FileType } from './stats';\nimport { Buffer } from 'buffer';\n\n/**\n * Generic inode definition that can easily be serialized.\n */\nexport default class Inode {\n\t/**\n\t * Converts the buffer into an Inode.\n\t */\n\tpublic static fromBuffer(buffer: Buffer): Inode {\n\t\tif (buffer === undefined) {\n\t\t\tthrow new Error('NO');\n\t\t}\n\t\treturn new Inode(\n\t\t\tbuffer.toString('ascii', 38),\n\t\t\tbuffer.readUInt32LE(0),\n\t\t\tbuffer.readUInt16LE(4),\n\t\t\tbuffer.readDoubleLE(6),\n\t\t\tbuffer.readDoubleLE(14),\n\t\t\tbuffer.readDoubleLE(22),\n\t\t\tbuffer.readUInt32LE(30),\n\t\t\tbuffer.readUInt32LE(34)\n\t\t);\n\t}\n\n\tconstructor(\n\t\tpublic id: string,\n\t\tpublic size: number,\n\t\tpublic mode: number,\n\t\tpublic atime: number,\n\t\tpublic mtime: number,\n\t\tpublic ctime: number,\n\t\tpublic uid: number,\n\t\tpublic gid: number\n\t) {}\n\n\t/**\n\t * Handy function that converts the Inode to a Node Stats object.\n\t */\n\tpublic toStats(): Stats {\n\t\treturn new Stats(\n\t\t\t(this.mode & 0xf000) === FileType.DIRECTORY ? FileType.DIRECTORY : FileType.FILE,\n\t\t\tthis.size,\n\t\t\tthis.mode,\n\t\t\tthis.atime,\n\t\t\tthis.mtime,\n\t\t\tthis.ctime,\n\t\t\tthis.uid,\n\t\t\tthis.gid\n\t\t);\n\t}\n\n\t/**\n\t * Get the size of this Inode, in bytes.\n\t */\n\tpublic getSize(): number {\n\t\t// ASSUMPTION: ID is ASCII (1 byte per char).\n\t\treturn 38 + this.id.length;\n\t}\n\n\t/**\n\t * Writes the inode into the start of the buffer.\n\t */\n\tpublic toBuffer(buff: Buffer = Buffer.alloc(this.getSize())): Buffer {\n\t\tbuff.writeUInt32LE(this.size, 0);\n\t\tbuff.writeUInt16LE(this.mode, 4);\n\t\tbuff.writeDoubleLE(this.atime, 6);\n\t\tbuff.writeDoubleLE(this.mtime, 14);\n\t\tbuff.writeDoubleLE(this.ctime, 22);\n\t\tbuff.writeUInt32LE(this.uid, 30);\n\t\tbuff.writeUInt32LE(this.gid, 34);\n\t\tbuff.write(this.id, 38, this.id.length, 'ascii');\n\t\treturn buff;\n\t}\n\n\t/**\n\t * Updates the Inode using information from the stats object. Used by file\n\t * systems at sync time, e.g.:\n\t * - Program opens file and gets a File object.\n\t * - Program mutates file. File object is responsible for maintaining\n\t *   metadata changes locally -- typically in a Stats object.\n\t * - Program closes file. File object's metadata changes are synced with the\n\t *   file system.\n\t * @return True if any changes have occurred.\n\t */\n\tpublic update(stats: Stats): boolean {\n\t\tlet hasChanged = false;\n\t\tif (this.size !== stats.size) {\n\t\t\tthis.size = stats.size;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tif (this.mode !== stats.mode) {\n\t\t\tthis.mode = stats.mode;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tconst atimeMs = stats.atime.getTime();\n\t\tif (this.atime !== atimeMs) {\n\t\t\tthis.atime = atimeMs;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tconst mtimeMs = stats.mtime.getTime();\n\t\tif (this.mtime !== mtimeMs) {\n\t\t\tthis.mtime = mtimeMs;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tconst ctimeMs = stats.ctime.getTime();\n\t\tif (this.ctime !== ctimeMs) {\n\t\t\tthis.ctime = ctimeMs;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tif (this.uid !== stats.uid) {\n\t\t\tthis.uid = stats.uid;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tif (this.uid !== stats.uid) {\n\t\t\tthis.uid = stats.uid;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\treturn hasChanged;\n\t}\n\n\t// XXX: Copied from Stats. Should reconcile these two into something more\n\t//      compact.\n\n\t/**\n\t * @return [Boolean] True if this item is a file.\n\t */\n\tpublic isFile(): boolean {\n\t\treturn (this.mode & 0xf000) === FileType.FILE;\n\t}\n\n\t/**\n\t * @return [Boolean] True if this item is a directory.\n\t */\n\tpublic isDirectory(): boolean {\n\t\treturn (this.mode & 0xf000) === FileType.DIRECTORY;\n\t}\n}\n", "import { BaseFile, File } from '../file';\nimport { FileSystem } from '../filesystem';\nimport { Stats } from '../stats';\nimport { FileFlag } from '../file';\nimport { ApiError, ErrorCode } from '../ApiError';\nimport { getMount } from '../emulation/shared';\nimport { Buffer } from 'buffer';\n\n/**\n * An implementation of the File interface that operates on a file that is\n * completely in-memory. PreloadFiles are backed by a Buffer.\n *\n * This is also an abstract class, as it lacks an implementation of 'sync' and\n * 'close'. Each filesystem that wishes to use this file representation must\n * extend this class and implement those two methods.\n * @todo 'close' lever that disables functionality once closed.\n */\nexport default class PreloadFile<T extends FileSystem> extends BaseFile {\n\tprotected _fs: T;\n\tprotected _pos: number = 0;\n\tprotected _path: string;\n\tprotected _stat: Stats;\n\tprotected _flag: FileFlag;\n\tprotected _buffer: Buffer;\n\tprotected _dirty: boolean = false;\n\t/**\n\t * Creates a file with the given path and, optionally, the given contents. Note\n\t * that, if contents is specified, it will be mutated by the file!\n\t * @param _fs The file system that created the file.\n\t * @param _path\n\t * @param _mode The mode that the file was opened using.\n\t *   Dictates permissions and where the file pointer starts.\n\t * @param _stat The stats object for the given file.\n\t *   PreloadFile will mutate this object. Note that this object must contain\n\t *   the appropriate mode that the file was opened as.\n\t * @param contents A buffer containing the entire\n\t *   contents of the file. PreloadFile will mutate this buffer. If not\n\t *   specified, we assume it is a new file.\n\t */\n\tconstructor(_fs: T, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n\t\tsuper();\n\t\tthis._fs = _fs;\n\t\tthis._path = _path;\n\t\tthis._flag = _flag;\n\t\tthis._stat = _stat;\n\t\tthis._buffer = contents ? contents : Buffer.alloc(0);\n\t\t// Note: This invariant is *not* maintained once the file starts getting\n\t\t// modified.\n\t\t// Note: Only actually matters if file is readable, as writeable modes may\n\t\t// truncate/append to file.\n\t\tif (this._stat.size !== this._buffer.length && this._flag.isReadable()) {\n\t\t\tthrow new Error(`Invalid buffer: Buffer is ${this._buffer.length} long, yet Stats object specifies that file is ${this._stat.size} long.`);\n\t\t}\n\t}\n\n\t/**\n\t * NONSTANDARD: Get the underlying buffer for this file. !!DO NOT MUTATE!! Will mess up dirty tracking.\n\t */\n\tpublic getBuffer(): Buffer {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * NONSTANDARD: Get underlying stats for this file. !!DO NOT MUTATE!!\n\t */\n\tpublic getStats(): Stats {\n\t\treturn this._stat;\n\t}\n\n\tpublic getFlag(): FileFlag {\n\t\treturn this._flag;\n\t}\n\n\t/**\n\t * Get the path to this file.\n\t * @return [String] The path to the file.\n\t */\n\tpublic getPath(): string {\n\t\treturn this._path;\n\t}\n\n\t/**\n\t * Get the current file position.\n\t *\n\t * We emulate the following bug mentioned in the Node documentation:\n\t * > On Linux, positional writes don't work when the file is opened in append\n\t *   mode. The kernel ignores the position argument and always appends the data\n\t *   to the end of the file.\n\t * @return [Number] The current file position.\n\t */\n\tpublic getPos(): number {\n\t\tif (this._flag.isAppendable()) {\n\t\t\treturn this._stat.size;\n\t\t}\n\t\treturn this._pos;\n\t}\n\n\t/**\n\t * Advance the current file position by the indicated number of positions.\n\t * @param [Number] delta\n\t */\n\tpublic advancePos(delta: number): number {\n\t\treturn (this._pos += delta);\n\t}\n\n\t/**\n\t * Set the file position.\n\t * @param [Number] newPos\n\t */\n\tpublic setPos(newPos: number): number {\n\t\treturn (this._pos = newPos);\n\t}\n\n\t/**\n\t * **Core**: Asynchronous sync. Must be implemented by subclasses of this\n\t * class.\n\t * @param [Function(BrowserFS.ApiError)] cb\n\t */\n\tpublic async sync(): Promise<void> {\n\t\tthis.syncSync();\n\t}\n\n\t/**\n\t * **Core**: Synchronous sync.\n\t */\n\tpublic syncSync(): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\n\t/**\n\t * **Core**: Asynchronous close. Must be implemented by subclasses of this\n\t * class.\n\t * @param [Function(BrowserFS.ApiError)] cb\n\t */\n\tpublic async close(): Promise<void> {\n\t\tthis.closeSync();\n\t}\n\n\t/**\n\t * **Core**: Synchronous close.\n\t */\n\tpublic closeSync(): void {\n\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t}\n\n\t/**\n\t * Asynchronous `stat`.\n\t * @param [Function(BrowserFS.ApiError, BrowserFS.node.fs.Stats)] cb\n\t */\n\tpublic async stat(): Promise<Stats> {\n\t\treturn Stats.clone(this._stat);\n\t}\n\n\t/**\n\t * Synchronous `stat`.\n\t */\n\tpublic statSync(): Stats {\n\t\treturn Stats.clone(this._stat);\n\t}\n\n\t/**\n\t * Asynchronous truncate.\n\t * @param [Number] len\n\t * @param [Function(BrowserFS.ApiError)] cb\n\t */\n\tpublic truncate(len: number): Promise<void> {\n\t\tthis.truncateSync(len);\n\t\tif (this._flag.isSynchronous() && !getMount('/')!.metadata.synchronous) {\n\t\t\treturn this.sync();\n\t\t}\n\t}\n\n\t/**\n\t * Synchronous truncate.\n\t * @param [Number] len\n\t */\n\tpublic truncateSync(len: number): void {\n\t\tthis._dirty = true;\n\t\tif (!this._flag.isWriteable()) {\n\t\t\tthrow new ApiError(ErrorCode.EPERM, 'File not opened with a writeable mode.');\n\t\t}\n\t\tthis._stat.mtimeMs = Date.now();\n\t\tif (len > this._buffer.length) {\n\t\t\tconst buf = Buffer.alloc(len - this._buffer.length, 0);\n\t\t\t// Write will set @_stat.size for us.\n\t\t\tthis.writeSync(buf, 0, buf.length, this._buffer.length);\n\t\t\tif (this._flag.isSynchronous() && getMount('/')!.metadata.synchronous) {\n\t\t\t\tthis.syncSync();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis._stat.size = len;\n\t\t// Truncate buffer to 'len'.\n\t\tconst newBuff = Buffer.alloc(len);\n\t\tthis._buffer.copy(newBuff, 0, 0, len);\n\t\tthis._buffer = newBuff;\n\t\tif (this._flag.isSynchronous() && getMount('/')!.metadata.synchronous) {\n\t\t\tthis.syncSync();\n\t\t}\n\t}\n\n\t/**\n\t * Write buffer to the file.\n\t * Note that it is unsafe to use fs.write multiple times on the same file\n\t * without waiting for the callback.\n\t * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n\t *  the file.\n\t * @param [Number] offset Offset in the buffer to start reading data from.\n\t * @param [Number] length The amount of bytes to write to the file.\n\t * @param [Number] position Offset from the beginning of the file where this\n\t *   data should be written. If position is null, the data will be written at\n\t *   the current position.\n\t * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)]\n\t *   cb The number specifies the number of bytes written into the file.\n\t */\n\tpublic async write(buffer: Buffer, offset: number, length: number, position: number): Promise<number> {\n\t\treturn this.writeSync(buffer, offset, length, position);\n\t}\n\n\t/**\n\t * Write buffer to the file.\n\t * Note that it is unsafe to use fs.writeSync multiple times on the same file\n\t * without waiting for the callback.\n\t * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n\t *  the file.\n\t * @param [Number] offset Offset in the buffer to start reading data from.\n\t * @param [Number] length The amount of bytes to write to the file.\n\t * @param [Number] position Offset from the beginning of the file where this\n\t *   data should be written. If position is null, the data will be written at\n\t *   the current position.\n\t * @return [Number]\n\t */\n\tpublic writeSync(buffer: Buffer, offset: number, length: number, position: number): number {\n\t\tthis._dirty = true;\n\t\tif (position === undefined || position === null) {\n\t\t\tposition = this.getPos();\n\t\t}\n\t\tif (!this._flag.isWriteable()) {\n\t\t\tthrow new ApiError(ErrorCode.EPERM, 'File not opened with a writeable mode.');\n\t\t}\n\t\tconst endFp = position + length;\n\t\tif (endFp > this._stat.size) {\n\t\t\tthis._stat.size = endFp;\n\t\t\tif (endFp > this._buffer.length) {\n\t\t\t\t// Extend the buffer!\n\t\t\t\tconst newBuff = Buffer.alloc(endFp);\n\t\t\t\tthis._buffer.copy(newBuff);\n\t\t\t\tthis._buffer = newBuff;\n\t\t\t}\n\t\t}\n\t\tconst len = buffer.copy(this._buffer, position, offset, offset + length);\n\t\tthis._stat.mtimeMs = Date.now();\n\t\tif (this._flag.isSynchronous()) {\n\t\t\tthis.syncSync();\n\t\t\treturn len;\n\t\t}\n\t\tthis.setPos(position + len);\n\t\treturn len;\n\t}\n\n\t/**\n\t * Read data from the file.\n\t * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n\t *   written to.\n\t * @param [Number] offset The offset within the buffer where writing will\n\t *   start.\n\t * @param [Number] length An integer specifying the number of bytes to read.\n\t * @param [Number] position An integer specifying where to begin reading from\n\t *   in the file. If position is null, data will be read from the current file\n\t *   position.\n\t * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)] cb The\n\t *   number is the number of bytes read\n\t */\n\tpublic async read(buffer: Buffer, offset: number, length: number, position: number): Promise<{ bytesRead: number; buffer: Buffer }> {\n\t\treturn { bytesRead: this.readSync(buffer, offset, length, position), buffer };\n\t}\n\n\t/**\n\t * Read data from the file.\n\t * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n\t *   written to.\n\t * @param [Number] offset The offset within the buffer where writing will\n\t *   start.\n\t * @param [Number] length An integer specifying the number of bytes to read.\n\t * @param [Number] position An integer specifying where to begin reading from\n\t *   in the file. If position is null, data will be read from the current file\n\t *   position.\n\t * @return [Number]\n\t */\n\tpublic readSync(buffer: Buffer, offset: number, length: number, position: number): number {\n\t\tif (!this._flag.isReadable()) {\n\t\t\tthrow new ApiError(ErrorCode.EPERM, 'File not opened with a readable mode.');\n\t\t}\n\t\tif (position === undefined || position === null) {\n\t\t\tposition = this.getPos();\n\t\t}\n\t\tconst endRead = position + length;\n\t\tif (endRead > this._stat.size) {\n\t\t\tlength = this._stat.size - position;\n\t\t}\n\t\tconst rv = this._buffer.copy(buffer, offset, position, position + length);\n\t\tthis._stat.atimeMs = Date.now();\n\t\tthis._pos = position + length;\n\t\treturn rv;\n\t}\n\n\t/**\n\t * Asynchronous `fchmod`.\n\t * @param [Number|String] mode\n\t */\n\tpublic async chmod(mode: number): Promise<void> {\n\t\tthis.chmodSync(mode);\n\t}\n\n\t/**\n\t * Synchronous `fchmod`.\n\t * @param [Number] mode\n\t */\n\tpublic chmodSync(mode: number): void {\n\t\tif (!this._fs.metadata.supportsProperties) {\n\t\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t\t}\n\t\tthis._dirty = true;\n\t\tthis._stat.chmod(mode);\n\t\tthis.syncSync();\n\t}\n\n\t/**\n\t * Asynchronous `fchown`.\n\t * @param [Number] uid\n\t * @param [Number] gid\n\t */\n\tpublic async chown(uid: number, gid: number): Promise<void> {\n\t\tthis.chownSync(uid, gid);\n\t}\n\n\t/**\n\t * Synchronous `fchown`.\n\t * @param [Number] uid\n\t * @param [Number] gid\n\t */\n\tpublic chownSync(uid: number, gid: number): void {\n\t\tif (!this._fs.metadata.supportsProperties) {\n\t\t\tthrow new ApiError(ErrorCode.ENOTSUP);\n\t\t}\n\t\tthis._dirty = true;\n\t\tthis._stat.chown(uid, gid);\n\t\tthis.syncSync();\n\t}\n\n\tprotected isDirty(): boolean {\n\t\treturn this._dirty;\n\t}\n\n\t/**\n\t * Resets the dirty bit. Should only be called after a sync has completed successfully.\n\t */\n\tprotected resetDirty() {\n\t\tthis._dirty = false;\n\t}\n}\n\n/**\n * File class for the InMemory and XHR file systems.\n * Doesn't sync to anything, so it works nicely for memory-only files.\n */\nexport class NoSyncFile<T extends FileSystem> extends PreloadFile<T> implements File {\n\tconstructor(_fs: T, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n\t\tsuper(_fs, _path, _flag, _stat, contents);\n\t}\n\t/**\n\t * Asynchronous sync. Doesn't do anything, simply calls the cb.\n\t * @param [Function(BrowserFS.ApiError)] cb\n\t */\n\tpublic async sync(): Promise<void> {\n\t\treturn;\n\t}\n\t/**\n\t * Synchronous sync. Doesn't do anything.\n\t */\n\tpublic syncSync(): void {\n\t\t// NOP.\n\t}\n\t/**\n\t * Asynchronous close. Doesn't do anything, simply calls the cb.\n\t * @param [Function(BrowserFS.ApiError)] cb\n\t */\n\tpublic async close(): Promise<void> {\n\t\treturn;\n\t}\n\t/**\n\t * Synchronous close. Doesn't do anything.\n\t */\n\tpublic closeSync(): void {\n\t\t// NOP.\n\t}\n}\n", "import { BaseFileSystem, SynchronousFileSystem } from '../filesystem';\nimport { ApiError, ErrorCode } from '../ApiError';\nimport { Stats, FileType } from '../stats';\nimport { File } from '../file';\nimport { FileFlag } from '../file';\nimport * as path from 'path';\nimport * as process from 'process';\nimport Inode from '../inode';\nimport PreloadFile from '../generic/preload_file';\nimport { Cred } from '../cred';\nimport { Buffer } from 'buffer';\nimport { R_OK, W_OK } from '../emulation/constants';\n/**\n * @hidden\n */\nconst ROOT_NODE_ID: string = '/';\n/**\n * @hidden\n */\nlet emptyDirNode: Buffer | null = null;\n/**\n * Returns an empty directory node.\n * @hidden\n */\nfunction getEmptyDirNode(): Buffer {\n\tif (emptyDirNode) {\n\t\treturn emptyDirNode;\n\t}\n\treturn (emptyDirNode = Buffer.from('{}'));\n}\n\n/**\n * Generates a random ID.\n * @hidden\n */\nfunction GenerateRandomID(): string {\n\t// From http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t\tconst r = (Math.random() * 16) | 0;\n\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\treturn v.toString(16);\n\t});\n}\n\n/**\n * Represents a *synchronous* key-value store.\n */\nexport interface SyncKeyValueStore {\n\t/**\n\t * The name of the key-value store.\n\t */\n\tname(): string;\n\t/**\n\t * Empties the key-value store completely.\n\t */\n\tclear(): void;\n\t/**\n\t * Begins a new read-only transaction.\n\t */\n\tbeginTransaction(type: 'readonly'): SyncKeyValueROTransaction;\n\t/**\n\t * Begins a new read-write transaction.\n\t */\n\tbeginTransaction(type: 'readwrite'): SyncKeyValueRWTransaction;\n\tbeginTransaction(type: string): SyncKeyValueROTransaction;\n}\n\n/**\n * A read-only transaction for a synchronous key value store.\n */\nexport interface SyncKeyValueROTransaction {\n\t/**\n\t * Retrieves the data at the given key. Throws an ApiError if an error occurs\n\t * or if the key does not exist.\n\t * @param key The key to look under for data.\n\t * @return The data stored under the key, or undefined if not present.\n\t */\n\tget(key: string): Buffer | undefined;\n}\n\n/**\n * A read-write transaction for a synchronous key value store.\n */\nexport interface SyncKeyValueRWTransaction extends SyncKeyValueROTransaction {\n\t/**\n\t * Adds the data to the store under the given key.\n\t * @param key The key to add the data under.\n\t * @param data The data to add to the store.\n\t * @param overwrite If 'true', overwrite any existing data. If 'false',\n\t *   avoids storing the data if the key exists.\n\t * @return True if storage succeeded, false otherwise.\n\t */\n\tput(key: string, data: Buffer, overwrite: boolean): boolean;\n\t/**\n\t * Deletes the data at the given key.\n\t * @param key The key to delete from the store.\n\t */\n\tdel(key: string): void;\n\t/**\n\t * Commits the transaction.\n\t */\n\tcommit(): void;\n\t/**\n\t * Aborts and rolls back the transaction.\n\t */\n\tabort(): void;\n}\n\n/**\n * An interface for simple synchronous key-value stores that don't have special\n * support for transactions and such.\n */\nexport interface SimpleSyncStore {\n\tget(key: string): Buffer | undefined;\n\tput(key: string, data: Buffer, overwrite: boolean): boolean;\n\tdel(key: string): void;\n}\n\nclass LRUNode {\n\tpublic prev: LRUNode | null = null;\n\tpublic next: LRUNode | null = null;\n\tconstructor(public key: string, public value: string) {}\n}\n\n// Adapted from https://chrisrng.svbtle.com/lru-cache-in-javascript\nclass LRUCache {\n\tprivate size = 0;\n\tprivate map: { [id: string]: LRUNode } = {};\n\tprivate head: LRUNode | null = null;\n\tprivate tail: LRUNode | null = null;\n\tconstructor(public readonly limit: number) {}\n\n\t/**\n\t * Change or add a new value in the cache\n\t * We overwrite the entry if it already exists\n\t */\n\tpublic set(key: string, value: string): void {\n\t\tconst node = new LRUNode(key, value);\n\t\tif (this.map[key]) {\n\t\t\tthis.map[key].value = node.value;\n\t\t\tthis.remove(node.key);\n\t\t} else {\n\t\t\tif (this.size >= this.limit) {\n\t\t\t\tdelete this.map[this.tail!.key];\n\t\t\t\tthis.size--;\n\t\t\t\tthis.tail = this.tail!.prev;\n\t\t\t\tthis.tail!.next = null;\n\t\t\t}\n\t\t}\n\t\tthis.setHead(node);\n\t}\n\n\t/* Retrieve a single entry from the cache */\n\tpublic get(key: string): string | null {\n\t\tif (this.map[key]) {\n\t\t\tconst value = this.map[key].value;\n\t\t\tconst node = new LRUNode(key, value);\n\t\t\tthis.remove(key);\n\t\t\tthis.setHead(node);\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/* Remove a single entry from the cache */\n\tpublic remove(key: string): void {\n\t\tconst node = this.map[key];\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.prev !== null) {\n\t\t\tnode.prev.next = node.next;\n\t\t} else {\n\t\t\tthis.head = node.next;\n\t\t}\n\t\tif (node.next !== null) {\n\t\t\tnode.next.prev = node.prev;\n\t\t} else {\n\t\t\tthis.tail = node.prev;\n\t\t}\n\t\tdelete this.map[key];\n\t\tthis.size--;\n\t}\n\n\t/* Resets the entire cache - Argument limit is optional to be reset */\n\tpublic removeAll() {\n\t\tthis.size = 0;\n\t\tthis.map = {};\n\t\tthis.head = null;\n\t\tthis.tail = null;\n\t}\n\n\tprivate setHead(node: LRUNode): void {\n\t\tnode.next = this.head;\n\t\tnode.prev = null;\n\t\tif (this.head !== null) {\n\t\t\tthis.head.prev = node;\n\t\t}\n\t\tthis.head = node;\n\t\tif (this.tail === null) {\n\t\t\tthis.tail = node;\n\t\t}\n\t\tthis.size++;\n\t\tthis.map[node.key] = node;\n\t}\n}\n\n/**\n * A simple RW transaction for simple synchronous key-value stores.\n */\nexport class SimpleSyncRWTransaction implements SyncKeyValueRWTransaction {\n\t/**\n\t * Stores data in the keys we modify prior to modifying them.\n\t * Allows us to roll back commits.\n\t */\n\tprivate originalData: { [key: string]: Buffer | undefined } = {};\n\t/**\n\t * List of keys modified in this transaction, if any.\n\t */\n\tprivate modifiedKeys: string[] = [];\n\n\tconstructor(private store: SimpleSyncStore) {}\n\n\tpublic get(key: string): Buffer | undefined {\n\t\tconst val = this.store.get(key);\n\t\tthis.stashOldValue(key, val);\n\t\treturn val;\n\t}\n\n\tpublic put(key: string, data: Buffer, overwrite: boolean): boolean {\n\t\tthis.markModified(key);\n\t\treturn this.store.put(key, data, overwrite);\n\t}\n\n\tpublic del(key: string): void {\n\t\tthis.markModified(key);\n\t\tthis.store.del(key);\n\t}\n\n\tpublic commit(): void {\n\t\t/* NOP */\n\t}\n\n\tpublic abort(): void {\n\t\t// Rollback old values.\n\t\tfor (const key of this.modifiedKeys) {\n\t\t\tconst value = this.originalData[key];\n\t\t\tif (!value) {\n\t\t\t\t// Key didn't exist.\n\t\t\t\tthis.store.del(key);\n\t\t\t} else {\n\t\t\t\t// Key existed. Store old value.\n\t\t\t\tthis.store.put(key, value, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _has(key: string) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.originalData, key);\n\t}\n\n\t/**\n\t * Stashes given key value pair into `originalData` if it doesn't already\n\t * exist. Allows us to stash values the program is requesting anyway to\n\t * prevent needless `get` requests if the program modifies the data later\n\t * on during the transaction.\n\t */\n\tprivate stashOldValue(key: string, value: Buffer | undefined) {\n\t\t// Keep only the earliest value in the transaction.\n\t\tif (!this._has(key)) {\n\t\t\tthis.originalData[key] = value;\n\t\t}\n\t}\n\n\t/**\n\t * Marks the given key as modified, and stashes its value if it has not been\n\t * stashed already.\n\t */\n\tprivate markModified(key: string) {\n\t\tif (this.modifiedKeys.indexOf(key) === -1) {\n\t\t\tthis.modifiedKeys.push(key);\n\t\t\tif (!this._has(key)) {\n\t\t\t\tthis.originalData[key] = this.store.get(key);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface SyncKeyValueFileSystemOptions {\n\t/**\n\t * The actual key-value store to read from/write to.\n\t */\n\tstore: SyncKeyValueStore;\n\t/**\n\t * Should the file system support properties (mtime/atime/ctime/chmod/etc)?\n\t * Enabling this slightly increases the storage space per file, and adds\n\t * atime updates every time a file is accessed, mtime updates every time\n\t * a file is modified, and permission checks on every operation.\n\t *\n\t * Defaults to *false*.\n\t */\n\tsupportProps?: boolean;\n\t/**\n\t * Should the file system support links?\n\t */\n\tsupportLinks?: boolean;\n}\n\nexport class SyncKeyValueFile extends PreloadFile<SyncKeyValueFileSystem> implements File {\n\tconstructor(_fs: SyncKeyValueFileSystem, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n\t\tsuper(_fs, _path, _flag, _stat, contents);\n\t}\n\n\tpublic syncSync(): void {\n\t\tif (this.isDirty()) {\n\t\t\tthis._fs._syncSync(this.getPath(), this.getBuffer(), this.getStats());\n\t\t\tthis.resetDirty();\n\t\t}\n\t}\n\n\tpublic closeSync(): void {\n\t\tthis.syncSync();\n\t}\n}\n\n/**\n * A \"Synchronous key-value file system\". Stores data to/retrieves data from an\n * underlying key-value store.\n *\n * We use a unique ID for each node in the file system. The root node has a\n * fixed ID.\n * @todo Introduce Node ID caching.\n * @todo Check modes.\n */\nexport class SyncKeyValueFileSystem extends SynchronousFileSystem {\n\tpublic static isAvailable(): boolean {\n\t\treturn true;\n\t}\n\n\tprivate store: SyncKeyValueStore;\n\n\tconstructor(options: SyncKeyValueFileSystemOptions) {\n\t\tsuper();\n\t\tthis.store = options.store;\n\t\t// INVARIANT: Ensure that the root exists.\n\t\tthis.makeRootDirectory();\n\t}\n\n\tpublic getName(): string {\n\t\treturn this.store.name();\n\t}\n\tpublic isReadOnly(): boolean {\n\t\treturn false;\n\t}\n\tpublic supportsSymlinks(): boolean {\n\t\treturn false;\n\t}\n\tpublic supportsProps(): boolean {\n\t\treturn true;\n\t}\n\tpublic supportsSynch(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Delete all contents stored in the file system.\n\t */\n\tpublic empty(): void {\n\t\tthis.store.clear();\n\t\t// INVARIANT: Root always exists.\n\t\tthis.makeRootDirectory();\n\t}\n\n\tpublic accessSync(p: string, mode: number, cred: Cred): void {\n\t\tconst tx = this.store.beginTransaction('readonly'),\n\t\t\tnode = this.findINode(tx, p);\n\t\tif (!node.toStats().hasAccess(mode, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\t}\n\n\tpublic renameSync(oldPath: string, newPath: string, cred: Cred): void {\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\toldParent = path.dirname(oldPath),\n\t\t\toldName = path.basename(oldPath),\n\t\t\tnewParent = path.dirname(newPath),\n\t\t\tnewName = path.basename(newPath),\n\t\t\t// Remove oldPath from parent's directory listing.\n\t\t\toldDirNode = this.findINode(tx, oldParent),\n\t\t\toldDirList = this.getDirListing(tx, oldParent, oldDirNode);\n\n\t\tif (!oldDirNode.toStats().hasAccess(W_OK, cred)) {\n\t\t\tthrow ApiError.EACCES(oldPath);\n\t\t}\n\n\t\tif (!oldDirList[oldName]) {\n\t\t\tthrow ApiError.ENOENT(oldPath);\n\t\t}\n\t\tconst nodeId: string = oldDirList[oldName];\n\t\tdelete oldDirList[oldName];\n\n\t\t// Invariant: Can't move a folder inside itself.\n\t\t// This funny little hack ensures that the check passes only if oldPath\n\t\t// is a subpath of newParent. We append '/' to avoid matching folders that\n\t\t// are a substring of the bottom-most folder in the path.\n\t\tif ((newParent + '/').indexOf(oldPath + '/') === 0) {\n\t\t\tthrow new ApiError(ErrorCode.EBUSY, oldParent);\n\t\t}\n\n\t\t// Add newPath to parent's directory listing.\n\t\tlet newDirNode: Inode, newDirList: typeof oldDirList;\n\t\tif (newParent === oldParent) {\n\t\t\t// Prevent us from re-grabbing the same directory listing, which still\n\t\t\t// contains oldName.\n\t\t\tnewDirNode = oldDirNode;\n\t\t\tnewDirList = oldDirList;\n\t\t} else {\n\t\t\tnewDirNode = this.findINode(tx, newParent);\n\t\t\tnewDirList = this.getDirListing(tx, newParent, newDirNode);\n\t\t}\n\n\t\tif (newDirList[newName]) {\n\t\t\t// If it's a file, delete it.\n\t\t\tconst newNameNode = this.getINode(tx, newPath, newDirList[newName]);\n\t\t\tif (newNameNode.isFile()) {\n\t\t\t\ttry {\n\t\t\t\t\ttx.del(newNameNode.id);\n\t\t\t\t\ttx.del(newDirList[newName]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\ttx.abort();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If it's a directory, throw a permissions error.\n\t\t\t\tthrow ApiError.EPERM(newPath);\n\t\t\t}\n\t\t}\n\t\tnewDirList[newName] = nodeId;\n\n\t\t// Commit the two changed directory listings.\n\t\ttry {\n\t\t\ttx.put(oldDirNode.id, Buffer.from(JSON.stringify(oldDirList)), true);\n\t\t\ttx.put(newDirNode.id, Buffer.from(JSON.stringify(newDirList)), true);\n\t\t} catch (e) {\n\t\t\ttx.abort();\n\t\t\tthrow e;\n\t\t}\n\n\t\ttx.commit();\n\t}\n\n\tpublic statSync(p: string, cred: Cred): Stats {\n\t\t// Get the inode to the item, convert it into a Stats object.\n\t\tconst stats = this.findINode(this.store.beginTransaction('readonly'), p).toStats();\n\t\tif (!stats.hasAccess(R_OK, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\t\treturn stats;\n\t}\n\n\tpublic createFileSync(p: string, flag: FileFlag, mode: number, cred: Cred): File {\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\tdata = Buffer.alloc(0),\n\t\t\tnewFile = this.commitNewFile(tx, p, FileType.FILE, mode, cred, data);\n\t\t// Open the file.\n\t\treturn new SyncKeyValueFile(this, p, flag, newFile.toStats(), data);\n\t}\n\n\tpublic openFileSync(p: string, flag: FileFlag, cred: Cred): File {\n\t\tconst tx = this.store.beginTransaction('readonly'),\n\t\t\tnode = this.findINode(tx, p),\n\t\t\tdata = tx.get(node.id);\n\t\tif (!node.toStats().hasAccess(flag.getMode(), cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\t\tif (data === undefined) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\t\treturn new SyncKeyValueFile(this, p, flag, node.toStats(), data);\n\t}\n\n\tpublic unlinkSync(p: string, cred: Cred): void {\n\t\tthis.removeEntry(p, false, cred);\n\t}\n\n\tpublic rmdirSync(p: string, cred: Cred): void {\n\t\t// Check first if directory is empty.\n\t\tif (this.readdirSync(p, cred).length > 0) {\n\t\t\tthrow ApiError.ENOTEMPTY(p);\n\t\t} else {\n\t\t\tthis.removeEntry(p, true, cred);\n\t\t}\n\t}\n\n\tpublic mkdirSync(p: string, mode: number, cred: Cred): void {\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\tdata = Buffer.from('{}');\n\t\tthis.commitNewFile(tx, p, FileType.DIRECTORY, mode, cred, data);\n\t}\n\n\tpublic readdirSync(p: string, cred: Cred): string[] {\n\t\tconst tx = this.store.beginTransaction('readonly');\n\t\tconst node = this.findINode(tx, p);\n\t\tif (!node.toStats().hasAccess(R_OK, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\t\treturn Object.keys(this.getDirListing(tx, p, node));\n\t}\n\n\tpublic chmodSync(p: string, mode: number, cred: Cred): void {\n\t\tconst fd = this.openFileSync(p, FileFlag.getFileFlag('r+'), cred);\n\t\tfd.chmodSync(mode);\n\t}\n\n\tpublic chownSync(p: string, new_uid: number, new_gid: number, cred: Cred): void {\n\t\tconst fd = this.openFileSync(p, FileFlag.getFileFlag('r+'), cred);\n\t\tfd.chownSync(new_uid, new_gid);\n\t}\n\n\tpublic _syncSync(p: string, data: Buffer, stats: Stats): void {\n\t\t// @todo Ensure mtime updates properly, and use that to determine if a data\n\t\t//       update is required.\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\t// We use the _findInode helper because we actually need the INode id.\n\t\t\tfileInodeId = this._findINode(tx, path.dirname(p), path.basename(p)),\n\t\t\tfileInode = this.getINode(tx, p, fileInodeId),\n\t\t\tinodeChanged = fileInode.update(stats);\n\n\t\ttry {\n\t\t\t// Sync data.\n\t\t\ttx.put(fileInode.id, data, true);\n\t\t\t// Sync metadata.\n\t\t\tif (inodeChanged) {\n\t\t\t\ttx.put(fileInodeId, fileInode.toBuffer(), true);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\ttx.abort();\n\t\t\tthrow e;\n\t\t}\n\t\ttx.commit();\n\t}\n\n\t/**\n\t * Checks if the root directory exists. Creates it if it doesn't.\n\t */\n\tprivate makeRootDirectory() {\n\t\tconst tx = this.store.beginTransaction('readwrite');\n\t\tif (tx.get(ROOT_NODE_ID) === undefined) {\n\t\t\t// Create new inode.\n\t\t\tconst currTime = new Date().getTime(),\n\t\t\t\t// Mode 0666, owned by root:root\n\t\t\t\tdirInode = new Inode(GenerateRandomID(), 4096, 511 | FileType.DIRECTORY, currTime, currTime, currTime, 0, 0);\n\t\t\t// If the root doesn't exist, the first random ID shouldn't exist,\n\t\t\t// either.\n\t\t\ttx.put(dirInode.id, getEmptyDirNode(), false);\n\t\t\ttx.put(ROOT_NODE_ID, dirInode.toBuffer(), false);\n\t\t\ttx.commit();\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for findINode.\n\t * @param parent The parent directory of the file we are attempting to find.\n\t * @param filename The filename of the inode we are attempting to find, minus\n\t *   the parent.\n\t * @return string The ID of the file's inode in the file system.\n\t */\n\tprivate _findINode(tx: SyncKeyValueROTransaction, parent: string, filename: string, visited: Set<string> = new Set<string>()): string {\n\t\tconst currentPath = path.posix.join(parent, filename);\n\t\tif (visited.has(currentPath)) {\n\t\t\tthrow new ApiError(ErrorCode.EIO, 'Infinite loop detected while finding inode', currentPath);\n\t\t}\n\n\t\tvisited.add(currentPath);\n\t\tconst readDirectory = (inode: Inode): string => {\n\t\t\t// Get the root's directory listing.\n\t\t\tconst dirList = this.getDirListing(tx, parent, inode);\n\t\t\t// Get the file's ID.\n\t\t\tif (dirList[filename]) {\n\t\t\t\treturn dirList[filename];\n\t\t\t} else {\n\t\t\t\tthrow ApiError.ENOENT(path.resolve(parent, filename));\n\t\t\t}\n\t\t};\n\t\tif (parent === '.') {\n\t\t\tparent = process.cwd();\n\t\t}\n\t\tif (parent === '/') {\n\t\t\tif (filename === '') {\n\t\t\t\t// BASE CASE #1: Return the root's ID.\n\t\t\t\treturn ROOT_NODE_ID;\n\t\t\t} else {\n\t\t\t\t// BASE CASE #2: Find the item in the root node.\n\t\t\t\treturn readDirectory(this.getINode(tx, parent, ROOT_NODE_ID));\n\t\t\t}\n\t\t} else {\n\t\t\treturn readDirectory(this.getINode(tx, parent + path.sep + filename, this._findINode(tx, path.dirname(parent), path.basename(parent), visited)));\n\t\t}\n\t}\n\n\t/**\n\t * Finds the Inode of the given path.\n\t * @param p The path to look up.\n\t * @return The Inode of the path p.\n\t * @todo memoize/cache\n\t */\n\tprivate findINode(tx: SyncKeyValueROTransaction, p: string): Inode {\n\t\treturn this.getINode(tx, p, this._findINode(tx, path.dirname(p), path.basename(p)));\n\t}\n\n\t/**\n\t * Given the ID of a node, retrieves the corresponding Inode.\n\t * @param tx The transaction to use.\n\t * @param p The corresponding path to the file (used for error messages).\n\t * @param id The ID to look up.\n\t */\n\tprivate getINode(tx: SyncKeyValueROTransaction, p: string, id: string): Inode {\n\t\tconst inode = tx.get(id);\n\t\tif (inode === undefined) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\t\treturn Inode.fromBuffer(inode);\n\t}\n\n\t/**\n\t * Given the Inode of a directory, retrieves the corresponding directory\n\t * listing.\n\t */\n\tprivate getDirListing(tx: SyncKeyValueROTransaction, p: string, inode: Inode): { [fileName: string]: string } {\n\t\tif (!inode.isDirectory()) {\n\t\t\tthrow ApiError.ENOTDIR(p);\n\t\t}\n\t\tconst data = tx.get(inode.id);\n\t\tif (data === undefined) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\t\treturn JSON.parse(data.toString());\n\t}\n\n\t/**\n\t * Creates a new node under a random ID. Retries 5 times before giving up in\n\t * the exceedingly unlikely chance that we try to reuse a random GUID.\n\t * @return The GUID that the data was stored under.\n\t */\n\tprivate addNewNode(tx: SyncKeyValueRWTransaction, data: Buffer): string {\n\t\tconst retries = 0;\n\t\tlet currId: string;\n\t\twhile (retries < 5) {\n\t\t\ttry {\n\t\t\t\tcurrId = GenerateRandomID();\n\t\t\t\ttx.put(currId, data, false);\n\t\t\t\treturn currId;\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore and reroll.\n\t\t\t}\n\t\t}\n\t\tthrow new ApiError(ErrorCode.EIO, 'Unable to commit data to key-value store.');\n\t}\n\n\t/**\n\t * Commits a new file (well, a FILE or a DIRECTORY) to the file system with\n\t * the given mode.\n\t * Note: This will commit the transaction.\n\t * @param p The path to the new file.\n\t * @param type The type of the new file.\n\t * @param mode The mode to create the new file with.\n\t * @param data The data to store at the file's data node.\n\t * @return The Inode for the new file.\n\t */\n\tprivate commitNewFile(tx: SyncKeyValueRWTransaction, p: string, type: FileType, mode: number, cred: Cred, data: Buffer): Inode {\n\t\tconst parentDir = path.dirname(p),\n\t\t\tfname = path.basename(p),\n\t\t\tparentNode = this.findINode(tx, parentDir),\n\t\t\tdirListing = this.getDirListing(tx, parentDir, parentNode),\n\t\t\tcurrTime = new Date().getTime();\n\n\t\t//Check that the creater has correct access\n\t\tif (!parentNode.toStats().hasAccess(0b0100 /* Write */, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\n\t\t// Invariant: The root always exists.\n\t\t// If we don't check this prior to taking steps below, we will create a\n\t\t// file with name '' in root should p == '/'.\n\t\tif (p === '/') {\n\t\t\tthrow ApiError.EEXIST(p);\n\t\t}\n\n\t\t// Check if file already exists.\n\t\tif (dirListing[fname]) {\n\t\t\tthrow ApiError.EEXIST(p);\n\t\t}\n\n\t\tlet fileNode: Inode;\n\t\ttry {\n\t\t\t// Commit data.\n\t\t\tconst dataId = this.addNewNode(tx, data);\n\t\t\tfileNode = new Inode(dataId, data.length, mode | type, currTime, currTime, currTime, cred.uid, cred.gid);\n\t\t\t// Commit file node.\n\t\t\tconst fileNodeId = this.addNewNode(tx, fileNode.toBuffer());\n\t\t\t// Update and commit parent directory listing.\n\t\t\tdirListing[fname] = fileNodeId;\n\t\t\ttx.put(parentNode.id, Buffer.from(JSON.stringify(dirListing)), true);\n\t\t} catch (e) {\n\t\t\ttx.abort();\n\t\t\tthrow e;\n\t\t}\n\t\ttx.commit();\n\t\treturn fileNode;\n\t}\n\n\t/**\n\t * Remove all traces of the given path from the file system.\n\t * @param p The path to remove from the file system.\n\t * @param isDir Does the path belong to a directory, or a file?\n\t * @todo Update mtime.\n\t */\n\tprivate removeEntry(p: string, isDir: boolean, cred: Cred): void {\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\tparent: string = path.dirname(p),\n\t\t\tparentNode = this.findINode(tx, parent),\n\t\t\tparentListing = this.getDirListing(tx, parent, parentNode),\n\t\t\tfileName: string = path.basename(p);\n\n\t\tif (!parentListing[fileName]) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\n\t\tconst fileNodeId = parentListing[fileName];\n\n\t\t// Get file inode.\n\t\tconst fileNode = this.getINode(tx, p, fileNodeId);\n\n\t\tif (!fileNode.toStats().hasAccess(W_OK, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\n\t\t// Remove from directory listing of parent.\n\t\tdelete parentListing[fileName];\n\n\t\tif (!isDir && fileNode.isDirectory()) {\n\t\t\tthrow ApiError.EISDIR(p);\n\t\t} else if (isDir && !fileNode.isDirectory()) {\n\t\t\tthrow ApiError.ENOTDIR(p);\n\t\t}\n\n\t\ttry {\n\t\t\t// Delete data.\n\t\t\ttx.del(fileNode.id);\n\t\t\t// Delete node.\n\t\t\ttx.del(fileNodeId);\n\t\t\t// Update directory listing.\n\t\t\ttx.put(parentNode.id, Buffer.from(JSON.stringify(parentListing)), true);\n\t\t} catch (e) {\n\t\t\ttx.abort();\n\t\t\tthrow e;\n\t\t}\n\t\t// Success.\n\t\ttx.commit();\n\t}\n}\n\n/**\n * Represents an *asynchronous* key-value store.\n */\nexport interface AsyncKeyValueStore {\n\t/**\n\t * The name of the key-value store.\n\t */\n\tname(): string;\n\t/**\n\t * Empties the key-value store completely.\n\t */\n\tclear(): Promise<void>;\n\t/**\n\t * Begins a read-write transaction.\n\t */\n\tbeginTransaction(type: 'readwrite'): AsyncKeyValueRWTransaction;\n\t/**\n\t * Begins a read-only transaction.\n\t */\n\tbeginTransaction(type: 'readonly'): AsyncKeyValueROTransaction;\n\tbeginTransaction(type: string): AsyncKeyValueROTransaction;\n}\n\n/**\n * Represents an asynchronous read-only transaction.\n */\nexport interface AsyncKeyValueROTransaction {\n\t/**\n\t * Retrieves the data at the given key.\n\t * @param key The key to look under for data.\n\t */\n\tget(key: string): Promise<Buffer>;\n}\n\n/**\n * Represents an asynchronous read-write transaction.\n */\nexport interface AsyncKeyValueRWTransaction extends AsyncKeyValueROTransaction {\n\t/**\n\t * Adds the data to the store under the given key. Overwrites any existing\n\t * data.\n\t * @param key The key to add the data under.\n\t * @param data The data to add to the store.\n\t * @param overwrite If 'true', overwrite any existing data. If 'false',\n\t *   avoids writing the data if the key exists.\n\t */\n\tput(key: string, data: Buffer, overwrite: boolean): Promise<boolean>;\n\t/**\n\t * Deletes the data at the given key.\n\t * @param key The key to delete from the store.\n\t */\n\tdel(key: string): Promise<void>;\n\t/**\n\t * Commits the transaction.\n\t */\n\tcommit(): Promise<void>;\n\t/**\n\t * Aborts and rolls back the transaction.\n\t */\n\tabort(): Promise<void>;\n}\n\nexport class AsyncKeyValueFile extends PreloadFile<AsyncKeyValueFileSystem> implements File {\n\tconstructor(_fs: AsyncKeyValueFileSystem, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n\t\tsuper(_fs, _path, _flag, _stat, contents);\n\t}\n\n\tpublic async sync(): Promise<void> {\n\t\tif (!this.isDirty()) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this._fs._sync(this.getPath(), this.getBuffer(), this.getStats());\n\n\t\tthis.resetDirty();\n\t}\n\n\tpublic async close(): Promise<void> {\n\t\tthis.sync();\n\t}\n}\n\n/**\n * An \"Asynchronous key-value file system\". Stores data to/retrieves data from\n * an underlying asynchronous key-value store.\n */\nexport class AsyncKeyValueFileSystem extends BaseFileSystem {\n\tpublic static isAvailable(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected store: AsyncKeyValueStore;\n\tprivate _cache: LRUCache | null = null;\n\n\tconstructor(cacheSize: number) {\n\t\tsuper();\n\t\tif (cacheSize > 0) {\n\t\t\tthis._cache = new LRUCache(cacheSize);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the file system. Typically called by subclasses' async\n\t * constructors.\n\t */\n\tpublic async init(store: AsyncKeyValueStore) {\n\t\tthis.store = store;\n\t\t// INVARIANT: Ensure that the root exists.\n\t\tawait this.makeRootDirectory();\n\t}\n\tpublic getName(): string {\n\t\treturn this.store.name();\n\t}\n\tpublic isReadOnly(): boolean {\n\t\treturn false;\n\t}\n\tpublic supportsSymlinks(): boolean {\n\t\treturn false;\n\t}\n\tpublic supportsProps(): boolean {\n\t\treturn true;\n\t}\n\tpublic supportsSynch(): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Delete all contents stored in the file system.\n\t */\n\tpublic async empty(): Promise<void> {\n\t\tif (this._cache) {\n\t\t\tthis._cache.removeAll();\n\t\t}\n\t\tawait this.store.clear();\n\t\t// INVARIANT: Root always exists.\n\t\tawait this.makeRootDirectory();\n\t}\n\n\tpublic async access(p: string, mode: number, cred: Cred): Promise<void> {\n\t\tconst tx = this.store.beginTransaction('readonly');\n\t\tconst inode = await this.findINode(tx, p);\n\t\tif (!inode) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\t\tif (!inode.toStats().hasAccess(mode, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\t}\n\n\t/**\n\t * @todo Make rename compatible with the cache.\n\t */\n\tpublic async rename(oldPath: string, newPath: string, cred: Cred): Promise<void> {\n\t\tconst c = this._cache;\n\t\tif (this._cache) {\n\t\t\t// Clear and disable cache during renaming process.\n\t\t\tthis._cache = null;\n\t\t\tc.removeAll();\n\t\t}\n\n\t\ttry {\n\t\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\t\toldParent = path.dirname(oldPath),\n\t\t\t\toldName = path.basename(oldPath),\n\t\t\t\tnewParent = path.dirname(newPath),\n\t\t\t\tnewName = path.basename(newPath),\n\t\t\t\t// Remove oldPath from parent's directory listing.\n\t\t\t\toldDirNode = await this.findINode(tx, oldParent),\n\t\t\t\toldDirList = await this.getDirListing(tx, oldParent, oldDirNode);\n\n\t\t\tif (!oldDirNode.toStats().hasAccess(W_OK, cred)) {\n\t\t\t\tthrow ApiError.EACCES(oldPath);\n\t\t\t}\n\n\t\t\tif (!oldDirList[oldName]) {\n\t\t\t\tthrow ApiError.ENOENT(oldPath);\n\t\t\t}\n\t\t\tconst nodeId: string = oldDirList[oldName];\n\t\t\tdelete oldDirList[oldName];\n\n\t\t\t// Invariant: Can't move a folder inside itself.\n\t\t\t// This funny little hack ensures that the check passes only if oldPath\n\t\t\t// is a subpath of newParent. We append '/' to avoid matching folders that\n\t\t\t// are a substring of the bottom-most folder in the path.\n\t\t\tif ((newParent + '/').indexOf(oldPath + '/') === 0) {\n\t\t\t\tthrow new ApiError(ErrorCode.EBUSY, oldParent);\n\t\t\t}\n\n\t\t\t// Add newPath to parent's directory listing.\n\t\t\tlet newDirNode: Inode, newDirList: typeof oldDirList;\n\t\t\tif (newParent === oldParent) {\n\t\t\t\t// Prevent us from re-grabbing the same directory listing, which still\n\t\t\t\t// contains oldName.\n\t\t\t\tnewDirNode = oldDirNode;\n\t\t\t\tnewDirList = oldDirList;\n\t\t\t} else {\n\t\t\t\tnewDirNode = await this.findINode(tx, newParent);\n\t\t\t\tnewDirList = await this.getDirListing(tx, newParent, newDirNode);\n\t\t\t}\n\n\t\t\tif (newDirList[newName]) {\n\t\t\t\t// If it's a file, delete it.\n\t\t\t\tconst newNameNode = await this.getINode(tx, newPath, newDirList[newName]);\n\t\t\t\tif (newNameNode.isFile()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait tx.del(newNameNode.id);\n\t\t\t\t\t\tawait tx.del(newDirList[newName]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tawait tx.abort();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// If it's a directory, throw a permissions error.\n\t\t\t\t\tthrow ApiError.EPERM(newPath);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewDirList[newName] = nodeId;\n\n\t\t\t// Commit the two changed directory listings.\n\t\t\ttry {\n\t\t\t\tawait tx.put(oldDirNode.id, Buffer.from(JSON.stringify(oldDirList)), true);\n\t\t\t\tawait tx.put(newDirNode.id, Buffer.from(JSON.stringify(newDirList)), true);\n\t\t\t} catch (e) {\n\t\t\t\tawait tx.abort();\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tawait tx.commit();\n\t\t} finally {\n\t\t\tif (c) {\n\t\t\t\tthis._cache = c;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async stat(p: string, cred: Cred): Promise<Stats> {\n\t\tconst tx = this.store.beginTransaction('readonly');\n\t\tconst inode = await this.findINode(tx, p);\n\t\tconst stats = inode!.toStats();\n\t\tif (!stats.hasAccess(R_OK, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\t\treturn stats;\n\t}\n\n\tpublic async createFile(p: string, flag: FileFlag, mode: number, cred: Cred): Promise<File> {\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\tdata = Buffer.alloc(0),\n\t\t\tnewFile = await this.commitNewFile(tx, p, FileType.FILE, mode, cred, data);\n\t\t// Open the file.\n\t\treturn new AsyncKeyValueFile(this, p, flag, newFile.toStats(), data);\n\t}\n\n\tpublic async openFile(p: string, flag: FileFlag, cred: Cred): Promise<File> {\n\t\tconst tx = this.store.beginTransaction('readonly'),\n\t\t\tnode = await this.findINode(tx, p),\n\t\t\tdata = await tx.get(node.id);\n\t\tif (!node.toStats().hasAccess(flag.getMode(), cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\t\tif (data === undefined) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\t\treturn new AsyncKeyValueFile(this, p, flag, node.toStats(), data);\n\t}\n\n\tpublic async unlink(p: string, cred: Cred): Promise<void> {\n\t\treturn this.removeEntry(p, false, cred);\n\t}\n\n\tpublic async rmdir(p: string, cred: Cred): Promise<void> {\n\t\t// Check first if directory is empty.\n\t\tconst list = await this.readdir(p, cred);\n\t\tif (list.length > 0) {\n\t\t\tthrow ApiError.ENOTEMPTY(p);\n\t\t}\n\t\tawait this.removeEntry(p, true, cred);\n\t}\n\n\tpublic async mkdir(p: string, mode: number, cred: Cred): Promise<void> {\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\tdata = Buffer.from('{}');\n\t\tawait this.commitNewFile(tx, p, FileType.DIRECTORY, mode, cred, data);\n\t}\n\n\tpublic async readdir(p: string, cred: Cred): Promise<string[]> {\n\t\tconst tx = this.store.beginTransaction('readonly');\n\t\tconst node = await this.findINode(tx, p);\n\t\tif (!node.toStats().hasAccess(R_OK, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\t\treturn Object.keys(await this.getDirListing(tx, p, node));\n\t}\n\n\tpublic async chmod(p: string, mode: number, cred: Cred): Promise<void> {\n\t\tconst fd = await this.openFile(p, FileFlag.getFileFlag('r+'), cred);\n\t\tawait fd.chmod(mode);\n\t}\n\n\tpublic async chown(p: string, new_uid: number, new_gid: number, cred: Cred): Promise<void> {\n\t\tconst fd = await this.openFile(p, FileFlag.getFileFlag('r+'), cred);\n\t\tawait fd.chown(new_uid, new_gid);\n\t}\n\n\tpublic async _sync(p: string, data: Buffer, stats: Stats): Promise<void> {\n\t\t// @todo Ensure mtime updates properly, and use that to determine if a data\n\t\t//       update is required.\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\t// We use the _findInode helper because we actually need the INode id.\n\t\t\tfileInodeId = await this._findINode(tx, path.dirname(p), path.basename(p)),\n\t\t\tfileInode = await this.getINode(tx, p, fileInodeId),\n\t\t\tinodeChanged = fileInode.update(stats);\n\n\t\ttry {\n\t\t\t// Sync data.\n\t\t\tawait tx.put(fileInode.id, data, true);\n\t\t\t// Sync metadata.\n\t\t\tif (inodeChanged) {\n\t\t\t\tawait tx.put(fileInodeId, fileInode.toBuffer(), true);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tawait tx.abort();\n\t\t\tthrow e;\n\t\t}\n\t\tawait tx.commit();\n\t}\n\n\t/**\n\t * Checks if the root directory exists. Creates it if it doesn't.\n\t */\n\tprivate async makeRootDirectory(): Promise<void> {\n\t\tconst tx = this.store.beginTransaction('readwrite');\n\t\tif ((await tx.get(ROOT_NODE_ID)) === undefined) {\n\t\t\t// Create new inode.\n\t\t\tconst currTime = new Date().getTime(),\n\t\t\t\t// Mode 0666, owned by root:root\n\t\t\t\tdirInode = new Inode(GenerateRandomID(), 4096, 511 | FileType.DIRECTORY, currTime, currTime, currTime, 0, 0);\n\t\t\t// If the root doesn't exist, the first random ID shouldn't exist,\n\t\t\t// either.\n\t\t\tawait tx.put(dirInode.id, getEmptyDirNode(), false);\n\t\t\tawait tx.put(ROOT_NODE_ID, dirInode.toBuffer(), false);\n\t\t\tawait tx.commit();\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for findINode.\n\t * @param parent The parent directory of the file we are attempting to find.\n\t * @param filename The filename of the inode we are attempting to find, minus\n\t *   the parent.\n\t */\n\tprivate async _findINode(tx: AsyncKeyValueROTransaction, parent: string, filename: string, visited: Set<string> = new Set<string>()): Promise<string> {\n\t\tconst currentPath = path.posix.join(parent, filename);\n\t\tif (visited.has(currentPath)) {\n\t\t\tthrow new ApiError(ErrorCode.EIO, 'Infinite loop detected while finding inode', currentPath);\n\t\t}\n\n\t\tvisited.add(currentPath);\n\t\tif (this._cache) {\n\t\t\tconst id = this._cache.get(currentPath);\n\t\t\tif (id) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\n\t\tif (parent === '/') {\n\t\t\tif (filename === '') {\n\t\t\t\t// BASE CASE #1: Return the root's ID.\n\t\t\t\tif (this._cache) {\n\t\t\t\t\tthis._cache.set(currentPath, ROOT_NODE_ID);\n\t\t\t\t}\n\t\t\t\treturn ROOT_NODE_ID;\n\t\t\t} else {\n\t\t\t\t// BASE CASE #2: Find the item in the root node.\n\t\t\t\tconst inode = await this.getINode(tx, parent, ROOT_NODE_ID);\n\t\t\t\tconst dirList = await this.getDirListing(tx, parent, inode!);\n\t\t\t\tif (dirList![filename]) {\n\t\t\t\t\tconst id = dirList![filename];\n\t\t\t\t\tif (this._cache) {\n\t\t\t\t\t\tthis._cache.set(currentPath, id);\n\t\t\t\t\t}\n\t\t\t\t\treturn id;\n\t\t\t\t} else {\n\t\t\t\t\tthrow ApiError.ENOENT(path.resolve(parent, filename));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Get the parent directory's INode, and find the file in its directory\n\t\t\t// listing.\n\t\t\tconst inode = await this.findINode(tx, parent, visited);\n\t\t\tconst dirList = await this.getDirListing(tx, parent, inode!);\n\t\t\tif (dirList![filename]) {\n\t\t\t\tconst id = dirList![filename];\n\t\t\t\tif (this._cache) {\n\t\t\t\t\tthis._cache.set(currentPath, id);\n\t\t\t\t}\n\t\t\t\treturn id;\n\t\t\t} else {\n\t\t\t\tthrow ApiError.ENOENT(path.resolve(parent, filename));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Finds the Inode of the given path.\n\t * @param p The path to look up.\n\t * @todo memoize/cache\n\t */\n\tprivate async findINode(tx: AsyncKeyValueROTransaction, p: string, visited: Set<string> = new Set<string>()): Promise<Inode> {\n\t\tconst id = await this._findINode(tx, path.dirname(p), path.basename(p), visited);\n\t\treturn this.getINode(tx, p, id!);\n\t}\n\n\t/**\n\t * Given the ID of a node, retrieves the corresponding Inode.\n\t * @param tx The transaction to use.\n\t * @param p The corresponding path to the file (used for error messages).\n\t * @param id The ID to look up.\n\t */\n\tprivate async getINode(tx: AsyncKeyValueROTransaction, p: string, id: string): Promise<Inode> {\n\t\tconst data = await tx.get(id);\n\t\tif (!data) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\t\treturn Inode.fromBuffer(data);\n\t}\n\n\t/**\n\t * Given the Inode of a directory, retrieves the corresponding directory\n\t * listing.\n\t */\n\tprivate async getDirListing(tx: AsyncKeyValueROTransaction, p: string, inode: Inode): Promise<{ [fileName: string]: string }> {\n\t\tif (!inode.isDirectory()) {\n\t\t\tthrow ApiError.ENOTDIR(p);\n\t\t}\n\t\tconst data = await tx.get(inode.id);\n\t\ttry {\n\t\t\treturn JSON.parse(data!.toString());\n\t\t} catch (e) {\n\t\t\t// Occurs when data is undefined, or corresponds to something other\n\t\t\t// than a directory listing. The latter should never occur unless\n\t\t\t// the file system is corrupted.\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a new node under a random ID. Retries 5 times before giving up in\n\t * the exceedingly unlikely chance that we try to reuse a random GUID.\n\t */\n\tprivate async addNewNode(tx: AsyncKeyValueRWTransaction, data: Buffer): Promise<string> {\n\t\tlet retries = 0;\n\t\tconst reroll = async () => {\n\t\t\tif (++retries === 5) {\n\t\t\t\t// Max retries hit. Return with an error.\n\t\t\t\tthrow new ApiError(ErrorCode.EIO, 'Unable to commit data to key-value store.');\n\t\t\t} else {\n\t\t\t\t// Try again.\n\t\t\t\tconst currId = GenerateRandomID();\n\t\t\t\tconst committed = await tx.put(currId, data, false);\n\t\t\t\tif (!committed) {\n\t\t\t\t\treturn reroll();\n\t\t\t\t} else {\n\t\t\t\t\treturn currId;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn reroll();\n\t}\n\n\t/**\n\t * Commits a new file (well, a FILE or a DIRECTORY) to the file system with\n\t * the given mode.\n\t * Note: This will commit the transaction.\n\t * @param p The path to the new file.\n\t * @param type The type of the new file.\n\t * @param mode The mode to create the new file with.\n\t * @param cred The UID/GID to create the file with\n\t * @param data The data to store at the file's data node.\n\t */\n\tprivate async commitNewFile(tx: AsyncKeyValueRWTransaction, p: string, type: FileType, mode: number, cred: Cred, data: Buffer): Promise<Inode> {\n\t\tconst parentDir = path.dirname(p),\n\t\t\tfname = path.basename(p),\n\t\t\tparentNode = await this.findINode(tx, parentDir),\n\t\t\tdirListing = await this.getDirListing(tx, parentDir, parentNode),\n\t\t\tcurrTime = new Date().getTime();\n\n\t\t//Check that the creater has correct access\n\t\tif (!parentNode.toStats().hasAccess(W_OK, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\n\t\t// Invariant: The root always exists.\n\t\t// If we don't check this prior to taking steps below, we will create a\n\t\t// file with name '' in root should p == '/'.\n\t\tif (p === '/') {\n\t\t\tthrow ApiError.EEXIST(p);\n\t\t}\n\n\t\t// Check if file already exists.\n\t\tif (dirListing[fname]) {\n\t\t\tawait tx.abort();\n\t\t\tthrow ApiError.EEXIST(p);\n\t\t}\n\t\ttry {\n\t\t\t// Commit data.\n\t\t\tconst dataId = await this.addNewNode(tx, data);\n\t\t\tconst fileNode = new Inode(dataId, data.length, mode | type, currTime, currTime, currTime, cred.uid, cred.gid);\n\t\t\t// Commit file node.\n\t\t\tconst fileNodeId = await this.addNewNode(tx, fileNode.toBuffer());\n\t\t\t// Update and commit parent directory listing.\n\t\t\tdirListing[fname] = fileNodeId;\n\t\t\tawait tx.put(parentNode.id, Buffer.from(JSON.stringify(dirListing)), true);\n\t\t\tawait tx.commit();\n\t\t\treturn fileNode;\n\t\t} catch (e) {\n\t\t\ttx.abort();\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Remove all traces of the given path from the file system.\n\t * @param p The path to remove from the file system.\n\t * @param isDir Does the path belong to a directory, or a file?\n\t * @todo Update mtime.\n\t */\n\t/**\n\t * Remove all traces of the given path from the file system.\n\t * @param p The path to remove from the file system.\n\t * @param isDir Does the path belong to a directory, or a file?\n\t * @todo Update mtime.\n\t */\n\tprivate async removeEntry(p: string, isDir: boolean, cred: Cred): Promise<void> {\n\t\tif (this._cache) {\n\t\t\tthis._cache.remove(p);\n\t\t}\n\t\tconst tx = this.store.beginTransaction('readwrite'),\n\t\t\tparent: string = path.dirname(p),\n\t\t\tparentNode = await this.findINode(tx, parent),\n\t\t\tparentListing = await this.getDirListing(tx, parent, parentNode),\n\t\t\tfileName: string = path.basename(p);\n\n\t\tif (!parentListing[fileName]) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\n\t\tconst fileNodeId = parentListing[fileName];\n\n\t\t// Get file inode.\n\t\tconst fileNode = await this.getINode(tx, p, fileNodeId);\n\n\t\tif (!fileNode.toStats().hasAccess(W_OK, cred)) {\n\t\t\tthrow ApiError.EACCES(p);\n\t\t}\n\n\t\t// Remove from directory listing of parent.\n\t\tdelete parentListing[fileName];\n\n\t\tif (!isDir && fileNode.isDirectory()) {\n\t\t\tthrow ApiError.EISDIR(p);\n\t\t} else if (isDir && !fileNode.isDirectory()) {\n\t\t\tthrow ApiError.ENOTDIR(p);\n\t\t}\n\n\t\ttry {\n\t\t\t// Delete data.\n\t\t\tawait tx.del(fileNode.id);\n\t\t\t// Delete node.\n\t\t\tawait tx.del(fileNodeId);\n\t\t\t// Update directory listing.\n\t\t\tawait tx.put(parentNode.id, Buffer.from(JSON.stringify(parentListing)), true);\n\t\t} catch (e) {\n\t\t\tawait tx.abort();\n\t\t\tthrow e;\n\t\t}\n\t\t// Success.\n\t\tawait tx.commit();\n\t}\n}\n", "/**\n * Grab bag of utility functions used across the code.\n */\nimport { FileSystem } from './filesystem';\nimport { ErrorCode, ApiError } from './ApiError';\nimport * as path from 'path';\nimport { Cred } from './cred';\nimport { Buffer } from 'buffer';\nimport type { BackendConstructor, BackendOptions, BaseBackendConstructor } from './backends/backend';\n\n/**\n * Synchronous recursive makedir.\n * @hidden\n */\nexport function mkdirpSync(p: string, mode: number, cred: Cred, fs: FileSystem): void {\n\tif (!fs.existsSync(p, cred)) {\n\t\tmkdirpSync(path.dirname(p), mode, cred, fs);\n\t\tfs.mkdirSync(p, mode, cred);\n\t}\n}\n\n/**\n * Copies a slice of the given buffer\n * @hidden\n */\nexport function copyingSlice(buff: Buffer, start: number = 0, end = buff.length): Buffer {\n\tif (start < 0 || end < 0 || end > buff.length || start > end) {\n\t\tthrow new TypeError(`Invalid slice bounds on buffer of length ${buff.length}: [${start}, ${end}]`);\n\t}\n\tif (buff.length === 0) {\n\t\t// Avoid s0 corner case in ArrayBuffer case.\n\t\treturn Buffer.alloc(0);\n\t} else {\n\t\treturn buff.subarray(start, end);\n\t}\n}\n\n/**\n * Option validator for a Buffer file system option.\n * @hidden\n */\nexport async function bufferValidator(v: object): Promise<void> {\n\tif (!Buffer.isBuffer(v)) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'option must be a Buffer.');\n\t}\n}\n\n/*\n * Levenshtein distance, from the `js-levenshtein` NPM module.\n * Copied here to avoid complexity of adding another CommonJS module dependency.\n */\n\nfunction _min(d0: number, d1: number, d2: number, bx: number, ay: number): number {\n\treturn Math.min(d0 + 1, d1 + 1, d2 + 1, bx === ay ? d1 : d1 + 1);\n}\n\n/**\n * Calculates levenshtein distance.\n * @param a\n * @param b\n */\nfunction levenshtein(a: string, b: string): number {\n\tif (a === b) {\n\t\treturn 0;\n\t}\n\n\tif (a.length > b.length) {\n\t\t[a, b] = [b, a]; // Swap a and b\n\t}\n\n\tlet la = a.length;\n\tlet lb = b.length;\n\n\t// Trim common suffix\n\twhile (la > 0 && a.charCodeAt(la - 1) === b.charCodeAt(lb - 1)) {\n\t\tla--;\n\t\tlb--;\n\t}\n\n\tlet offset = 0;\n\n\t// Trim common prefix\n\twhile (offset < la && a.charCodeAt(offset) === b.charCodeAt(offset)) {\n\t\toffset++;\n\t}\n\n\tla -= offset;\n\tlb -= offset;\n\n\tif (la === 0 || lb === 1) {\n\t\treturn lb;\n\t}\n\n\tconst vector = new Array<number>(la << 1);\n\n\tfor (let y = 0; y < la; ) {\n\t\tvector[la + y] = a.charCodeAt(offset + y);\n\t\tvector[y] = ++y;\n\t}\n\n\tlet x: number;\n\tlet d0: number;\n\tlet d1: number;\n\tlet d2: number;\n\tlet d3: number;\n\tfor (x = 0; x + 3 < lb; ) {\n\t\tconst bx0 = b.charCodeAt(offset + (d0 = x));\n\t\tconst bx1 = b.charCodeAt(offset + (d1 = x + 1));\n\t\tconst bx2 = b.charCodeAt(offset + (d2 = x + 2));\n\t\tconst bx3 = b.charCodeAt(offset + (d3 = x + 3));\n\t\tlet dd = (x += 4);\n\t\tfor (let y = 0; y < la; ) {\n\t\t\tconst ay = vector[la + y];\n\t\t\tconst dy = vector[y];\n\t\t\td0 = _min(dy, d0, d1, bx0, ay);\n\t\t\td1 = _min(d0, d1, d2, bx1, ay);\n\t\t\td2 = _min(d1, d2, d3, bx2, ay);\n\t\t\tdd = _min(d2, d3, dd, bx3, ay);\n\t\t\tvector[y++] = dd;\n\t\t\td3 = d2;\n\t\t\td2 = d1;\n\t\t\td1 = d0;\n\t\t\td0 = dy;\n\t\t}\n\t}\n\n\tlet dd: number = 0;\n\tfor (; x < lb; ) {\n\t\tconst bx0 = b.charCodeAt(offset + (d0 = x));\n\t\tdd = ++x;\n\t\tfor (let y = 0; y < la; y++) {\n\t\t\tconst dy = vector[y];\n\t\t\tvector[y] = dd = dy < d0 || dd < d0 ? (dy > dd ? dd + 1 : dy + 1) : bx0 === vector[la + y] ? d0 : d0 + 1;\n\t\t\td0 = dy;\n\t\t}\n\t}\n\n\treturn dd;\n}\n\n/**\n * Checks that the given options object is valid for the file system options.\n * @hidden\n */\nexport async function checkOptions(backend: BaseBackendConstructor, opts: object): Promise<void> {\n\tconst optsInfo = backend.Options;\n\tconst fsName = backend.Name;\n\n\tlet pendingValidators = 0;\n\tlet callbackCalled = false;\n\tlet loopEnded = false;\n\n\t// Check for required options.\n\tfor (const optName in optsInfo) {\n\t\tif (Object.prototype.hasOwnProperty.call(optsInfo, optName)) {\n\t\t\tconst opt = optsInfo[optName];\n\t\t\tconst providedValue = opts && opts[optName];\n\n\t\t\tif (providedValue === undefined || providedValue === null) {\n\t\t\t\tif (!opt.optional) {\n\t\t\t\t\t// Required option, not provided.\n\t\t\t\t\t// Any incorrect options provided? Which ones are close to the provided one?\n\t\t\t\t\t// (edit distance 5 === close)\n\t\t\t\t\tconst incorrectOptions = Object.keys(opts)\n\t\t\t\t\t\t.filter(o => !(o in optsInfo))\n\t\t\t\t\t\t.map((a: string) => {\n\t\t\t\t\t\t\treturn { str: a, distance: levenshtein(optName, a) };\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(o => o.distance < 5)\n\t\t\t\t\t\t.sort((a, b) => a.distance - b.distance);\n\t\t\t\t\t// Validators may be synchronous.\n\t\t\t\t\tif (callbackCalled) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallbackCalled = true;\n\t\t\t\t\tthrow new ApiError(\n\t\t\t\t\t\tErrorCode.EINVAL,\n\t\t\t\t\t\t`[${fsName}] Required option '${optName}' not provided.${\n\t\t\t\t\t\t\tincorrectOptions.length > 0 ? ` You provided unrecognized option '${incorrectOptions[0].str}'; perhaps you meant to type '${optName}'.` : ''\n\t\t\t\t\t\t}\\nOption description: ${opt.description}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Else: Optional option, not provided. That is OK.\n\t\t\t} else {\n\t\t\t\t// Option provided! Check type.\n\t\t\t\tlet typeMatches = false;\n\t\t\t\tif (Array.isArray(opt.type)) {\n\t\t\t\t\ttypeMatches = opt.type.indexOf(typeof providedValue) !== -1;\n\t\t\t\t} else {\n\t\t\t\t\ttypeMatches = typeof providedValue === opt.type;\n\t\t\t\t}\n\t\t\t\tif (!typeMatches) {\n\t\t\t\t\t// Validators may be synchronous.\n\t\t\t\t\tif (callbackCalled) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallbackCalled = true;\n\t\t\t\t\tthrow new ApiError(\n\t\t\t\t\t\tErrorCode.EINVAL,\n\t\t\t\t\t\t`[${fsName}] Value provided for option ${optName} is not the proper type. Expected ${\n\t\t\t\t\t\t\tArray.isArray(opt.type) ? `one of {${opt.type.join(', ')}}` : opt.type\n\t\t\t\t\t\t}, but received ${typeof providedValue}\\nOption description: ${opt.description}`\n\t\t\t\t\t);\n\t\t\t\t} else if (opt.validator) {\n\t\t\t\t\tpendingValidators++;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait opt.validator(providedValue);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (!callbackCalled) {\n\t\t\t\t\t\t\tif (e) {\n\t\t\t\t\t\t\t\tcallbackCalled = true;\n\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpendingValidators--;\n\t\t\t\t\t\t\tif (pendingValidators === 0 && loopEnded) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Otherwise: All good!\n\t\t\t}\n\t\t}\n\t}\n\tloopEnded = true;\n\tif (pendingValidators === 0 && !callbackCalled) {\n\t\treturn;\n\t}\n}\n\n/** Waits n ms.  */\nexport function wait(ms: number): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tsetTimeout(resolve, ms);\n\t});\n}\n\n/**\n * Converts a callback into a promise. Assumes last parameter is the callback\n * @todo Look at changing resolve value from cbArgs[0] to include other callback arguments?\n */\nexport function toPromise(fn: (...fnArgs: unknown[]) => unknown) {\n\treturn function (...args: unknown[]): Promise<unknown> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\targs.push((e: ApiError, ...cbArgs: unknown[]) => {\n\t\t\t\tif (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(cbArgs[0]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tfn(...args);\n\t\t});\n\t};\n}\n\n/**\n * @hidden\n */\nexport const setImmediate = typeof globalThis.setImmediate == 'function' ? globalThis.setImmediate : cb => setTimeout(cb, 0);\n", "import type { BFSCallback, FileSystem } from '../filesystem';\nimport { checkOptions } from '../utils';\n\n/**\n * Describes a file system option.\n */\nexport interface BackendOption<T> {\n\t/**\n\t * The basic JavaScript type(s) for this option.\n\t */\n\ttype: string | string[];\n\n\t/**\n\t * Whether or not the option is optional (e.g., can be set to null or undefined).\n\t * Defaults to `false`.\n\t */\n\toptional?: boolean;\n\n\t/**\n\t * Description of the option. Used in error messages and documentation.\n\t */\n\tdescription: string;\n\n\t/**\n\t * A custom validation function to check if the option is valid.\n\t * Resolves if valid and rejects if not.\n\t */\n\tvalidator?(opt: T): Promise<void>;\n}\n\n/**\n * Describes all of the options available in a file system.\n */\nexport interface BackendOptions {\n\t[name: string]: BackendOption<unknown>;\n}\n\n/**\n * Contains types for static functions on a backend.\n */\nexport interface BaseBackendConstructor<FS extends typeof FileSystem = typeof FileSystem> {\n\tnew (...params: ConstructorParameters<FS>): InstanceType<FS>;\n\n\t/**\n\t * A name to identify the backend.\n\t */\n\tName: string;\n\n\t/**\n\t * Describes all of the options available for this backend.\n\t */\n\tOptions: BackendOptions;\n\n\t/**\n\t * Whether the backend is available in the current environment.\n\t * It supports checking synchronously and asynchronously\n\t * Sync:\n\t * Returns 'true' if this backend is available in the current\n\t * environment. For example, a `localStorage`-backed filesystem will return\n\t * 'false' if the browser does not support that API.\n\t *\n\t * Defaults to 'false', as the FileSystem base class isn't usable alone.\n\t */\n\tisAvailable(): boolean;\n}\n\n/**\n * Contains types for static functions on a backend.\n */\nexport interface BackendConstructor<FS extends typeof FileSystem = typeof FileSystem> extends BaseBackendConstructor<FS> {\n\t/**\n\t * Creates backend of this given type with the given\n\t * options, and either returns the result in a promise or callback.\n\t */\n\tCreate(): Promise<InstanceType<FS>>;\n\tCreate(options: object): Promise<InstanceType<FS>>;\n\tCreate(cb: BFSCallback<InstanceType<FS>>): void;\n\tCreate(options: object, cb: BFSCallback<InstanceType<FS>>): void;\n\tCreate(options: object, cb?: BFSCallback<InstanceType<FS>>): Promise<InstanceType<FS>> | void;\n}\n\nexport function CreateBackend<FS extends BaseBackendConstructor>(this: FS): Promise<InstanceType<FS>>;\nexport function CreateBackend<FS extends BaseBackendConstructor>(this: FS, options: BackendOptions): Promise<InstanceType<FS>>;\nexport function CreateBackend<FS extends BaseBackendConstructor>(this: FS, cb: BFSCallback<InstanceType<FS>>): void;\nexport function CreateBackend<FS extends BaseBackendConstructor>(this: FS, options: BackendOptions, cb: BFSCallback<InstanceType<FS>>): void;\nexport function CreateBackend<FS extends BaseBackendConstructor>(\n\tthis: FS,\n\toptions?: BackendOptions | BFSCallback<InstanceType<FS>>,\n\tcb?: BFSCallback<InstanceType<FS>>\n): Promise<InstanceType<FS>> | void {\n\tcb = typeof options === 'function' ? options : cb;\n\n\tcheckOptions(this, options);\n\n\tconst fs = new this(typeof options === 'function' ? {} : options) as InstanceType<FS>;\n\n\t// Promise\n\tif (typeof cb != 'function') {\n\t\treturn fs.whenReady();\n\t}\n\n\t// Callback\n\tfs.whenReady()\n\t\t.then(fs => cb(null, fs))\n\t\t.catch(err => cb(err));\n}\n", "import { SyncKeyValueStore, SimpleSyncStore, SimpleSyncRWTransaction, SyncKeyValueRWTransaction, SyncKeyValueFileSystem } from '../generic/key_value_filesystem';\nimport { CreateBackend, type BackendOptions } from './backend';\n\n/**\n * A simple in-memory key-value store backed by a JavaScript object.\n */\nexport class InMemoryStore implements SyncKeyValueStore, SimpleSyncStore {\n\tprivate store: Map<string, Buffer> = new Map<string, Buffer>();\n\n\tpublic name() {\n\t\treturn InMemoryFileSystem.Name;\n\t}\n\tpublic clear() {\n\t\tthis.store.clear();\n\t}\n\n\tpublic beginTransaction(type: string): SyncKeyValueRWTransaction {\n\t\treturn new SimpleSyncRWTransaction(this);\n\t}\n\n\tpublic get(key: string): Buffer {\n\t\treturn this.store.get(key);\n\t}\n\n\tpublic put(key: string, data: Buffer, overwrite: boolean): boolean {\n\t\tif (!overwrite && this.store.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.store.set(key, data);\n\t\treturn true;\n\t}\n\n\tpublic del(key: string): void {\n\t\tthis.store.delete(key);\n\t}\n}\n\n/**\n * A simple in-memory file system backed by an InMemoryStore.\n * Files are not persisted across page loads.\n */\nexport class InMemoryFileSystem extends SyncKeyValueFileSystem {\n\tpublic static readonly Name = 'InMemory';\n\n\tpublic static Create = CreateBackend.bind(this);\n\n\tpublic static readonly Options: BackendOptions = {};\n\n\tpublic constructor() {\n\t\tsuper({ store: new InMemoryStore() });\n\t}\n}\n", "// Utilities and shared data\n\nimport { posix as path } from 'path';\nimport { ApiError, ErrorCode } from '../ApiError';\nimport { Cred } from '../cred';\nimport { FileSystem } from '../filesystem';\nimport { File } from '../file';\nimport { InMemoryFileSystem } from '../backends/InMemory';\nimport { BackendConstructor } from '../backends/backend';\n\n/**\n * converts Date or number to a fractional UNIX timestamp\n * Grabbed from NodeJS sources (lib/fs.js)\n */\nexport function _toUnixTimestamp(time: Date | number): number {\n\tif (typeof time === 'number') {\n\t\treturn time;\n\t} else if (time instanceof Date) {\n\t\treturn time.getTime() / 1000;\n\t}\n\tthrow new Error('Cannot parse time: ' + time);\n}\n\nexport function normalizeMode(mode: unknown, def: number): number {\n\tswitch (typeof mode) {\n\t\tcase 'number':\n\t\t\t// (path, flag, mode, cb?)\n\t\t\treturn mode;\n\t\tcase 'string':\n\t\t\t// (path, flag, modeString, cb?)\n\t\t\tconst trueMode = parseInt(mode, 8);\n\t\t\tif (!isNaN(trueMode)) {\n\t\t\t\treturn trueMode;\n\t\t\t}\n\t\t\t// Invalid string.\n\t\t\treturn def;\n\t\tdefault:\n\t\t\treturn def;\n\t}\n}\n\nexport function normalizeTime(time: number | Date): Date {\n\tif (time instanceof Date) {\n\t\treturn time;\n\t}\n\n\tif (typeof time === 'number') {\n\t\treturn new Date(time * 1000);\n\t}\n\n\tthrow new ApiError(ErrorCode.EINVAL, `Invalid time.`);\n}\n\nexport function normalizePath(p: string): string {\n\t// Node doesn't allow null characters in paths.\n\tif (p.indexOf('\\u0000') >= 0) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Path must be a string without null bytes.');\n\t}\n\tif (p === '') {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Path must not be empty.');\n\t}\n\tp = p.replaceAll(/\\/+/g, '/');\n\treturn path.resolve(p);\n}\n\nexport function normalizeOptions(options: any, defEnc: string | null, defFlag: string, defMode: number | null): { encoding: BufferEncoding; flag: string; mode: number } {\n\t// typeof null === 'object' so special-case handing is needed.\n\tswitch (options === null ? 'null' : typeof options) {\n\t\tcase 'object':\n\t\t\treturn {\n\t\t\t\tencoding: typeof options['encoding'] !== 'undefined' ? options['encoding'] : defEnc,\n\t\t\t\tflag: typeof options['flag'] !== 'undefined' ? options['flag'] : defFlag,\n\t\t\t\tmode: normalizeMode(options['mode'], defMode!),\n\t\t\t};\n\t\tcase 'string':\n\t\t\treturn {\n\t\t\t\tencoding: options,\n\t\t\t\tflag: defFlag,\n\t\t\t\tmode: defMode!,\n\t\t\t};\n\t\tcase 'null':\n\t\tcase 'undefined':\n\t\tcase 'function':\n\t\t\treturn {\n\t\t\t\tencoding: defEnc! as BufferEncoding,\n\t\t\t\tflag: defFlag,\n\t\t\t\tmode: defMode!,\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new TypeError(`\"options\" must be a string or an object, got ${typeof options} instead.`);\n\t}\n}\n\nexport function nop() {\n\t// do nothing\n}\n\n// credentials\nexport let cred: Cred;\nexport function setCred(val: Cred): void {\n\tcred = val;\n}\n\n// descriptors\nexport const fdMap: Map<number, File> = new Map();\nlet nextFd = 100;\nexport function getFdForFile(file: File): number {\n\tconst fd = nextFd++;\n\tfdMap.set(fd, file);\n\treturn fd;\n}\nexport function fd2file(fd: number): File {\n\tif (!fdMap.has(fd)) {\n\t\tthrow new ApiError(ErrorCode.EBADF, 'Invalid file descriptor.');\n\t}\n\treturn fdMap.get(fd);\n}\n\n// mounting\nexport interface MountMapping {\n\t[point: string]: InstanceType<BackendConstructor>;\n}\n\nexport const mounts: Map<string, FileSystem> = new Map();\n\n/*\nSet a default root.\nThere is a very small but not 0 change that initialize() will try to unmount the default before it is mounted.\nThis can be fixed by using a top-level await, which is not done to maintain ES6 compatibility.\n*/\nInMemoryFileSystem.Create().then(fs => mount('/', fs));\n\n/**\n * Gets the file system mounted at `mountPoint`\n */\nexport function getMount(mountPoint: string): FileSystem {\n\treturn mounts.get(mountPoint);\n}\n\n/**\n * Gets an object of mount points (keys) and filesystems (values)\n */\nexport function getMounts(): MountMapping {\n\treturn Object.fromEntries(mounts.entries());\n}\n\n/**\n * Mounts the file system at the given mount point.\n */\nexport function mount(mountPoint: string, fs: FileSystem): void {\n\tif (mountPoint[0] !== '/') {\n\t\tmountPoint = '/' + mountPoint;\n\t}\n\tmountPoint = path.resolve(mountPoint);\n\tif (mounts.has(mountPoint)) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Mount point ' + mountPoint + ' is already in use.');\n\t}\n\tmounts.set(mountPoint, fs);\n}\n\n/**\n * Unmounts the file system at the given mount point.\n */\nexport function umount(mountPoint: string): void {\n\tif (mountPoint[0] !== '/') {\n\t\tmountPoint = `/${mountPoint}`;\n\t}\n\tmountPoint = path.resolve(mountPoint);\n\tif (!mounts.has(mountPoint)) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Mount point ' + mountPoint + ' is already unmounted.');\n\t}\n\tmounts.delete(mountPoint);\n}\n\n/**\n * Gets the internal FileSystem for the path, then returns it along with the path relative to the FS' root\n */\nexport function resolveFS(path: string): { fs: FileSystem; path: string; mountPoint: string } {\n\tconst sortedMounts = [...mounts].sort((a, b) => (a[0].length > b[0].length ? -1 : 1)); // decending order of the string length\n\tfor (const [mountPoint, fs] of sortedMounts) {\n\t\t// We know path is normalized, so it would be a substring of the mount point.\n\t\tif (mountPoint.length <= path.length && path.startsWith(mountPoint)) {\n\t\t\tpath = path.slice(mountPoint.length > 1 ? mountPoint.length : 0); // Resolve the path relative to the mount point\n\t\t\tif (path === '') {\n\t\t\t\tpath = '/';\n\t\t\t}\n\t\t\treturn { fs, path, mountPoint };\n\t\t}\n\t}\n\n\tthrow new ApiError(ErrorCode.EIO, 'BrowserFS not initialized with a file system');\n}\n\n/**\n * Reverse maps the paths in text from the mounted FileSystem to the global path\n */\nexport function fixPaths(text: string, paths: { [from: string]: string }): string {\n\tfor (const [from, to] of Object.entries(paths)) {\n\t\ttext = text.replaceAll(from, to);\n\t}\n\treturn text;\n}\n\nexport function fixError<E extends Error>(e: E, paths: { [from: string]: string }): E {\n\te.stack = fixPaths(e.stack, paths);\n\te.message = fixPaths(e.message, paths);\n\treturn e;\n}\n\nexport function initialize(mountMapping: MountMapping): void {\n\tif (mountMapping['/']) {\n\t\tumount('/');\n\t}\n\tfor (const [point, fs] of Object.entries(mountMapping)) {\n\t\tconst FS = fs.constructor as unknown as BackendConstructor;\n\t\tif (!FS.isAvailable()) {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, `Can not mount \"${point}\" since the filesystem is unavailable.`);\n\t\t}\n\n\t\tmount(point, fs);\n\t}\n}\n", "import type { ReadStream, WriteStream, FSWatcher, symlink as _symlink } from 'node:fs';\nimport { ApiError, ErrorCode } from '../ApiError';\n\nimport * as constants from './constants';\nexport { constants };\n\nimport { File, FileFlag } from '../file';\nimport { normalizePath, normalizeMode, getFdForFile, normalizeOptions, fd2file, fdMap, normalizeTime, cred, nop, resolveFS, fixError, mounts } from './shared';\nimport { FileContents, FileSystem } from '../filesystem';\nimport { Stats } from '../stats';\n\ntype FileSystemMethod = {\n\t[K in keyof FileSystem]: FileSystem[K] extends (...args: any) => any\n\t\t? (name: K, resolveSymlinks: boolean, ...args: Parameters<FileSystem[K]>) => ReturnType<FileSystem[K]>\n\t\t: never;\n}[keyof FileSystem]; // https://stackoverflow.com/a/76335220/17637456\n\n/**\n * Utility for FS ops. It handles\n * - path normalization (for the first parameter to the FS op)\n * - path translation for errors\n * - FS/mount point resolution\n *\n * It can't be used for functions which may operate on multiple mounted FSs or paths (e.g. `rename`)\n * @param name the function name\n * @param resolveSymlinks whether to resolve symlinks\n * @param args the rest of the parameters are passed to the FS function. Note that the first parameter is required to be a path\n * @returns\n */\nasync function doOp<M extends FileSystemMethod, RT extends ReturnType<M>>(...[name, resolveSymlinks, path, ...args]: Parameters<M>): Promise<RT> {\n\tpath = normalizePath(path);\n\tconst { fs, path: resolvedPath } = resolveFS(resolveSymlinks && (await exists(path)) ? await realpath(path) : path);\n\ttry {\n\t\t// @ts-expect-error 2556 (since ...args is not correctly picked up as being a tuple)\n\t\treturn fs[name](resolvedPath, ...args) as Promise<RT>;\n\t} catch (e) {\n\t\tthrow fixError(e, { [resolvedPath]: path });\n\t}\n}\n\n// fs.promises\n\n/**\n * Renames a file\n * @param oldPath\n * @param newPath\n */\nexport async function rename(oldPath: string, newPath: string): Promise<void> {\n\toldPath = normalizePath(oldPath);\n\tnewPath = normalizePath(newPath);\n\tconst _old = resolveFS(oldPath);\n\tconst _new = resolveFS(newPath);\n\tconst paths = { [_old.path]: oldPath, [_new.path]: newPath };\n\ttry {\n\t\tif (_old === _new) {\n\t\t\treturn _old.fs.rename(_old.path, _new.path, cred);\n\t\t}\n\n\t\tconst data = await readFile(oldPath);\n\t\tawait writeFile(newPath, data);\n\t\tawait unlink(oldPath);\n\t} catch (e) {\n\t\tthrow fixError(e, paths);\n\t}\n}\n\n/**\n * Test whether or not the given path exists by checking with the file system.\n * @param path\n */\nexport async function exists(path: string): Promise<boolean> {\n\tpath = normalizePath(path);\n\ttry {\n\t\tconst { fs, path: resolvedPath } = resolveFS(path);\n\t\treturn fs.exists(resolvedPath, cred);\n\t} catch (e) {\n\t\tif ((e as ApiError).errno == ErrorCode.ENOENT) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow e;\n\t}\n}\n\n/**\n * `stat`.\n * @param path\n * @returns Stats\n */\nexport async function stat(path: string): Promise<Stats> {\n\treturn doOp('stat', true, path, cred);\n}\n\n/**\n * `lstat`.\n * `lstat()` is identical to `stat()`, except that if path is a symbolic link,\n * then the link itself is stat-ed, not the file that it refers to.\n * @param path\n * @return [BrowserFS.node.fs.Stats]\n */\nexport async function lstat(path: string): Promise<Stats> {\n\treturn doOp('stat', false, path, cred);\n}\n\n// FILE-ONLY METHODS\n\n/**\n * `truncate`.\n * @param path\n * @param len\n */\nexport async function truncate(path: string, len: number = 0): Promise<void> {\n\tif (len < 0) {\n\t\tthrow new ApiError(ErrorCode.EINVAL);\n\t}\n\treturn doOp('truncate', true, path, len, cred);\n}\n\n/**\n * `unlink`.\n * @param path\n */\nexport async function unlink(path: string): Promise<void> {\n\treturn doOp('unlink', false, path, cred);\n}\n\n/**\n * file open.\n * @see http://www.manpagez.com/man/2/open/\n * @param path\n * @param flags\n * @param mode defaults to `0644`\n */\nexport async function open(path: string, flag: string, mode: number | string = 0o644): Promise<number> {\n\tconst file: File = await doOp('open', true, path, FileFlag.getFileFlag(flag), normalizeMode(mode, 0o644), cred);\n\treturn getFdForFile(file);\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param filename\n * @param options\n * @option options [String] encoding The string encoding for the file contents. Defaults to `null`.\n * @option options [String] flag Defaults to `'r'`.\n * @return [String | BrowserFS.node.Buffer]\n */\nexport async function readFile(filename: string, options?: { flag?: string }): Promise<Buffer>;\nexport async function readFile(filename: string, options: { encoding: string; flag?: string }): Promise<string>;\nexport async function readFile(filename: string, encoding: string): Promise<string>;\nexport async function readFile(filename: string, arg2: any = {}): Promise<Buffer | string> {\n\tconst options = normalizeOptions(arg2, null, 'r', null);\n\tconst flag = FileFlag.getFileFlag(options.flag);\n\tif (!flag.isReadable()) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Flag passed to readFile must allow for reading.');\n\t}\n\treturn doOp('readFile', true, filename, options.encoding, flag, cred);\n}\n\n/**\n * Synchronously writes data to a file, replacing the file if it already\n * exists.\n *\n * The encoding option is ignored if data is a buffer.\n * @param filename\n * @param data\n * @param options\n * @option options [String] encoding Defaults to `'utf8'`.\n * @option options [Number] mode Defaults to `0644`.\n * @option options [String] flag Defaults to `'w'`.\n */\nexport async function writeFile(filename: string, data: FileContents, options?: { encoding?: string; mode?: number | string; flag?: string }): Promise<void>;\nexport async function writeFile(filename: string, data: FileContents, encoding?: string): Promise<void>;\nexport async function writeFile(filename: string, data: FileContents, options?: { encoding?: string; mode?: number | string; flag?: string } | string): Promise<void>;\nexport async function writeFile(filename: string, data: FileContents, arg3?: { encoding?: string; mode?: number | string; flag?: string } | string): Promise<void> {\n\tconst options = normalizeOptions(arg3, 'utf8', 'w', 0o644);\n\tconst flag = FileFlag.getFileFlag(options.flag);\n\tif (!flag.isWriteable()) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Flag passed to writeFile must allow for writing.');\n\t}\n\treturn doOp('writeFile', true, filename, data, options.encoding, flag, options.mode, cred);\n}\n\n/**\n * Asynchronously append data to a file, creating the file if it not yet\n * exists.\n *\n * @example Usage example\n *   fs.appendFile('message.txt', 'data to append', function (err) {\n *     if (err) throw err;\n *     console.log('The \"data to append\" was appended to file!');\n *   });\n * @param filename\n * @param data\n * @param options\n * @option options [String] encoding Defaults to `'utf8'`.\n * @option options [Number] mode Defaults to `0644`.\n * @option options [String] flag Defaults to `'a'`.\n */\nexport async function appendFile(filename: string, data: FileContents, options?: { encoding?: string; mode?: number | string; flag?: string }): Promise<void>;\nexport async function appendFile(filename: string, data: FileContents, encoding?: string): Promise<void>;\nexport async function appendFile(filename: string, data: FileContents, arg3?: any): Promise<void> {\n\tconst options = normalizeOptions(arg3, 'utf8', 'a', 0o644);\n\tconst flag = FileFlag.getFileFlag(options.flag);\n\tif (!flag.isAppendable()) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Flag passed to appendFile must allow for appending.');\n\t}\n\treturn doOp('appendFile', true, filename, data, options.encoding, flag, options.mode, cred);\n}\n\n// FILE DESCRIPTOR METHODS\n\n/**\n * `fstat`.\n * `fstat()` is identical to `stat()`, except that the file to be stat-ed is\n * specified by the file descriptor `fd`.\n * @param fd\n * @return [BrowserFS.node.fs.Stats]\n */\nexport async function fstat(fd: number): Promise<Stats> {\n\treturn fd2file(fd).stat();\n}\n\n/**\n * close.\n * @param fd\n */\nexport async function close(fd: number): Promise<void> {\n\tawait fd2file(fd).close();\n\tfdMap.delete(fd);\n\treturn;\n}\n\n/**\n * ftruncate.\n * @param fd\n * @param len\n */\nexport async function ftruncate(fd: number, len: number = 0): Promise<void> {\n\tconst file = fd2file(fd);\n\tif (len < 0) {\n\t\tthrow new ApiError(ErrorCode.EINVAL);\n\t}\n\treturn file.truncate(len);\n}\n\n/**\n * fsync.\n * @param fd\n */\nexport async function fsync(fd: number): Promise<void> {\n\treturn fd2file(fd).sync();\n}\n\n/**\n * fdatasync.\n * @param fd\n */\nexport async function fdatasync(fd: number): Promise<void> {\n\treturn fd2file(fd).datasync();\n}\n\n/**\n * Write buffer to the file specified by `fd`.\n * Note that it is unsafe to use fs.write multiple times on the same file\n * without waiting for it to return.\n * @param fd\n * @param buffer Buffer containing the data to write to\n *   the file.\n * @param offset Offset in the buffer to start reading data from.\n * @param length The amount of bytes to write to the file.\n * @param position Offset from the beginning of the file where this\n *   data should be written. If position is null, the data will be written at\n *   the current position.\n */\nexport async function write(fd: number, buffer: Buffer, offset: number, length: number, position?: number): Promise<number>;\nexport async function write(fd: number, data: string, position?: number | null, encoding?: BufferEncoding): Promise<number>;\nexport async function write(fd: number, arg2: Buffer | string, arg3?: number, arg4?: BufferEncoding | number, arg5?: number): Promise<number> {\n\tlet buffer: Buffer,\n\t\toffset: number = 0,\n\t\tlength: number,\n\t\tposition: number | null;\n\tif (typeof arg2 === 'string') {\n\t\t// Signature 1: (fd, string, [position?, [encoding?]])\n\t\tposition = typeof arg3 === 'number' ? arg3 : null;\n\t\tconst encoding = (typeof arg4 === 'string' ? arg4 : 'utf8') as BufferEncoding;\n\t\toffset = 0;\n\t\tbuffer = Buffer.from(arg2, encoding);\n\t\tlength = buffer.length;\n\t} else {\n\t\t// Signature 2: (fd, buffer, offset, length, position?)\n\t\tbuffer = arg2;\n\t\toffset = arg3;\n\t\tlength = arg4 as number;\n\t\tposition = typeof arg5 === 'number' ? arg5 : null;\n\t}\n\n\tconst file = fd2file(fd);\n\tif (position === undefined || position === null) {\n\t\tposition = file.getPos()!;\n\t}\n\treturn file.write(buffer, offset, length, position);\n}\n\n/**\n * Read data from the file specified by `fd`.\n * @param fd\n * @param buffer The buffer that the data will be\n *   written to.\n * @param offset The offset within the buffer where writing will\n *   start.\n * @param length An integer specifying the number of bytes to read.\n * @param position An integer specifying where to begin reading from\n *   in the file. If position is null, data will be read from the current file\n *   position.\n */\nexport async function read(fd: number, buffer: Buffer, offset: number, length: number, position?: number): Promise<{ bytesRead: number; buffer: Buffer }> {\n\tconst file = fd2file(fd);\n\tif (isNaN(+position)) {\n\t\tposition = file.getPos()!;\n\t}\n\n\treturn file.read(buffer, offset, length, position);\n}\n\n/**\n * `fchown`.\n * @param fd\n * @param uid\n * @param gid\n */\nexport async function fchown(fd: number, uid: number, gid: number): Promise<void> {\n\treturn fd2file(fd).chown(uid, gid);\n}\n\n/**\n * `fchmod`.\n * @param fd\n * @param mode\n */\nexport async function fchmod(fd: number, mode: number | string): Promise<void> {\n\tconst numMode = typeof mode === 'string' ? parseInt(mode, 8) : mode;\n\treturn fd2file(fd).chmod(numMode);\n}\n\n/**\n * Change the file timestamps of a file referenced by the supplied file\n * descriptor.\n * @param fd\n * @param atime\n * @param mtime\n */\nexport async function futimes(fd: number, atime: number | Date, mtime: number | Date): Promise<void> {\n\treturn fd2file(fd).utimes(normalizeTime(atime), normalizeTime(mtime));\n}\n\n// DIRECTORY-ONLY METHODS\n\n/**\n * `rmdir`.\n * @param path\n */\nexport async function rmdir(path: string): Promise<void> {\n\treturn doOp('rmdir', true, path, cred);\n}\n\n/**\n * `mkdir`.\n * @param path\n * @param mode defaults to `0777`\n */\nexport async function mkdir(path: string, mode?: number | string): Promise<void> {\n\treturn doOp('mkdir', true, path, normalizeMode(mode, 0o777), cred);\n}\n\n/**\n * `readdir`. Reads the contents of a directory.\n * @param path\n * @return [String[]]\n */\nexport async function readdir(path: string): Promise<string[]> {\n\tpath = normalizePath(path);\n\tconst entries: string[] = await doOp('readdir', true, path, cred);\n\tconst points = [...mounts.keys()];\n\tfor (const point of points) {\n\t\tif (point.startsWith(path)) {\n\t\t\tconst entry = point.slice(path.length);\n\t\t\tif (entry.includes('/') || entry.length == 0) {\n\t\t\t\t// ignore FSs mounted in subdirectories and any FS mounted to `path`.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tentries.push(entry);\n\t\t}\n\t}\n\treturn entries;\n}\n\n// SYMLINK METHODS\n\n/**\n * `link`.\n * @param srcpath\n * @param dstpath\n */\nexport async function link(srcpath: string, dstpath: string): Promise<void> {\n\tdstpath = normalizePath(dstpath);\n\treturn doOp('link', false, srcpath, dstpath, cred);\n}\n\n/**\n * `symlink`.\n * @param srcpath\n * @param dstpath\n * @param type can be either `'dir'` or `'file'` (default is `'file'`)\n */\nexport async function symlink(srcpath: string, dstpath: string, type: _symlink.Type = 'file'): Promise<void> {\n\tif (!['file', 'dir', 'junction'].includes(type)) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid type: ' + type);\n\t}\n\tdstpath = normalizePath(dstpath);\n\treturn doOp('symlink', false, srcpath, dstpath, type, cred);\n}\n\n/**\n * readlink.\n * @param path\n * @return [String]\n */\nexport async function readlink(path: string): Promise<string> {\n\treturn doOp('readlink', false, path, cred);\n}\n\n// PROPERTY OPERATIONS\n\n/**\n * `chown`.\n * @param path\n * @param uid\n * @param gid\n */\nexport async function chown(path: string, uid: number, gid: number): Promise<void> {\n\treturn doOp('chown', true, path, uid, gid, cred);\n}\n\n/**\n * `lchown`.\n * @param path\n * @param uid\n * @param gid\n */\nexport async function lchown(path: string, uid: number, gid: number): Promise<void> {\n\treturn doOp('chown', false, path, uid, gid, cred);\n}\n\n/**\n * `chmod`.\n * @param path\n * @param mode\n */\nexport async function chmod(path: string, mode: string | number): Promise<void> {\n\tconst numMode = normalizeMode(mode, -1);\n\tif (numMode < 0) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, `Invalid mode.`);\n\t}\n\treturn doOp('chmod', true, path, numMode, cred);\n}\n\n/**\n * `lchmod`.\n * @param path\n * @param mode\n */\nexport async function lchmod(path: string, mode: number | string): Promise<void> {\n\tconst numMode = normalizeMode(mode, -1);\n\tif (numMode < 1) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, `Invalid mode.`);\n\t}\n\treturn doOp('chmod', false, normalizePath(path), numMode, cred);\n}\n\n/**\n * Change file timestamps of the file referenced by the supplied path.\n * @param path\n * @param atime\n * @param mtime\n */\nexport async function utimes(path: string, atime: number | Date, mtime: number | Date): Promise<void> {\n\treturn doOp('utimes', true, path, normalizeTime(atime), normalizeTime(mtime), cred);\n}\n\n/**\n * Change file timestamps of the file referenced by the supplied path.\n * @param path\n * @param atime\n * @param mtime\n */\nexport async function lutimes(path: string, atime: number | Date, mtime: number | Date): Promise<void> {\n\treturn doOp('utimes', false, path, normalizeTime(atime), normalizeTime(mtime), cred);\n}\n\n/**\n * `realpath`.\n * @param path\n * @param cache An object literal of mapped paths that can be used to\n *   force a specific path resolution or avoid additional `fs.stat` calls for\n *   known real paths.\n * @return [String]\n */\nexport async function realpath(path: string, cache: { [path: string]: string } = {}): Promise<string> {\n\tpath = normalizePath(path);\n\tconst { fs, path: resolvedPath, mountPoint } = resolveFS(path);\n\ttry {\n\t\tconst stats = await fs.stat(resolvedPath, cred);\n\t\tif (!stats.isSymbolicLink()) {\n\t\t\treturn path;\n\t\t}\n\t\tconst dst = mountPoint + normalizePath(await fs.readlink(resolvedPath, cred));\n\t\treturn realpath(dst);\n\t} catch (e) {\n\t\tthrow fixError(e, { [resolvedPath]: path });\n\t}\n}\n\nexport async function watchFile(filename: string, listener: (curr: Stats, prev: Stats) => void): Promise<void>;\nexport async function watchFile(filename: string, options: { persistent?: boolean; interval?: number }, listener: (curr: Stats, prev: Stats) => void): Promise<void>;\nexport async function watchFile(filename: string, arg2: any, listener: (curr: Stats, prev: Stats) => void = nop): Promise<void> {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n\nexport async function unwatchFile(filename: string, listener: (curr: Stats, prev: Stats) => void = nop): Promise<void> {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n\nexport async function watch(filename: string, listener?: (event: string, filename: string) => any): Promise<FSWatcher>;\nexport async function watch(filename: string, options: { persistent?: boolean }, listener?: (event: string, filename: string) => any): Promise<FSWatcher>;\nexport async function watch(filename: string, arg2: any, listener: (event: string, filename: string) => any = nop): Promise<FSWatcher> {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n\n/**\n * `access`.\n * @param path\n * @param mode\n */\nexport async function access(path: string, mode: number = 0o600): Promise<void> {\n\treturn doOp('access', true, path, mode, cred);\n}\n\nexport async function createReadStream(\n\tpath: string,\n\toptions?: {\n\t\tflags?: string;\n\t\tencoding?: string;\n\t\tfd?: number;\n\t\tmode?: number;\n\t\tautoClose?: boolean;\n\t}\n): Promise<ReadStream> {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n\nexport async function createWriteStream(\n\tpath: string,\n\toptions?: {\n\t\tflags?: string;\n\t\tencoding?: string;\n\t\tfd?: number;\n\t\tmode?: number;\n\t}\n): Promise<WriteStream> {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n", "import type { FSWatcher, ReadStream, WriteStream, symlink as _symlink } from 'fs';\nimport { ApiError, ErrorCode } from '../ApiError';\nimport { BFSCallback, BFSOneArgCallback, BFSThreeArgCallback, FileContents } from '../filesystem';\nimport { Stats } from '../stats';\nimport { nop, normalizeMode } from './shared';\nimport * as promises from './promises';\nimport { R_OK } from './constants';\n\n/**\n * Asynchronous rename. No arguments other than a possible exception are given\n * to the completion callback.\n * @param oldPath\n * @param newPath\n * @param callback\n */\nexport function rename(oldPath: string, newPath: string, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.rename(oldPath, newPath)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Test whether or not the given path exists by checking with the file system.\n * Then call the callback argument with either true or false.\n * @example Sample invocation\n *   fs.exists('/etc/passwd', function (exists) {\n *     util.debug(exists ? \"it's there\" : \"no passwd!\");\n *   });\n * @param path\n * @param callback\n */\nexport function exists(path: string, cb: (exists: boolean) => unknown = nop): void {\n\tpromises\n\t\t.exists(path)\n\t\t.then(cb)\n\t\t.catch(() => cb(false));\n}\n\n/**\n * Asynchronous `stat`.\n * @param path\n * @param callback\n */\nexport function stat(path: string, cb: BFSCallback<Stats> = nop): void {\n\tpromises\n\t\t.stat(path)\n\t\t.then(stats => cb(null, stats))\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `lstat`.\n * `lstat()` is identical to `stat()`, except that if path is a symbolic link,\n * then the link itself is stat-ed, not the file that it refers to.\n * @param path\n * @param callback\n */\nexport function lstat(path: string, cb: BFSCallback<Stats> = nop): void {\n\tpromises\n\t\t.lstat(path)\n\t\t.then(stats => cb(null, stats))\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `truncate`.\n * @param path\n * @param len\n * @param callback\n */\nexport function truncate(path: string, cb?: BFSOneArgCallback): void;\nexport function truncate(path: string, len: number, cb?: BFSOneArgCallback): void;\nexport function truncate(path: string, arg2: number | BFSOneArgCallback = 0, cb: BFSOneArgCallback = nop): void {\n\tcb = typeof arg2 === 'function' ? arg2 : cb;\n\tconst len = typeof arg2 === 'number' ? arg2 : 0;\n\tpromises\n\t\t.truncate(path, len)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `unlink`.\n * @param path\n * @param callback\n */\nexport function unlink(path: string, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.unlink(path)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous file open.\n * Exclusive mode ensures that path is newly created.\n *\n * `flags` can be:\n *\n * * `'r'` - Open file for reading. An exception occurs if the file does not exist.\n * * `'r+'` - Open file for reading and writing. An exception occurs if the file does not exist.\n * * `'rs'` - Open file for reading in synchronous mode. Instructs the filesystem to not cache writes.\n * * `'rs+'` - Open file for reading and writing, and opens the file in synchronous mode.\n * * `'w'` - Open file for writing. The file is created (if it does not exist) or truncated (if it exists).\n * * `'wx'` - Like 'w' but opens the file in exclusive mode.\n * * `'w+'` - Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).\n * * `'wx+'` - Like 'w+' but opens the file in exclusive mode.\n * * `'a'` - Open file for appending. The file is created if it does not exist.\n * * `'ax'` - Like 'a' but opens the file in exclusive mode.\n * * `'a+'` - Open file for reading and appending. The file is created if it does not exist.\n * * `'ax+'` - Like 'a+' but opens the file in exclusive mode.\n *\n * @see http://www.manpagez.com/man/2/open/\n * @param path\n * @param flags\n * @param mode defaults to `0644`\n * @param callback\n */\nexport function open(path: string, flag: string, cb?: BFSCallback<number>): void;\nexport function open(path: string, flag: string, mode: number | string, cb?: BFSCallback<number>): void;\nexport function open(path: string, flag: string, arg2?: number | string | BFSCallback<number>, cb: BFSCallback<number> = nop): void {\n\tconst mode = normalizeMode(arg2, 0o644);\n\tcb = typeof arg2 === 'function' ? arg2 : cb;\n\tpromises\n\t\t.open(path, flag, mode)\n\t\t.then(fd => cb(null, fd))\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @example Usage example\n *   fs.readFile('/etc/passwd', function (err, data) {\n *     if (err) throw err;\n *     console.log(data);\n *   });\n * @param filename\n * @param options\n * @option options [String] encoding The string encoding for the file contents. Defaults to `null`.\n * @option options [String] flag Defaults to `'r'`.\n * @param callback If no encoding is specified, then the raw buffer is returned.\n */\nexport function readFile(filename: string, cb: BFSCallback<Buffer>): void;\nexport function readFile(filename: string, options: { flag?: string }, callback?: BFSCallback<Buffer>): void;\nexport function readFile(filename: string, options: { encoding: string; flag?: string }, callback?: BFSCallback<string>): void;\nexport function readFile(filename: string, encoding: string, cb: BFSCallback<string>): void;\nexport function readFile(filename: string, arg2: any = {}, cb: BFSCallback<string> | BFSCallback<Buffer> = nop) {\n\tcb = typeof arg2 === 'function' ? arg2 : cb;\n\n\tpromises.readFile(filename, typeof arg2 === 'function' ? null : arg2);\n}\n\n/**\n * Asynchronously writes data to a file, replacing the file if it already\n * exists.\n *\n * The encoding option is ignored if data is a buffer.\n *\n * @example Usage example\n *   fs.writeFile('message.txt', 'Hello Node', function (err) {\n *     if (err) throw err;\n *     console.log('It\\'s saved!');\n *   });\n * @param filename\n * @param data\n * @param options\n * @option options [String] encoding Defaults to `'utf8'`.\n * @option options [Number] mode Defaults to `0644`.\n * @option options [String] flag Defaults to `'w'`.\n * @param callback\n */\nexport function writeFile(filename: string, data: FileContents, cb?: BFSOneArgCallback): void;\nexport function writeFile(filename: string, data: FileContents, encoding?: string, cb?: BFSOneArgCallback): void;\nexport function writeFile(filename: string, data: FileContents, options?: { encoding?: string; mode?: string | number; flag?: string }, cb?: BFSOneArgCallback): void;\nexport function writeFile(\n\tfilename: string,\n\tdata: FileContents,\n\targ3: { encoding?: string; mode?: string | number; flag?: string } | string | BFSOneArgCallback = {},\n\tcb: BFSOneArgCallback = nop\n): void {\n\tcb = typeof arg3 === 'function' ? arg3 : cb;\n\tpromises.writeFile(filename, data, typeof arg3 === 'function' ? undefined : arg3);\n}\n\n/**\n * Asynchronously append data to a file, creating the file if it not yet\n * exists.\n *\n * @example Usage example\n *   fs.appendFile('message.txt', 'data to append', function (err) {\n *     if (err) throw err;\n *     console.log('The \"data to append\" was appended to file!');\n *   });\n * @param filename\n * @param data\n * @param options\n * @option options [String] encoding Defaults to `'utf8'`.\n * @option options [Number] mode Defaults to `0644`.\n * @option options [String] flag Defaults to `'a'`.\n * @param callback\n */\nexport function appendFile(filename: string, data: FileContents, cb?: BFSOneArgCallback): void;\nexport function appendFile(filename: string, data: FileContents, options?: { encoding?: string; mode?: number | string; flag?: string }, cb?: BFSOneArgCallback): void;\nexport function appendFile(filename: string, data: FileContents, encoding?: string, cb?: BFSOneArgCallback): void;\nexport function appendFile(filename: string, data: FileContents, arg3?: any, cb: BFSOneArgCallback = nop): void {\n\tcb = typeof arg3 === 'function' ? arg3 : cb;\n\tpromises.appendFile(filename, data, typeof arg3 === 'function' ? null : arg3);\n}\n\n/**\n * Asynchronous `fstat`.\n * `fstat()` is identical to `stat()`, except that the file to be stat-ed is\n * specified by the file descriptor `fd`.\n * @param fd\n * @param callback\n */\nexport function fstat(fd: number, cb: BFSCallback<Stats> = nop): void {\n\tpromises\n\t\t.fstat(fd)\n\t\t.then(stats => cb(null, stats))\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous close.\n * @param fd\n * @param callback\n */\nexport function close(fd: number, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.close(fd)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous ftruncate.\n * @param fd\n * @param len\n * @param callback\n */\nexport function ftruncate(fd: number, cb?: BFSOneArgCallback): void;\nexport function ftruncate(fd: number, len?: number, cb?: BFSOneArgCallback): void;\nexport function ftruncate(fd: number, arg2?: any, cb: BFSOneArgCallback = nop): void {\n\tconst length = typeof arg2 === 'number' ? arg2 : 0;\n\tcb = typeof arg2 === 'function' ? arg2 : cb;\n\tpromises.ftruncate(fd, length);\n}\n\n/**\n * Asynchronous fsync.\n * @param fd\n * @param callback\n */\nexport function fsync(fd: number, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.fsync(fd)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous fdatasync.\n * @param fd\n * @param callback\n */\nexport function fdatasync(fd: number, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.fdatasync(fd)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Write buffer to the file specified by `fd`.\n * Note that it is unsafe to use fs.write multiple times on the same file\n * without waiting for the callback.\n * @param fd\n * @param buffer Buffer containing the data to write to\n *   the file.\n * @param offset Offset in the buffer to start reading data from.\n * @param length The amount of bytes to write to the file.\n * @param position Offset from the beginning of the file where this\n *   data should be written. If position is null, the data will be written at\n *   the current position.\n * @param callback The number specifies the number of bytes written into the file.\n */\nexport function write(fd: number, buffer: Buffer, offset: number, length: number, cb?: BFSThreeArgCallback<number, Buffer>): void;\nexport function write(fd: number, buffer: Buffer, offset: number, length: number, position: number | null, cb?: BFSThreeArgCallback<number, Buffer>): void;\nexport function write(fd: number, data: FileContents, cb?: BFSThreeArgCallback<number, string>): void;\nexport function write(fd: number, data: FileContents, position: number | null, cb?: BFSThreeArgCallback<number, string>): void;\nexport function write(fd: number, data: FileContents, position: number | null, encoding: BufferEncoding, cb?: BFSThreeArgCallback<number, string>): void;\nexport function write(\n\tfd: number,\n\targ2: FileContents,\n\targ3?: any,\n\targ4?: any,\n\targ5?: any,\n\tcb: BFSThreeArgCallback<number, Buffer> | BFSThreeArgCallback<number, string> = nop\n): void {\n\tlet buffer: Buffer,\n\t\toffset: number,\n\t\tlength: number,\n\t\tposition: number | null = null,\n\t\tencoding: BufferEncoding;\n\tif (typeof arg2 === 'string') {\n\t\t// Signature 1: (fd, string, [position?, [encoding?]], cb?)\n\t\tencoding = 'utf8';\n\t\tswitch (typeof arg3) {\n\t\t\tcase 'function':\n\t\t\t\t// (fd, string, cb)\n\t\t\t\tcb = arg3;\n\t\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\t\t// (fd, string, position, encoding?, cb?)\n\t\t\t\tposition = arg3;\n\t\t\t\tencoding = (typeof arg4 === 'string' ? arg4 : 'utf8') as BufferEncoding;\n\t\t\t\tcb = typeof arg5 === 'function' ? arg5 : cb;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// ...try to find the callback and get out of here!\n\t\t\t\tcb = typeof arg4 === 'function' ? arg4 : typeof arg5 === 'function' ? arg5 : cb;\n\t\t\t\tcb(new ApiError(ErrorCode.EINVAL, 'Invalid arguments.'));\n\t\t\t\treturn;\n\t\t}\n\t\tbuffer = Buffer.from(arg2, encoding);\n\t\toffset = 0;\n\t\tlength = buffer.length;\n\t\tconst _cb = cb as BFSThreeArgCallback<number, string>;\n\t\tpromises\n\t\t\t.write(fd, buffer, offset, length, position)\n\t\t\t.then(bytesWritten => _cb(null, bytesWritten, buffer.toString(encoding)))\n\t\t\t.catch(_cb);\n\t} else {\n\t\t// Signature 2: (fd, buffer, offset, length, position?, cb?)\n\t\tbuffer = arg2;\n\t\toffset = arg3;\n\t\tlength = arg4;\n\t\tposition = typeof arg5 === 'number' ? arg5 : null;\n\t\tconst _cb = (typeof arg5 === 'function' ? arg5 : cb) as BFSThreeArgCallback<number, Buffer>;\n\t\tpromises\n\t\t\t.write(fd, buffer, offset, length, position)\n\t\t\t.then(bytesWritten => _cb(null, bytesWritten, buffer))\n\t\t\t.catch(_cb);\n\t}\n}\n\n/**\n * Read data from the file specified by `fd`.\n * @param buffer The buffer that the data will be\n *   written to.\n * @param offset The offset within the buffer where writing will\n *   start.\n * @param length An integer specifying the number of bytes to read.\n * @param position An integer specifying where to begin reading from\n *   in the file. If position is null, data will be read from the current file\n *   position.\n * @param callback The number is the number of bytes read\n */\nexport function read(fd: number, buffer: Buffer, offset: number, length: number, position?: number, cb: BFSThreeArgCallback<number, Buffer> = nop): void {\n\tpromises\n\t\t.read(fd, buffer, offset, length, position)\n\t\t.then(({ bytesRead, buffer }) => cb(null, bytesRead, buffer))\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `fchown`.\n * @param fd\n * @param uid\n * @param gid\n * @param callback\n */\nexport function fchown(fd: number, uid: number, gid: number, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.fchown(fd, uid, gid)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `fchmod`.\n * @param fd\n * @param mode\n * @param callback\n */\nexport function fchmod(fd: number, mode: string | number, cb: BFSOneArgCallback): void {\n\tpromises\n\t\t.fchmod(fd, mode)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Change the file timestamps of a file referenced by the supplied file\n * descriptor.\n * @param fd\n * @param atime\n * @param mtime\n * @param callback\n */\nexport function futimes(fd: number, atime: number | Date, mtime: number | Date, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.futimes(fd, atime, mtime)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `rmdir`.\n * @param path\n * @param callback\n */\nexport function rmdir(path: string, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.rmdir(path)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `mkdir`.\n * @param path\n * @param mode defaults to `0777`\n * @param callback\n */\nexport function mkdir(path: string, mode?: any, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.mkdir(path, mode)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `readdir`. Reads the contents of a directory.\n * The callback gets two arguments `(err, files)` where `files` is an array of\n * the names of the files in the directory excluding `'.'` and `'..'`.\n * @param path\n * @param callback\n */\nexport function readdir(path: string, cb: BFSCallback<string[]> = nop): void {\n\tpromises\n\t\t.readdir(path)\n\t\t.then(entries => cb(null, entries))\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `link`.\n * @param srcpath\n * @param dstpath\n * @param callback\n */\nexport function link(srcpath: string, dstpath: string, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.link(srcpath, dstpath)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `symlink`.\n * @param srcpath\n * @param dstpath\n * @param type can be either `'dir'` or `'file'` (default is `'file'`)\n * @param callback\n */\nexport function symlink(srcpath: string, dstpath: string, cb?: BFSOneArgCallback): void;\nexport function symlink(srcpath: string, dstpath: string, type?: _symlink.Type, cb?: BFSOneArgCallback): void;\nexport function symlink(srcpath: string, dstpath: string, arg3?: _symlink.Type | BFSOneArgCallback, cb: BFSOneArgCallback = nop): void {\n\tconst type = typeof arg3 === 'string' ? arg3 : 'file';\n\tcb = typeof arg3 === 'function' ? arg3 : cb;\n\tpromises\n\t\t.symlink(srcpath, dstpath, typeof arg3 === 'function' ? null : arg3)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous readlink.\n * @param path\n * @param callback\n */\nexport function readlink(path: string, cb: BFSCallback<string> = nop): void {\n\tpromises\n\t\t.readlink(path)\n\t\t.then(result => cb(null, result))\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `chown`.\n * @param path\n * @param uid\n * @param gid\n * @param callback\n */\nexport function chown(path: string, uid: number, gid: number, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.chown(path, uid, gid)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `lchown`.\n * @param path\n * @param uid\n * @param gid\n * @param callback\n */\nexport function lchown(path: string, uid: number, gid: number, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.lchown(path, uid, gid)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `chmod`.\n * @param path\n * @param mode\n * @param callback\n */\nexport function chmod(path: string, mode: number | string, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.chmod(path, mode)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `lchmod`.\n * @param path\n * @param mode\n * @param callback\n */\nexport function lchmod(path: string, mode: number | string, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.lchmod(path, mode)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Change file timestamps of the file referenced by the supplied path.\n * @param path\n * @param atime\n * @param mtime\n * @param callback\n */\nexport function utimes(path: string, atime: number | Date, mtime: number | Date, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.utimes(path, atime, mtime)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Change file timestamps of the file referenced by the supplied path.\n * @param path\n * @param atime\n * @param mtime\n * @param callback\n */\nexport function lutimes(path: string, atime: number | Date, mtime: number | Date, cb: BFSOneArgCallback = nop): void {\n\tpromises\n\t\t.lutimes(path, atime, mtime)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `realpath`. The callback gets two arguments\n * `(err, resolvedPath)`. May use `process.cwd` to resolve relative paths.\n *\n * @example Usage example\n *   let cache = {'/etc':'/private/etc'};\n *   fs.realpath('/etc/passwd', cache, function (err, resolvedPath) {\n *     if (err) throw err;\n *     console.log(resolvedPath);\n *   });\n *\n * @param path\n * @param cache An object literal of mapped paths that can be used to\n *   force a specific path resolution or avoid additional `fs.stat` calls for\n *   known real paths.\n * @param callback\n */\nexport function realpath(path: string, cb?: BFSCallback<string>): void;\nexport function realpath(path: string, cache: { [path: string]: string }, cb: BFSCallback<string>): void;\nexport function realpath(path: string, arg2?: any, cb: BFSCallback<string> = nop): void {\n\tconst cache = typeof arg2 === 'object' ? arg2 : {};\n\tcb = typeof arg2 === 'function' ? arg2 : cb;\n\tpromises\n\t\t.realpath(path, typeof arg2 === 'function' ? null : arg2)\n\t\t.then(result => cb(null, result))\n\t\t.catch(cb);\n}\n\n/**\n * Asynchronous `access`.\n * @param path\n * @param mode\n * @param callback\n */\nexport function access(path: string, cb: BFSOneArgCallback): void;\nexport function access(path: string, mode: number, cb: BFSOneArgCallback): void;\nexport function access(path: string, arg2: any, cb: BFSOneArgCallback = nop): void {\n\tconst mode = typeof arg2 === 'number' ? arg2 : R_OK;\n\tcb = typeof arg2 === 'function' ? arg2 : cb;\n\tpromises\n\t\t.access(path, typeof arg2 === 'function' ? null : arg2)\n\t\t.then(() => cb())\n\t\t.catch(cb);\n}\n\nexport function watchFile(filename: string, listener: (curr: Stats, prev: Stats) => void): void;\nexport function watchFile(filename: string, options: { persistent?: boolean; interval?: number }, listener: (curr: Stats, prev: Stats) => void): void;\nexport function watchFile(filename: string, arg2: any, listener: (curr: Stats, prev: Stats) => void = nop): void {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n\nexport function unwatchFile(filename: string, listener: (curr: Stats, prev: Stats) => void = nop): void {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n\nexport function watch(filename: string, listener?: (event: string, filename: string) => any): FSWatcher;\nexport function watch(filename: string, options: { persistent?: boolean }, listener?: (event: string, filename: string) => any): FSWatcher;\nexport function watch(filename: string, arg2: any, listener: (event: string, filename: string) => any = nop): FSWatcher {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n\nexport function createReadStream(\n\tpath: string,\n\toptions?: {\n\t\tflags?: string;\n\t\tencoding?: string;\n\t\tfd?: number;\n\t\tmode?: number;\n\t\tautoClose?: boolean;\n\t}\n): ReadStream {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n\nexport function createWriteStream(\n\tpath: string,\n\toptions?: {\n\t\tflags?: string;\n\t\tencoding?: string;\n\t\tfd?: number;\n\t\tmode?: number;\n\t}\n): WriteStream {\n\tthrow new ApiError(ErrorCode.ENOTSUP);\n}\n", "import { ApiError, ErrorCode } from '../ApiError';\nimport { File, FileFlag } from '../file';\nimport { FileContents, FileSystem } from '../filesystem';\nimport { Stats } from '../stats';\nimport type { symlink, ReadSyncOptions } from 'fs';\nimport { normalizePath, cred, getFdForFile, normalizeMode, normalizeOptions, fdMap, fd2file, normalizeTime, resolveFS, fixError, mounts } from './shared';\n\ntype FileSystemMethod = {\n\t[K in keyof FileSystem]: FileSystem[K] extends (...args: any) => any\n\t\t? (name: K, resolveSymlinks: boolean, ...args: Parameters<FileSystem[K]>) => ReturnType<FileSystem[K]>\n\t\t: never;\n}[keyof FileSystem]; // https://stackoverflow.com/a/76335220/17637456\n\nfunction doOp<M extends FileSystemMethod, RT extends ReturnType<M>>(...[name, resolveSymlinks, path, ...args]: Parameters<M>): RT {\n\tpath = normalizePath(path);\n\tconst { fs, path: resolvedPath } = resolveFS(resolveSymlinks && existsSync(path) ? realpathSync(path) : path);\n\ttry {\n\t\t// @ts-expect-error 2556 (since ...args is not correctly picked up as being a tuple)\n\t\treturn fs[name](resolvedPath, ...args) as RT;\n\t} catch (e) {\n\t\tthrow fixError(e, { [resolvedPath]: path });\n\t}\n}\n\n/**\n * Synchronous rename.\n * @param oldPath\n * @param newPath\n */\nexport function renameSync(oldPath: string, newPath: string): void {\n\toldPath = normalizePath(oldPath);\n\tnewPath = normalizePath(newPath);\n\tconst _old = resolveFS(oldPath);\n\tconst _new = resolveFS(newPath);\n\tconst paths = { [_old.path]: oldPath, [_new.path]: newPath };\n\ttry {\n\t\tif (_old === _new) {\n\t\t\treturn _old.fs.renameSync(_old.path, _new.path, cred);\n\t\t}\n\n\t\tconst data = readFileSync(oldPath);\n\t\twriteFileSync(newPath, data);\n\t\tunlinkSync(oldPath);\n\t} catch (e) {\n\t\tthrow fixError(e, paths);\n\t}\n}\n\n/**\n * Test whether or not the given path exists by checking with the file system.\n * @param path\n */\nexport function existsSync(path: string): boolean {\n\tpath = normalizePath(path);\n\ttry {\n\t\tconst { fs, path: resolvedPath } = resolveFS(path);\n\t\treturn fs.existsSync(resolvedPath, cred);\n\t} catch (e) {\n\t\tif ((e as ApiError).errno == ErrorCode.ENOENT) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow e;\n\t}\n}\n\n/**\n * Synchronous `stat`.\n * @param path\n * @returns Stats\n */\nexport function statSync(path: string): Stats {\n\treturn doOp('statSync', true, path, cred);\n}\n\n/**\n * Synchronous `lstat`.\n * `lstat()` is identical to `stat()`, except that if path is a symbolic link,\n * then the link itself is stat-ed, not the file that it refers to.\n * @param path\n * @return [BrowserFS.node.fs.Stats]\n */\nexport function lstatSync(path: string): Stats {\n\treturn doOp('statSync', false, path, cred);\n}\n\n/**\n * Synchronous `truncate`.\n * @param path\n * @param len\n */\nexport function truncateSync(path: string, len: number = 0): void {\n\tif (len < 0) {\n\t\tthrow new ApiError(ErrorCode.EINVAL);\n\t}\n\treturn doOp('truncateSync', true, path, len, cred);\n}\n\n/**\n * Synchronous `unlink`.\n * @param path\n */\nexport function unlinkSync(path: string): void {\n\treturn doOp('unlinkSync', false, path, cred);\n}\n\n/**\n * Synchronous file open.\n * @see http://www.manpagez.com/man/2/open/\n * @param path\n * @param flags\n * @param mode defaults to `0644`\n * @return [BrowserFS.File]\n */\nexport function openSync(path: string, flag: string, mode: number | string = 0o644): number {\n\tconst file: File = doOp('openSync', true, path, FileFlag.getFileFlag(flag), normalizeMode(mode, 0o644), cred);\n\treturn getFdForFile(file);\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param filename\n * @param options\n * @option options [String] encoding The string encoding for the file contents. Defaults to `null`.\n * @option options [String] flag Defaults to `'r'`.\n * @return [String | BrowserFS.node.Buffer]\n */\nexport function readFileSync(filename: string, options?: { flag?: string }): Buffer;\nexport function readFileSync(filename: string, options: { encoding: string; flag?: string }): string;\nexport function readFileSync(filename: string, encoding: string): string;\nexport function readFileSync(filename: string, arg2: { encoding: string; flag?: string } | { flag?: string } | string = {}): FileContents {\n\tconst options = normalizeOptions(arg2, null, 'r', null);\n\tconst flag = FileFlag.getFileFlag(options.flag);\n\tif (!flag.isReadable()) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Flag passed to readFile must allow for reading.');\n\t}\n\treturn doOp('readFileSync', true, filename, options.encoding, flag, cred);\n}\n\n/**\n * Synchronously writes data to a file, replacing the file if it already\n * exists.\n *\n * The encoding option is ignored if data is a buffer.\n * @param filename\n * @param data\n * @param options\n * @option options [String] encoding Defaults to `'utf8'`.\n * @option options [Number] mode Defaults to `0644`.\n * @option options [String] flag Defaults to `'w'`.\n */\nexport function writeFileSync(filename: string, data: FileContents, options?: { encoding?: string; mode?: number | string; flag?: string }): void;\nexport function writeFileSync(filename: string, data: FileContents, encoding?: string): void;\nexport function writeFileSync(filename: string, data: FileContents, arg3?: { encoding?: string; mode?: number | string; flag?: string } | string): void {\n\tconst options = normalizeOptions(arg3, 'utf8', 'w', 0o644);\n\tconst flag = FileFlag.getFileFlag(options.flag);\n\tif (!flag.isWriteable()) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Flag passed to writeFile must allow for writing.');\n\t}\n\treturn doOp('writeFileSync', true, filename, data, options.encoding, flag, options.mode, cred);\n}\n\n/**\n * Asynchronously append data to a file, creating the file if it not yet\n * exists.\n *\n * @example Usage example\n *   fs.appendFile('message.txt', 'data to append', function (err) {\n *     if (err) throw err;\n *     console.log('The \"data to append\" was appended to file!');\n *   });\n * @param filename\n * @param data\n * @param options\n * @option options [String] encoding Defaults to `'utf8'`.\n * @option options [Number] mode Defaults to `0644`.\n * @option options [String] flag Defaults to `'a'`.\n */\nexport function appendFileSync(filename: string, data: FileContents, options?: { encoding?: string; mode?: number | string; flag?: string }): void;\nexport function appendFileSync(filename: string, data: FileContents, encoding?: string): void;\nexport function appendFileSync(filename: string, data: FileContents, arg3?: { encoding?: string; mode?: number | string; flag?: string } | string): void {\n\tconst options = normalizeOptions(arg3, 'utf8', 'a', 0o644);\n\tconst flag = FileFlag.getFileFlag(options.flag);\n\tif (!flag.isAppendable()) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Flag passed to appendFile must allow for appending.');\n\t}\n\treturn doOp('appendFileSync', true, filename, data, options.encoding, flag, options.mode, cred);\n}\n\n/**\n * Synchronous `fstat`.\n * `fstat()` is identical to `stat()`, except that the file to be stat-ed is\n * specified by the file descriptor `fd`.\n * @param fd\n * @return [BrowserFS.node.fs.Stats]\n */\nexport function fstatSync(fd: number): Stats {\n\treturn fd2file(fd).statSync();\n}\n\n/**\n * Synchronous close.\n * @param fd\n */\nexport function closeSync(fd: number): void {\n\tfd2file(fd).closeSync();\n\tfdMap.delete(fd);\n}\n\n/**\n * Synchronous ftruncate.\n * @param fd\n * @param len\n */\nexport function ftruncateSync(fd: number, len: number = 0): void {\n\tconst file = fd2file(fd);\n\tif (len < 0) {\n\t\tthrow new ApiError(ErrorCode.EINVAL);\n\t}\n\tfile.truncateSync(len);\n}\n\n/**\n * Synchronous fsync.\n * @param fd\n */\nexport function fsyncSync(fd: number): void {\n\tfd2file(fd).syncSync();\n}\n\n/**\n * Synchronous fdatasync.\n * @param fd\n */\nexport function fdatasyncSync(fd: number): void {\n\tfd2file(fd).datasyncSync();\n}\n\n/**\n * Write buffer to the file specified by `fd`.\n * Note that it is unsafe to use fs.write multiple times on the same file\n * without waiting for it to return.\n * @param fd\n * @param buffer Buffer containing the data to write to\n *   the file.\n * @param offset Offset in the buffer to start reading data from.\n * @param length The amount of bytes to write to the file.\n * @param position Offset from the beginning of the file where this\n *   data should be written. If position is null, the data will be written at\n *   the current position.\n */\nexport function writeSync(fd: number, buffer: Buffer, offset: number, length: number, position?: number | null): number;\nexport function writeSync(fd: number, data: string, position?: number | null, encoding?: BufferEncoding): number;\nexport function writeSync(fd: number, arg2: Buffer | string, arg3?: number, arg4?: BufferEncoding | number, arg5?: number): number {\n\tlet buffer: Buffer,\n\t\toffset: number = 0,\n\t\tlength: number,\n\t\tposition: number | null;\n\tif (typeof arg2 === 'string') {\n\t\t// Signature 1: (fd, string, [position?, [encoding?]])\n\t\tposition = typeof arg3 === 'number' ? arg3 : null;\n\t\tconst encoding = (typeof arg4 === 'string' ? arg4 : 'utf8') as BufferEncoding;\n\t\toffset = 0;\n\t\tbuffer = Buffer.from(arg2, encoding);\n\t\tlength = buffer.length;\n\t} else {\n\t\t// Signature 2: (fd, buffer, offset, length, position?)\n\t\tbuffer = arg2;\n\t\toffset = arg3;\n\t\tlength = arg4 as number;\n\t\tposition = typeof arg5 === 'number' ? arg5 : null;\n\t}\n\n\tconst file = fd2file(fd);\n\tif (position === undefined || position === null) {\n\t\tposition = file.getPos()!;\n\t}\n\treturn file.writeSync(buffer, offset, length, position);\n}\n\n/**\n * Read data from the file specified by `fd`.\n * @param fd\n * @param buffer The buffer that the data will be\n *   written to.\n * @param offset The offset within the buffer where writing will\n *   start.\n * @param length An integer specifying the number of bytes to read.\n * @param position An integer specifying where to begin reading from\n *   in the file. If position is null, data will be read from the current file\n *   position.\n */\nexport function readSync(fd: number, buffer: Buffer, opts?: ReadSyncOptions): number;\nexport function readSync(fd: number, buffer: Buffer, offset: number, length: number, position?: number): number;\nexport function readSync(fd: number, buffer: Buffer, opts?: ReadSyncOptions | number, length?: number, position?: number): number {\n\tconst file = fd2file(fd);\n\tlet offset = opts as number;\n\tif (typeof opts == 'object') {\n\t\t({ offset, length, position } = opts);\n\t}\n\n\tif (isNaN(+position)) {\n\t\tposition = file.getPos()!;\n\t}\n\n\treturn file.readSync(buffer, offset, length, position);\n}\n\n/**\n * Synchronous `fchown`.\n * @param fd\n * @param uid\n * @param gid\n */\nexport function fchownSync(fd: number, uid: number, gid: number): void {\n\tfd2file(fd).chownSync(uid, gid);\n}\n\n/**\n * Synchronous `fchmod`.\n * @param fd\n * @param mode\n */\nexport function fchmodSync(fd: number, mode: number | string): void {\n\tconst numMode = typeof mode === 'string' ? parseInt(mode, 8) : mode;\n\tfd2file(fd).chmodSync(numMode);\n}\n\n/**\n * Change the file timestamps of a file referenced by the supplied file\n * descriptor.\n * @param fd\n * @param atime\n * @param mtime\n */\nexport function futimesSync(fd: number, atime: number | Date, mtime: number | Date): void {\n\tfd2file(fd).utimesSync(normalizeTime(atime), normalizeTime(mtime));\n}\n\n// DIRECTORY-ONLY METHODS\n\n/**\n * Synchronous `rmdir`.\n * @param path\n */\nexport function rmdirSync(path: string): void {\n\treturn doOp('rmdirSync', true, path, cred);\n}\n\n/**\n * Synchronous `mkdir`.\n * @param path\n * @param mode defaults to `0777`\n */\nexport function mkdirSync(path: string, mode?: number | string): void {\n\tdoOp('mkdirSync', true, path, normalizeMode(mode, 0o777), cred);\n}\n\n/**\n * Synchronous `readdir`. Reads the contents of a directory.\n * @param path\n * @return [String[]]\n */\nexport function readdirSync(path: string): string[] {\n\tpath = normalizePath(path);\n\tconst entries: string[] = doOp('readdirSync', true, path, cred);\n\tconst points = [...mounts.keys()];\n\tfor (const point of points) {\n\t\tif (point.startsWith(path)) {\n\t\t\tconst entry = point.slice(path.length);\n\t\t\tif (entry.includes('/') || entry.length == 0) {\n\t\t\t\t// ignore FSs mounted in subdirectories and any FS mounted to `path`.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tentries.push(entry);\n\t\t}\n\t}\n\treturn entries;\n}\n\n// SYMLINK METHODS\n\n/**\n * Synchronous `link`.\n * @param srcpath\n * @param dstpath\n */\nexport function linkSync(srcpath: string, dstpath: string): void {\n\tdstpath = normalizePath(dstpath);\n\treturn doOp('linkSync', false, srcpath, dstpath, cred);\n}\n\n/**\n * Synchronous `symlink`.\n * @param srcpath\n * @param dstpath\n * @param type can be either `'dir'` or `'file'` (default is `'file'`)\n */\nexport function symlinkSync(srcpath: string, dstpath: string, type?: symlink.Type): void {\n\tif (!['file', 'dir', 'junction'].includes(type)) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid type: ' + type);\n\t}\n\tdstpath = normalizePath(dstpath);\n\treturn doOp('symlinkSync', false, srcpath, dstpath, type, cred);\n}\n\n/**\n * Synchronous readlink.\n * @param path\n * @return [String]\n */\nexport function readlinkSync(path: string): string {\n\treturn doOp('readlinkSync', false, path, cred);\n}\n\n// PROPERTY OPERATIONS\n\n/**\n * Synchronous `chown`.\n * @param path\n * @param uid\n * @param gid\n */\nexport function chownSync(path: string, uid: number, gid: number): void {\n\tdoOp('chownSync', true, path, uid, gid, cred);\n}\n\n/**\n * Synchronous `lchown`.\n * @param path\n * @param uid\n * @param gid\n */\nexport function lchownSync(path: string, uid: number, gid: number): void {\n\tdoOp('chownSync', false, path, uid, gid, cred);\n}\n\n/**\n * Synchronous `chmod`.\n * @param path\n * @param mode\n */\nexport function chmodSync(path: string, mode: string | number): void {\n\tconst numMode = normalizeMode(mode, -1);\n\tif (numMode < 0) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, `Invalid mode.`);\n\t}\n\tdoOp('chmodSync', true, path, numMode, cred);\n}\n\n/**\n * Synchronous `lchmod`.\n * @param path\n * @param mode\n */\nexport function lchmodSync(path: string, mode: number | string): void {\n\tconst numMode = normalizeMode(mode, -1);\n\tif (numMode < 1) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, `Invalid mode.`);\n\t}\n\tdoOp('chmodSync', false, path, numMode, cred);\n}\n\n/**\n * Change file timestamps of the file referenced by the supplied path.\n * @param path\n * @param atime\n * @param mtime\n */\nexport function utimesSync(path: string, atime: number | Date, mtime: number | Date): void {\n\tdoOp('utimesSync', true, path, normalizeTime(atime), normalizeTime(mtime), cred);\n}\n\n/**\n * Change file timestamps of the file referenced by the supplied path.\n * @param path\n * @param atime\n * @param mtime\n */\nexport function lutimesSync(path: string, atime: number | Date, mtime: number | Date): void {\n\tdoOp('utimesSync', false, path, normalizeTime(atime), normalizeTime(mtime), cred);\n}\n\n/**\n * Synchronous `realpath`.\n * @param path\n * @param cache An object literal of mapped paths that can be used to\n *   force a specific path resolution or avoid additional `fs.stat` calls for\n *   known real paths.\n * @return [String]\n */\nexport function realpathSync(path: string, cache: { [path: string]: string } = {}): string {\n\tpath = normalizePath(path);\n\tconst { fs, path: resolvedPath, mountPoint } = resolveFS(path);\n\ttry {\n\t\tconst stats = fs.statSync(resolvedPath, cred);\n\t\tif (!stats.isSymbolicLink()) {\n\t\t\treturn path;\n\t\t}\n\t\tconst dst = normalizePath(mountPoint + fs.readlinkSync(resolvedPath, cred));\n\t\treturn realpathSync(dst);\n\t} catch (e) {\n\t\tthrow fixError(e, { [resolvedPath]: path });\n\t}\n}\n\n/**\n * Synchronous `access`.\n * @param path\n * @param mode\n */\nexport function accessSync(path: string, mode: number = 0o600): void {\n\treturn doOp('accessSync', true, path, mode, cred);\n}\n", "import * as fs_mock from './index';\nimport type * as fs_node from 'node:fs';\n\ntype BrowserFSModule = typeof fs_node & typeof fs_mock;\n// @ts-expect-error 2322\nconst fs: BrowserFSModule = fs_mock;\n\nexport * from './index';\nexport default fs;\n", "/// <reference lib=\"dom\" />\nimport { basename, dirname, join } from 'path';\nimport { ApiError, ErrorCode } from '../ApiError';\nimport { Cred } from '../cred';\nimport { File, FileFlag } from '../file';\nimport { BaseFileSystem, FileSystemMetadata } from '../filesystem';\nimport { Stats, FileType } from '../stats';\nimport PreloadFile from '../generic/preload_file';\nimport { Buffer } from 'buffer';\nimport { CreateBackend, type BackendOptions } from './backend';\n\ninterface FileSystemAccessFileSystemOptions {\n\thandle: FileSystemDirectoryHandle;\n}\n\nconst handleError = (path = '', error: Error) => {\n\tif (error.name === 'NotFoundError') {\n\t\tthrow ApiError.ENOENT(path);\n\t}\n\n\tthrow error as ApiError;\n};\n\nexport class FileSystemAccessFile extends PreloadFile<FileSystemAccessFileSystem> implements File {\n\tconstructor(_fs: FileSystemAccessFileSystem, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n\t\tsuper(_fs, _path, _flag, _stat, contents);\n\t}\n\n\tpublic async sync(): Promise<void> {\n\t\tif (this.isDirty()) {\n\t\t\tawait this._fs._sync(this.getPath(), this.getBuffer(), this.getStats(), Cred.Root);\n\t\t\tthis.resetDirty();\n\t\t}\n\t}\n\n\tpublic async close(): Promise<void> {\n\t\tawait this.sync();\n\t}\n}\n\nexport class FileSystemAccessFileSystem extends BaseFileSystem {\n\tpublic static readonly Name = 'FileSystemAccess';\n\n\tpublic static Create = CreateBackend.bind(this);\n\n\tpublic static readonly Options: BackendOptions = {};\n\n\tpublic static isAvailable(): boolean {\n\t\treturn typeof FileSystemHandle === 'function';\n\t}\n\n\tprivate _handles: { [path: string]: FileSystemHandle };\n\n\tpublic constructor({ handle }: FileSystemAccessFileSystemOptions) {\n\t\tsuper();\n\t\tthis._handles = { '/': handle };\n\t}\n\n\tpublic get metadata(): FileSystemMetadata {\n\t\treturn {\n\t\t\t...super.metadata,\n\t\t\tname: FileSystemAccessFileSystem.Name,\n\t\t};\n\t}\n\n\tpublic async _sync(p: string, data: Buffer, stats: Stats, cred: Cred): Promise<void> {\n\t\tconst currentStats = await this.stat(p, cred);\n\t\tif (stats.mtime !== currentStats!.mtime) {\n\t\t\tawait this.writeFile(p, data, null, FileFlag.getFileFlag('w'), currentStats!.mode, cred);\n\t\t}\n\t}\n\n\tpublic async rename(oldPath: string, newPath: string, cred: Cred): Promise<void> {\n\t\ttry {\n\t\t\tconst handle = await this.getHandle(oldPath);\n\t\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\t\tconst files = await this.readdir(oldPath, cred);\n\n\t\t\t\tawait this.mkdir(newPath, 'wx', cred);\n\t\t\t\tif (files.length === 0) {\n\t\t\t\t\tawait this.unlink(oldPath, cred);\n\t\t\t\t} else {\n\t\t\t\t\tfor (const file of files) {\n\t\t\t\t\t\tawait this.rename(join(oldPath, file), join(newPath, file), cred);\n\t\t\t\t\t\tawait this.unlink(oldPath, cred);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemFileHandle) {\n\t\t\t\tconst oldFile = await handle.getFile(),\n\t\t\t\t\tdestFolder = await this.getHandle(dirname(newPath));\n\t\t\t\tif (destFolder instanceof FileSystemDirectoryHandle) {\n\t\t\t\t\tconst newFile = await destFolder.getFileHandle(basename(newPath), { create: true });\n\t\t\t\t\tconst writable = await newFile.createWritable();\n\t\t\t\t\tconst buffer = await oldFile.arrayBuffer();\n\t\t\t\t\tawait writable.write(buffer);\n\n\t\t\t\t\twritable.close();\n\t\t\t\t\tawait this.unlink(oldPath, cred);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\thandleError(oldPath, err);\n\t\t}\n\t}\n\n\tpublic async writeFile(fname: string, data: any, encoding: string | null, flag: FileFlag, mode: number, cred: Cred, createFile?: boolean): Promise<void> {\n\t\tconst handle = await this.getHandle(dirname(fname));\n\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\tconst file = await handle.getFileHandle(basename(fname), { create: true });\n\t\t\tconst writable = await file.createWritable();\n\t\t\tawait writable.write(data);\n\t\t\tawait writable.close();\n\t\t\t//return createFile ? this.newFile(fname, flag, data) : undefined;\n\t\t}\n\t}\n\n\tpublic async createFile(p: string, flag: FileFlag, mode: number, cred: Cred): Promise<File> {\n\t\tawait this.writeFile(p, Buffer.alloc(0), null, flag, mode, cred, true);\n\t\treturn this.openFile(p, flag, cred);\n\t}\n\n\tpublic async stat(path: string, cred: Cred): Promise<Stats> {\n\t\tconst handle = await this.getHandle(path);\n\t\tif (!handle) {\n\t\t\tthrow ApiError.FileError(ErrorCode.EINVAL, path);\n\t\t}\n\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\treturn new Stats(FileType.DIRECTORY, 4096);\n\t\t}\n\t\tif (handle instanceof FileSystemFileHandle) {\n\t\t\tconst { lastModified, size } = await handle.getFile();\n\t\t\treturn new Stats(FileType.FILE, size, undefined, undefined, lastModified);\n\t\t}\n\t}\n\n\tpublic async exists(p: string, cred: Cred): Promise<boolean> {\n\t\ttry {\n\t\t\tawait this.getHandle(p);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic async openFile(path: string, flags: FileFlag, cred: Cred): Promise<File> {\n\t\tconst handle = await this.getHandle(path);\n\t\tif (handle instanceof FileSystemFileHandle) {\n\t\t\tconst file = await handle.getFile();\n\t\t\tconst buffer = await file.arrayBuffer();\n\t\t\treturn this.newFile(path, flags, buffer, file.size, file.lastModified);\n\t\t}\n\t}\n\n\tpublic async unlink(path: string, cred: Cred): Promise<void> {\n\t\tconst handle = await this.getHandle(dirname(path));\n\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\ttry {\n\t\t\t\tawait handle.removeEntry(basename(path), { recursive: true });\n\t\t\t} catch (e) {\n\t\t\t\thandleError(path, e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async rmdir(path: string, cred: Cred): Promise<void> {\n\t\treturn this.unlink(path, cred);\n\t}\n\n\tpublic async mkdir(p: string, mode: any, cred: Cred): Promise<void> {\n\t\tconst overwrite = mode && mode.flag && mode.flag.includes('w') && !mode.flag.includes('x');\n\n\t\tconst existingHandle = await this.getHandle(p);\n\t\tif (existingHandle && !overwrite) {\n\t\t\tthrow ApiError.EEXIST(p);\n\t\t}\n\n\t\tconst handle = await this.getHandle(dirname(p));\n\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\tawait handle.getDirectoryHandle(basename(p), { create: true });\n\t\t}\n\t}\n\n\tpublic async readdir(path: string, cred: Cred): Promise<string[]> {\n\t\tconst handle = await this.getHandle(path);\n\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\tconst _keys: string[] = [];\n\t\t\tfor await (const key of handle.keys()) {\n\t\t\t\t_keys.push(join(path, key));\n\t\t\t}\n\t\t\treturn _keys;\n\t\t}\n\t}\n\n\tprivate newFile(path: string, flag: FileFlag, data: ArrayBuffer, size?: number, lastModified?: number): File {\n\t\treturn new FileSystemAccessFile(this, path, flag, new Stats(FileType.FILE, size || 0, undefined, undefined, lastModified || new Date().getTime()), Buffer.from(data));\n\t}\n\n\tprivate async getHandle(path: string): Promise<FileSystemHandle> {\n\t\tif (path === '/') {\n\t\t\treturn this._handles['/'];\n\t\t}\n\n\t\tlet walkedPath = '/';\n\t\tconst [, ...pathParts] = path.split('/');\n\t\tconst getHandleParts = async ([pathPart, ...remainingPathParts]: string[]) => {\n\t\t\tconst walkingPath = join(walkedPath, pathPart);\n\t\t\tconst continueWalk = (handle: FileSystemHandle) => {\n\t\t\t\twalkedPath = walkingPath;\n\t\t\t\tthis._handles[walkedPath] = handle;\n\n\t\t\t\tif (remainingPathParts.length === 0) {\n\t\t\t\t\treturn this._handles[path];\n\t\t\t\t}\n\n\t\t\t\tgetHandleParts(remainingPathParts);\n\t\t\t};\n\t\t\tconst handle = this._handles[walkedPath] as FileSystemDirectoryHandle;\n\n\t\t\ttry {\n\t\t\t\treturn await continueWalk(await handle.getDirectoryHandle(pathPart));\n\t\t\t} catch (error) {\n\t\t\t\tif (error.name === 'TypeMismatchError') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn await continueWalk(await handle.getFileHandle(pathPart));\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\thandleError(walkingPath, err);\n\t\t\t\t\t}\n\t\t\t\t} else if (error.message === 'Name is not allowed.') {\n\t\t\t\t\tthrow new ApiError(ErrorCode.ENOENT, error.message, walkingPath);\n\t\t\t\t} else {\n\t\t\t\t\thandleError(walkingPath, error);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tgetHandleParts(pathParts);\n\t}\n}\n", "import { BaseFileSystem, type FileSystem } from '../filesystem';\nimport * as path from 'path';\nimport { ApiError } from '../ApiError';\nimport { Cred } from '../cred';\nimport { CreateBackend, type BackendOptions } from './backend';\n\nexport namespace FolderAdapter {\n\t/**\n\t * Configuration options for a FolderAdapter file system.\n\t */\n\texport interface Options {\n\t\t// The folder to use as the root directory.\n\t\tfolder: string;\n\t\t// The file system to wrap.\n\t\twrapped: FileSystem;\n\t}\n}\n\n/**\n * The FolderAdapter file system wraps a file system, and scopes all interactions to a subfolder of that file system.\n *\n * Example: Given a file system `foo` with folder `bar` and file `bar/baz`...\n *\n * ```javascript\n * BrowserFS.configure({\n *   fs: \"FolderAdapter\",\n *   options: {\n *     folder: \"bar\",\n *     wrapped: foo\n *   }\n * }, function(e) {\n *   var fs = BrowserFS.BFSRequire('fs');\n *   fs.readdirSync('/'); // ['baz']\n * });\n * ```\n */\nexport class FolderAdapter extends BaseFileSystem {\n\tpublic static readonly Name = 'FolderAdapter';\n\n\tpublic static Create = CreateBackend.bind(this);\n\n\tpublic static readonly Options: BackendOptions = {\n\t\tfolder: {\n\t\t\ttype: 'string',\n\t\t\tdescription: 'The folder to use as the root directory',\n\t\t},\n\t\twrapped: {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'The file system to wrap',\n\t\t},\n\t};\n\n\tpublic static isAvailable(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic _wrapped: FileSystem;\n\tpublic _folder: string;\n\n\tpublic constructor({ folder, wrapped }: FolderAdapter.Options) {\n\t\tsuper();\n\t\tthis._folder = folder;\n\t\tthis._wrapped = wrapped;\n\t\tthis._ready = this._initialize();\n\t}\n\n\tpublic get metadata() {\n\t\treturn { ...super.metadata, ...this._wrapped.metadata, supportsLinks: false };\n\t}\n\n\t/**\n\t * Initialize the file system. Ensures that the wrapped file system\n\t * has the given folder.\n\t */\n\tprivate async _initialize(): Promise<this> {\n\t\tconst exists = await this._wrapped.exists(this._folder, Cred.Root);\n\t\tif (!exists && this._wrapped.metadata.readonly) {\n\t\t\tthrow ApiError.ENOENT(this._folder);\n\t\t}\n\t\tawait this._wrapped.mkdir(this._folder, 0o777, Cred.Root);\n\t\treturn this;\n\t}\n}\n\n/**\n * @hidden\n */\nfunction translateError(folder: string, e: any): any {\n\tif (e !== null && typeof e === 'object') {\n\t\tconst err = <ApiError>e;\n\t\tlet p = err.path;\n\t\tif (p) {\n\t\t\tp = '/' + path.relative(folder, p);\n\t\t\terr.message = err.message.replace(err.path!, p);\n\t\t\terr.path = p;\n\t\t}\n\t}\n\treturn e;\n}\n\n/**\n * @hidden\n */\nfunction wrapCallback(folder: string, cb: any): any {\n\tif (typeof cb === 'function') {\n\t\treturn function (err: ApiError) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\targuments[0] = translateError(folder, err);\n\t\t\t}\n\t\t\t(<Function>cb).apply(null, arguments);\n\t\t};\n\t} else {\n\t\treturn cb;\n\t}\n}\n\n/**\n * @hidden\n */\nfunction wrapFunction(name: string, wrapFirst: boolean, wrapSecond: boolean): Function {\n\tif (name.slice(name.length - 4) !== 'Sync') {\n\t\t// Async function. Translate error in callback.\n\t\treturn function (this: FolderAdapter) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tif (wrapFirst) {\n\t\t\t\t\targuments[0] = path.join(this._folder, arguments[0]);\n\t\t\t\t}\n\t\t\t\tif (wrapSecond) {\n\t\t\t\t\targuments[1] = path.join(this._folder, arguments[1]);\n\t\t\t\t}\n\t\t\t\targuments[arguments.length - 1] = wrapCallback(this._folder, arguments[arguments.length - 1]);\n\t\t\t}\n\t\t\treturn (<any>this._wrapped)[name].apply(this._wrapped, arguments);\n\t\t};\n\t} else {\n\t\t// Sync function. Translate error in catch.\n\t\treturn function (this: FolderAdapter) {\n\t\t\ttry {\n\t\t\t\tif (wrapFirst) {\n\t\t\t\t\targuments[0] = path.join(this._folder, arguments[0]);\n\t\t\t\t}\n\t\t\t\tif (wrapSecond) {\n\t\t\t\t\targuments[1] = path.join(this._folder, arguments[1]);\n\t\t\t\t}\n\t\t\t\treturn (<any>this._wrapped)[name].apply(this._wrapped, arguments);\n\t\t\t} catch (e) {\n\t\t\t\tthrow translateError(this._folder, e);\n\t\t\t}\n\t\t};\n\t}\n}\n\n// First argument is a path.\n[\n\t'diskSpace',\n\t'stat',\n\t'statSync',\n\t'open',\n\t'openSync',\n\t'unlink',\n\t'unlinkSync',\n\t'rmdir',\n\t'rmdirSync',\n\t'mkdir',\n\t'mkdirSync',\n\t'readdir',\n\t'readdirSync',\n\t'exists',\n\t'existsSync',\n\t'realpath',\n\t'realpathSync',\n\t'truncate',\n\t'truncateSync',\n\t'readFile',\n\t'readFileSync',\n\t'writeFile',\n\t'writeFileSync',\n\t'appendFile',\n\t'appendFileSync',\n\t'chmod',\n\t'chmodSync',\n\t'chown',\n\t'chownSync',\n\t'utimes',\n\t'utimesSync',\n\t'readlink',\n\t'readlinkSync',\n].forEach((name: string) => {\n\t(<any>FolderAdapter.prototype)[name] = wrapFunction(name, true, false);\n});\n\n// First and second arguments are paths.\n['rename', 'renameSync', 'link', 'linkSync', 'symlink', 'symlinkSync'].forEach((name: string) => {\n\t(<any>FolderAdapter.prototype)[name] = wrapFunction(name, true, true);\n});\n", "/// <reference lib=\"dom\" />\nimport { AsyncKeyValueROTransaction, AsyncKeyValueRWTransaction, AsyncKeyValueStore, AsyncKeyValueFileSystem } from '../generic/key_value_filesystem';\nimport { ApiError, ErrorCode } from '../ApiError';\nimport { Buffer } from 'buffer';\nimport { CreateBackend, type BackendOptions } from './backend';\n\n/**\n * Get the indexedDB constructor for the current browser.\n * @hidden\n */\nconst indexedDB: IDBFactory = (() => {\n\ttry {\n\t\treturn globalThis.indexedDB || (<any>globalThis).mozIndexedDB || (<any>globalThis).webkitIndexedDB || globalThis.msIndexedDB;\n\t} catch {\n\t\treturn null;\n\t}\n})();\n\n/**\n * Converts a DOMException or a DOMError from an IndexedDB event into a\n * standardized BrowserFS API error.\n * @hidden\n */\nfunction convertError(e: { name: string }, message: string = e.toString()): ApiError {\n\tswitch (e.name) {\n\t\tcase 'NotFoundError':\n\t\t\treturn new ApiError(ErrorCode.ENOENT, message);\n\t\tcase 'QuotaExceededError':\n\t\t\treturn new ApiError(ErrorCode.ENOSPC, message);\n\t\tdefault:\n\t\t\t// The rest do not seem to map cleanly to standard error codes.\n\t\t\treturn new ApiError(ErrorCode.EIO, message);\n\t}\n}\n\n/**\n * Produces a new onerror handler for IDB. Our errors are always fatal, so we\n * handle them generically: Call the user-supplied callback with a translated\n * version of the error, and let the error bubble up.\n * @hidden\n */\nfunction onErrorHandler(cb: (e: ApiError) => void, code: ErrorCode = ErrorCode.EIO, message: string | null = null): (e?: any) => void {\n\treturn function (e?: any): void {\n\t\t// Prevent the error from canceling the transaction.\n\t\te.preventDefault();\n\t\tcb(new ApiError(code, message !== null ? message : undefined));\n\t};\n}\n\n/**\n * @hidden\n */\nexport class IndexedDBROTransaction implements AsyncKeyValueROTransaction {\n\tconstructor(public tx: IDBTransaction, public store: IDBObjectStore) {}\n\n\tpublic get(key: string): Promise<Buffer> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst r: IDBRequest = this.store.get(key);\n\t\t\t\tr.onerror = onErrorHandler(reject);\n\t\t\t\tr.onsuccess = event => {\n\t\t\t\t\t// IDB returns the value 'undefined' when you try to get keys that\n\t\t\t\t\t// don't exist. The caller expects this behavior.\n\t\t\t\t\tconst result = (<any>event.target).result;\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// IDB data is stored as an ArrayBuffer\n\t\t\t\t\t\tresolve(Buffer.from(result));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\treject(convertError(e));\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @hidden\n */\nexport class IndexedDBRWTransaction extends IndexedDBROTransaction implements AsyncKeyValueRWTransaction, AsyncKeyValueROTransaction {\n\tconstructor(tx: IDBTransaction, store: IDBObjectStore) {\n\t\tsuper(tx, store);\n\t}\n\n\t/**\n\t * @todo return false when add has a key conflict (no error)\n\t */\n\tpublic put(key: string, data: Buffer, overwrite: boolean): Promise<boolean> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst r: IDBRequest = overwrite ? this.store.put(data, key) : this.store.add(data, key);\n\t\t\t\tr.onerror = onErrorHandler(reject);\n\t\t\t\tr.onsuccess = () => {\n\t\t\t\t\tresolve(true);\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\treject(convertError(e));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic del(key: string): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst r: IDBRequest = this.store.delete(key);\n\t\t\t\tr.onerror = onErrorHandler(reject);\n\t\t\t\tr.onsuccess = () => {\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\treject(convertError(e));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic commit(): Promise<void> {\n\t\treturn new Promise(resolve => {\n\t\t\t// Return to the event loop to commit the transaction.\n\t\t\tsetTimeout(resolve, 0);\n\t\t});\n\t}\n\n\tpublic abort(): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.tx.abort();\n\t\t\t\tresolve();\n\t\t\t} catch (e) {\n\t\t\t\treject(convertError(e));\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class IndexedDBStore implements AsyncKeyValueStore {\n\tpublic static Create(storeName: string, indexedDB: IDBFactory): Promise<IndexedDBStore> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst openReq: IDBOpenDBRequest = indexedDB.open(storeName, 1);\n\n\t\t\topenReq.onupgradeneeded = event => {\n\t\t\t\tconst db: IDBDatabase = (<IDBOpenDBRequest>event.target).result;\n\t\t\t\t// Huh. This should never happen; we're at version 1. Why does another\n\t\t\t\t// database exist?\n\t\t\t\tif (db.objectStoreNames.contains(storeName)) {\n\t\t\t\t\tdb.deleteObjectStore(storeName);\n\t\t\t\t}\n\t\t\t\tdb.createObjectStore(storeName);\n\t\t\t};\n\n\t\t\topenReq.onsuccess = event => {\n\t\t\t\tresolve(new IndexedDBStore((<IDBOpenDBRequest>event.target).result, storeName));\n\t\t\t};\n\n\t\t\topenReq.onerror = onErrorHandler(reject, ErrorCode.EACCES);\n\t\t});\n\t}\n\n\tconstructor(private db: IDBDatabase, private storeName: string) {}\n\n\tpublic name(): string {\n\t\treturn IndexedDBFileSystem.Name + ' - ' + this.storeName;\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst tx = this.db.transaction(this.storeName, 'readwrite'),\n\t\t\t\t\tobjectStore = tx.objectStore(this.storeName),\n\t\t\t\t\tr: IDBRequest = objectStore.clear();\n\t\t\t\tr.onsuccess = () => {\n\t\t\t\t\t// Use setTimeout to commit transaction.\n\t\t\t\t\tsetTimeout(resolve, 0);\n\t\t\t\t};\n\t\t\t\tr.onerror = onErrorHandler(reject);\n\t\t\t} catch (e) {\n\t\t\t\treject(convertError(e));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic beginTransaction(type: 'readonly'): AsyncKeyValueROTransaction;\n\tpublic beginTransaction(type: 'readwrite'): AsyncKeyValueRWTransaction;\n\tpublic beginTransaction(type: 'readonly' | 'readwrite' = 'readonly'): AsyncKeyValueROTransaction {\n\t\tconst tx = this.db.transaction(this.storeName, type),\n\t\t\tobjectStore = tx.objectStore(this.storeName);\n\t\tif (type === 'readwrite') {\n\t\t\treturn new IndexedDBRWTransaction(tx, objectStore);\n\t\t} else if (type === 'readonly') {\n\t\t\treturn new IndexedDBROTransaction(tx, objectStore);\n\t\t} else {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid transaction type.');\n\t\t}\n\t}\n}\n\nexport namespace IndexedDBFileSystem {\n\t/**\n\t * Configuration options for the IndexedDB file system.\n\t */\n\texport interface Options {\n\t\t/**\n\t\t * The name of this file system. You can have multiple IndexedDB file systems operating at once, but each must have a different name.\n\t\t */\n\t\tstoreName?: string;\n\n\t\t/**\n\t\t * The size of the inode cache. Defaults to 100. A size of 0 or below disables caching.\n\t\t */\n\t\tcacheSize?: number;\n\n\t\t/**\n\t\t * The IDBFactory to use. Defaults to `globalThis.indexedDB`.\n\t\t */\n\t\tidbFactory?: IDBFactory;\n\t}\n}\n\n/**\n * A file system that uses the IndexedDB key value file system.\n */\nexport class IndexedDBFileSystem extends AsyncKeyValueFileSystem {\n\tpublic static readonly Name = 'IndexedDB';\n\n\tpublic static Create = CreateBackend.bind(this);\n\n\tpublic static readonly Options: BackendOptions = {\n\t\tstoreName: {\n\t\t\ttype: 'string',\n\t\t\toptional: true,\n\t\t\tdescription: 'The name of this file system. You can have multiple IndexedDB file systems operating at once, but each must have a different name.',\n\t\t},\n\t\tcacheSize: {\n\t\t\ttype: 'number',\n\t\t\toptional: true,\n\t\t\tdescription: 'The size of the inode cache. Defaults to 100. A size of 0 or below disables caching.',\n\t\t},\n\t\tidbFactory: {\n\t\t\ttype: 'object',\n\t\t\toptional: true,\n\t\t\tdescription: 'The IDBFactory to use. Defaults to globalThis.indexedDB.',\n\t\t},\n\t};\n\n\tpublic static isAvailable(idbFactory: IDBFactory = globalThis.indexedDB): boolean {\n\t\ttry {\n\t\t\tif (!(idbFactory instanceof IDBFactory)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst req = indexedDB.open('__browserfs_test__');\n\t\t\tif (!req) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconstructor({ cacheSize = 100, storeName = 'browserfs', idbFactory = globalThis.indexedDB }: IndexedDBFileSystem.Options) {\n\t\tsuper(cacheSize);\n\t\tthis._ready = IndexedDBStore.Create(storeName, idbFactory).then(store => {\n\t\t\tthis.init(store);\n\t\t\treturn this;\n\t\t});\n\t}\n}\n", "import { FileSystemAccessFileSystem as FileSystemAccess } from './FileSystemAccess';\nimport { FolderAdapter } from './FolderAdapter';\nimport { InMemoryFileSystem as InMemory } from './InMemory';\nimport { IndexedDBFileSystem as IndexedDB } from './IndexedDB';\nimport { BackendConstructor } from './backend';\n\nexport const backends: { [backend: string]: BackendConstructor } = {\n\tFileSystemAccess,\n\tFolderAdapter,\n\tInMemory,\n\tIndexedDB,\n};\n\nexport {\n\tFileSystemAccess,\n\tFolderAdapter,\n\tInMemory,\n\tIndexedDB,\n};\n", "/**\n * BrowserFS's main module. This is exposed in the browser via the BrowserFS global.\n */\n\nimport fs from './emulation/fs';\nimport { FileSystem, type BFSOneArgCallback, type BFSCallback } from './filesystem';\nimport { backends } from './backends';\nimport { ErrorCode, ApiError } from './ApiError';\nimport { Cred } from './cred';\nimport * as process from 'process';\nimport type { BackendConstructor } from './backends/backend';\nimport { type MountMapping, setCred } from './emulation/shared';\n\nif (process && (<any>process)['initializeTTYs']) {\n\t(<any>process)['initializeTTYs']();\n}\n\n/**\n * @hidden\n */\nexport function registerBackend(name: string, fs: BackendConstructor) {\n\tbackends[name] = fs;\n}\n\n/**\n * Initializes BrowserFS with the given file systems.\n */\nexport function initialize(mounts: { [point: string]: FileSystem }, uid: number = 0, gid: number = 0) {\n\tsetCred(new Cred(uid, gid, uid, gid, uid, gid));\n\treturn fs.initialize(mounts);\n}\n\n/**\n * Defines a mapping of mount points to their configurations\n */\nexport interface ConfigMapping {\n\t[mountPoint: string]: FileSystem | FileSystemConfiguration | keyof typeof backends;\n}\n\n/**\n * A configuration for BrowserFS\n */\nexport type Configuration = FileSystem | FileSystemConfiguration | ConfigMapping;\n\nasync function _configure(config: Configuration): Promise<void> {\n\tif ('fs' in config || config instanceof FileSystem) {\n\t\t// single FS\n\t\tconfig = { '/': config } as ConfigMapping;\n\t}\n\tfor (let [point, value] of Object.entries(config)) {\n\t\tif (typeof value == 'number') {\n\t\t\t//should never happen\n\t\t\tcontinue;\n\t\t}\n\t\tpoint = point.toString(); // so linting stops complaining that point should be declared with const, which can't be done since value is assigned to\n\n\t\tif (value instanceof FileSystem) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof value == 'string') {\n\t\t\tvalue = { fs: value };\n\t\t}\n\n\t\tconfig[point] = await getFileSystem(value);\n\t}\n\treturn initialize(config as MountMapping);\n}\n\n/**\n * Creates a file system with the given configuration, and initializes BrowserFS with it.\n * See the FileSystemConfiguration type for more info on the configuration object.\n */\nexport function configure(config: Configuration): Promise<void>;\nexport function configure(config: Configuration, cb: BFSOneArgCallback): void;\nexport function configure(config: Configuration, cb?: BFSOneArgCallback): Promise<void> | void {\n\t// Promise version\n\tif (typeof cb != 'function') {\n\t\treturn _configure(config);\n\t}\n\n\t// Callback version\n\t_configure(config)\n\t\t.then(() => cb())\n\t\t.catch(err => cb(err));\n\treturn;\n}\n\n/**\n * Asynchronously creates a file system with the given configuration, and initializes BrowserFS with it.\n * See the FileSystemConfiguration type for more info on the configuration object.\n * Note: unlike configure, the .then is provided with the file system\n */\n\n/**\n * Specifies a file system backend type and its options.\n *\n * Individual options can recursively contain FileSystemConfiguration objects for\n * option values that require file systems.\n *\n * For example, to mirror Dropbox to Storage with AsyncMirror, use the following\n * object:\n *\n * ```javascript\n * var config = {\n *   fs: \"AsyncMirror\",\n *   options: {\n *     sync: {fs: \"Storage\"},\n *     async: {fs: \"Dropbox\", options: {client: anAuthenticatedDropboxSDKClient }}\n *   }\n * };\n * ```\n *\n * The option object for each file system corresponds to that file system's option object passed to its `Create()` method.\n */\nexport interface FileSystemConfiguration {\n\tfs: string;\n\toptions?: object;\n}\n\nasync function _getFileSystem({ fs: fsName, options = {} }: FileSystemConfiguration): Promise<FileSystem> {\n\tif (!fsName) {\n\t\tthrow new ApiError(ErrorCode.EPERM, 'Missing \"fs\" property on configuration object.');\n\t}\n\n\tif (typeof options !== 'object' || options === null) {\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid \"options\" property on configuration object.');\n\t}\n\n\tconst props = Object.keys(options).filter(k => k != 'fs');\n\n\tfor (const prop of props) {\n\t\tconst opt = options[prop];\n\t\tif (opt === null || typeof opt !== 'object' || !('fs' in opt)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst fs = await _getFileSystem(opt);\n\t\toptions[prop] = fs;\n\t}\n\n\tconst fsc = <BackendConstructor | undefined>(<any>backends)[fsName];\n\tif (!fsc) {\n\t\tthrow new ApiError(ErrorCode.EPERM, `File system ${fsName} is not available in BrowserFS.`);\n\t} else {\n\t\treturn fsc.Create(options);\n\t}\n}\n\n/**\n * Retrieve a file system with the given configuration. Will return a promise if invoked without a callback\n * @param config A FileSystemConfiguration object. See FileSystemConfiguration for details.\n * @param cb Called when the file system is constructed, or when an error occurs.\n */\nexport function getFileSystem(config: FileSystemConfiguration): Promise<FileSystem>;\nexport function getFileSystem(config: FileSystemConfiguration, cb: BFSCallback<FileSystem>): void;\nexport function getFileSystem(config: FileSystemConfiguration, cb?: BFSCallback<FileSystem>): Promise<FileSystem> | void {\n\t// Promise version\n\tif (typeof cb != 'function') {\n\t\treturn _getFileSystem(config);\n\t}\n\n\t// Callback version\n\t_getFileSystem(config)\n\t\t.then(fs => cb(null, fs))\n\t\t.catch(err => cb(err));\n\treturn;\n}\n\nexport * from './cred';\nexport * from './inode';\nexport * from './stats';\nexport * from './file';\nexport * from './filesystem';\nexport * from './backends';\nexport * from './ApiError';\nexport * from './generic/key_value_filesystem';\nexport { fs };\nexport default fs;\n"],
  "mappings": "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",
  "names": ["len", "i", "len2", "Buffer", "read", "write", "byteLength", "access", "appendFile", "chmod", "chown", "close", "createReadStream", "createWriteStream", "exists", "fchmod", "fchown", "fdatasync", "fstat", "fsync", "ftruncate", "futimes", "lchmod", "lchown", "link", "lstat", "lutimes", "mkdir", "open", "read", "readFile", "readdir", "readlink", "realpath", "rename", "rmdir", "stat", "symlink", "truncate", "unlink", "unwatchFile", "utimes", "watch", "watchFile", "write", "writeFile", "ErrorCode", "Buffer", "exports", "_dewExec", "dew", "process", "e", "queue", "draining", "currentQueue", "queueIndex", "cleanUpNextTick", "drainQueue", "Item", "noop", "exports$1", "_dewExec", "dew", "process", "sep", "posix", "resolve", "cwd", "normalize", "isAbsolute", "join", "relative", "_makeLong", "dirname", "basename", "extname", "format", "parse", "exports", "exports", "ActionType", "cred", "stat", "Buffer", "FileType", "Buffer", "cred", "Buffer", "Buffer", "Buffer", "cred", "dd", "fs", "fs", "fs", "Buffer", "rename", "exists", "stat", "lstat", "truncate", "unlink", "open", "readFile", "writeFile", "appendFile", "fstat", "close", "ftruncate", "fsync", "fdatasync", "write", "Buffer", "read", "buffer", "fchown", "fchmod", "futimes", "rmdir", "mkdir", "readdir", "link", "symlink", "readlink", "chown", "lchown", "chmod", "lchmod", "utimes", "lutimes", "realpath", "access", "watchFile", "unwatchFile", "watch", "createReadStream", "createWriteStream", "doOp", "fs", "Buffer", "cred", "Buffer", "handle", "exists", "resolve", "Buffer", "indexedDB", "fs", "initialize", "mounts", "config"]
}
