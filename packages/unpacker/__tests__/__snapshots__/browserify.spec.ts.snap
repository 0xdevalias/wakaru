// Vitest Snapshot v1

exports[`Browserify > testcases/browserify 1`] = `
Map {
  1 => "is-array",
  2 => "./calculator",
  3 => "./greeting",
}
`;

exports[`Browserify > testcases/browserify 2`] = `
[
  {
    "code": "/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given \`val\`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};",
    "id": 1,
    "isEntry": false,
  },
  {
    "code": "const isArray = require('is-array')

const pi = 3.14

module.exports.pi = pi

class Calculator {
    add(a, b) {
        return a + b
    }

    sub(a, b) {
        return a - b
    }

    sum(arr) {
        if (!isArray(arr)) throw new Error('Argument must be an array')
        return arr.reduce((a, b) => a + b, 0)
    }

    pi() {
        return pi
    }
}

module.exports.Calculator = Calculator

module.exports.mul = (a, b) => a * b

function div(a, b) {
    return a / b
}

module.exports.div = div

const isArr = arr => isArray(arr)

module.exports.isArr = isArr",
    "id": 2,
    "isEntry": false,
  },
  {
    "code": "const { add, pi } = require('./calculator')

class Greeting {
    constructor(name) {
        this.name = name
    }

    sayHello() {
        console.log(\`Hello \${this.name}. Your lucky number is \${add(pi, 2)}\`)
    }
}

module.exports = Greeting",
    "id": 3,
    "isEntry": false,
  },
  {
    "code": "const { Calculator, div, mul, pi } = require('./calculator')
const Greeting = require('./greeting')

const cal = new Calculator()
console.log(cal.add(pi, 2))
console.log(mul(1, 2))
console.log(div(1, 2))

const greeting = new Greeting('John')
greeting.sayHello()",
    "id": 4,
    "isEntry": true,
  },
]
`;
